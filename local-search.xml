<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>微信小程序学习</title>
    <link href="/2023/07/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"/>
    <url>/2023/07/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2022/07/25/nvme_fio/"/>
    <url>/2022/07/25/nvme_fio/</url>
    
    <content type="html"><![CDATA[<p>title: 华为网卡项目<br>date: 2021-12-01 11:30:15<br>tags:华为项目</p><h2 id="NVMe-oF概述"><a href="#NVMe-oF概述" class="headerlink" title="NVMe-oF概述"></a>NVMe-oF概述</h2><p>NVMe-oF全称是：Non-Volatile Memory Express over Fabrics。中文的意思是：基于Fabrics的非易失性存储标准。我将Fabric理解为网络架构，RDMA Fabric就有Infiniband，iWARP，RoCEv1，RoCEv2等多种传输协议。</p><h3 id="NVMe-oF和NVMe的关系"><a href="#NVMe-oF和NVMe的关系" class="headerlink" title="NVMe-oF和NVMe的关系"></a>NVMe-oF和NVMe的关系</h3><p>NVMe是什么：NVMe传输是一种抽象协议层，旨在提供可靠的NVMe命令和数据传输，是有关访问非易失性储存（通常是 SSD 磁盘）的接口标准。本质是上建立了多个计算机与存储设备的通路，提高搬运数据的速度。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211230163244922.png" alt="image-20211230163244922"></p><p>当前数据中心中的存储网络架构通常使用的是存储区域网络 (Storage Area Network, SAN) ，SAN 是一种基于块的存储，利用高速架构将服务器与其逻辑磁盘单元 (Logical Disk Unit, LUN) 相连。当前的SAN通常使用采用FC（Fibre Channel）光纤通道或者Ethernet进行远距离传输。其中SAN网络环境中，因采用存储设备类型的不同又可以分为FC-SAN(采用光纤通道存储产品)和IP-SAN(采用ISCSI存储设备)。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230170745869.png" alt="image-20211230170745869" style="zoom:50%;" /><p><strong>NVMe-oF的目的就是利用现有成熟的Fabric来跑NVMe，实现NVMe标准在PCIe总线上的扩展也就是把本地高速访问的优势暴露给远端应用。</strong>NVMe-oF可以实现ISCISI的功能，甚至可以更好。在长时间内，NVMe-oF和iSCSI还是长期并存的局面。iSCSI目前已经非常成熟，而NVMe-oF则刚刚开始发展，需要不断地完善，并且借鉴iSCSI协议的一些功能，以支持更多的功能。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230170818645.png" alt="image-20211230170818645" style="zoom:50%;" /><h3 id="NVMe-oF"><a href="#NVMe-oF" class="headerlink" title="NVMe-oF"></a>NVMe-oF</h3><p>2016年发布的 NVMe-oF 1.0 规范描述了两种Fabric，光纤通道(Fibre Channel)和远程直接内存访问 (RDMA) 。下图是NVME和各种Fabric的关系。可以看到NVMe-oF是在Fabric之上的。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230171628666.png" alt="image-20211230171628666" style="zoom:50%;" /><p>上图可以更好的展示为，左侧三个灰色框架代表的是NVMe在一个机器内的操作，右边是通过NVMe-oF把NVMe扩展到数据中心中。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230172937194.png" alt="image-20211230172937194" style="zoom:50%;" /><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230193645449.png" alt="image-20211230193645449" style="zoom:67%;" /><p>NVMe-oF的协议栈如下</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230195604296.png" alt="image-20211230195604296" style="zoom:50%;" /><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230201734587.png" alt="image-20211230201734587" style="zoom:50%;" /><p>NVMeoF协议栈访问流程：NVMe控制器端CSCCX，转换成NVMe命令，写完数据后，数据怎么返回去的。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20220725111730264.png" alt="image-20220725111730264"></p><h3 id="NVMe-Transport-Mapping（NVME传输映射）"><a href="#NVMe-Transport-Mapping（NVME传输映射）" class="headerlink" title="NVMe Transport Mapping（NVME传输映射）"></a>NVMe Transport Mapping（NVME传输映射）</h3><p><strong>NVMe over Fabrics 需要底层 NVMe 传输来提供可靠的 NVMe 命令和数据传输。</strong></p><p>在本地 NVMe 实现中，NVMe 命令和响应通过 PCIe 接口映射到主机中的共享内存。然而，fabric 是建立在发送和接收消息的概念之上的，在端之间没有共享内存。NVMe fabric消息传输旨在通过使用包含一个或多个 NVMe 命令或响应的“capsules”将 NVMe 命令和响应封装到基于消息的系统中。 capsules或capsules与数据的组合独立于特定的fabric，并通过所需fabric发送和接收。就是说<strong>NVMe和Fabric之间没有指定的关系，是松耦合的</strong>。 <strong>NVMe 传输是独立于任何物理互连属性的抽象协议层。</strong></p><p> 在NVMe over Fabrics中，整个 NVMe 多队列模型得到维护，使用普通的 NVMe 提交队列(submission queues)和完成队列(completion queues)，但封装在基于消息的传输上。 NVMe I/O 队列对(submission and completion)是为多核 CPU 设计的，这种低延迟的高效设计在 NVMe over Fabrics 中得到维护。</p><p> 下图显示了 NVMe 传输的分类和示例。 NVMe 传输包含内存模型、消息模型或两者的组合。 内存模型是一种通过执行显式内存读写操作在结构节点之间传输命令、响应和数据的模型，而消息模型是一种仅在结构节点之间发送包含命令capsules、响应capsules和数据的消息。 消息/内存模型使用消息和显式内存读写操作的组合在结构节点之间传输命令包、响应包和数据。 数据可以选择性地包含在命令包和响应包中。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230192640428.png" alt="image-20211230192640428" style="zoom:40%;" /><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230185100624.png" alt="image-20211230185100624" style="zoom:50%;" /><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">上面这两个图一个来自OverView（第二个图），一个来自specification(第一个图)，感觉有点冲突。</span><br></pre></td></tr></table></figure><p>在向 NVMe over Fabrics 设备发送复杂消息时，capsules允许将多条小消息作为一条消息发送，从而提高传输效率并减少延迟。 capsules是一个提交队列条目(submission queue entry)或一个完成队列条目(completion queue entry)，结合了一定数量的数据、元数据或 Scatter-Gather Lists (SGLs)。 元素的内容与本地 NVMe 协议相同，但capsules是一种将它们打包在一起以提高效率的方式。下图是capsules的具体架构。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211230190840475.png" alt="image-20211230190840475"></p><h3 id="NVMe"><a href="#NVMe" class="headerlink" title="NVMe"></a>NVMe</h3><p>NVMe是什么：NVMe是一种Host与SSD之间通讯的协议，它在协议栈中隶属高层。</p><p><img src="https://img-blog.csdn.net/20180417100139590" alt="img"></p><p>NVMe制定了Host与SSD之间通讯的命令，以及命令如何执行的。</p><p>NVMe有两种命令，一种叫Admin Command，用以Host管理和控制SSD；另外一种就是I/O Command，用以Host和SSD之间数据的传输。</p><p>NVMe有三种队列：Submission Queue （SQ），Completion Queue（CQ）和Doorbell Register （DB）。 SQ和CQ位于Host的内存中，DB则位于SSD的控制器内部。如下图所示：</p><p><img src="https://img-blog.csdn.net/20180417100922685" alt="img"></p><p>SQ位于Host内存中，Host要发送命令时，先把准备好的命令放在SQ中，然后通知SSD来取；CQ也是位于Host内存中，一个命令执行完成，成功或失败，SSD总会往CQ中写入命令完成状态。DB则是在Host发送命令时，不是直接往SSD中发送命令的，而是把命令准备好放在自己的内存中，Host就是通过写SSD端的DB寄存器来告知SSD命令已经处理完毕，可以前来检阅。流程如下图所示：</p><p><img src="https://img-blog.csdn.net/20180417101200769" alt="img"></p><ol><li>Host写命令到SQ，此时的命令在host的内存中；</li><li>Host写DB，通知NVMe Controller取命令。通过更新在Controller内部的寄存器SQ Tail Doorbell来完成。</li><li>Controller收到通知，于是从SQ中取命令。取走命令之后，需要在Controller内部的SQ Head Pointer寄存器中更新Head所在的位置。NVMe没有规定Command存入队列的执行顺序，Controller可以一次取出多个Command进行批量处理。</li><li>Controller执行命令。执行Read/Wirte Command时，这个过程也会与Host Memory进行数据传递。</li><li>命令执行完成，Controller往CQ中写指令执行结果。此时，Controller需要更新内部的CQ Tail Pointer寄存器。</li><li>Controller发短信通知Host指令完成。Controller通过发送一个中断信息告知Host。</li><li>收到短信，Host处理CQ，查看命令完成状态；</li><li>Host处理完CQ中的命令需要告知controller。Host更新Controller内部的CQ Head Doorbell。</li></ol><p>四个寄存器全部放在Controller内存中。也就是说Controller知道这SQ Tail/Head和CQ Tail/Head的全部信息。</p><p>而Host仅仅知道自己更新的两个信息SQ Tail和CQ Head。Controller把SQ Head和CQ Tail的信息写入Completion报文中，通知给host。</p><p>NVMe 访存路径</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20220725111306065.png" alt="image-20220725111306065"></p><h3 id="NVMe-over-ROCE"><a href="#NVMe-over-ROCE" class="headerlink" title="NVMe over ROCE"></a>NVMe over ROCE</h3><p>NVMe over RoCE 调用关系如下图所示，内核 nvme_rdma 模块相当于胶水层，连接 rdma stack 和 nvme core接口，即 NVMe 队列接口可以对接 RDMA 队列接口，进而调用下层 rdma stack 中 verbs 传输接口。</p><img src="https://pic4.zhimg.com/v2-adaad1b3a14e2fa115fe0472c8b0955f_r.jpg" alt="preview" style="zoom:50%;" /><h4 id="NVMeoF队列结构"><a href="#NVMeoF队列结构" class="headerlink" title="NVMeoF队列结构"></a>NVMeoF队列结构</h4><p>NVMeoF将NVMe队列映射到RDMA队列上。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20220725112852892.png" alt="image-20220725112852892"></p><p>Host端RNIC将NVMe SQE封装成网络命令包，作为RDMA报文内容（payload），通过RDMA传输到target端，Target端的RNIC解包之后，将SQE和数据放入target端主机的内存中，随后Target处理NVMe命令和数据；处理完之后，将NVMe CQE封装成RDMA响应包(Response)，放入RDMA完成队列中，返回给Host。</p><h2 id="FIO工具介绍"><a href="#FIO工具介绍" class="headerlink" title="FIO工具介绍"></a>FIO工具介绍</h2><p>FIO 工具是一款用于测试硬件存储性能的辅助工具，兼具灵活性、可靠性从而从众多性能测试工具中脱颖而出。磁盘的 I/O 是衡量硬件性能的最重要的指标之一，而 FIO 工具通过模拟 I/O负载对存储介质进行压力测试，并将存储介质的 I/O 数据直观的呈现出来。</p><p>f关于io介绍的网站：<a href="https://fio.readthedocs.io/en/latest/fio_doc.html#how-fio-works">https://fio.readthedocs.io/en/latest/fio_doc.html#how-fio-works</a></p><h3 id="fio操作"><a href="#fio操作" class="headerlink" title="fio操作"></a>fio操作</h3><p>让 fio 模拟所需的 I/O 工作负载的第一步是编写一个描述该特定设置的作业文件(job file)。 作业文件中可以定义要模拟的线程或者文件，通过共享参数定义全局部分，也可以定义每一线程的单独参数。运行时，fio 会解析此文件并按照描述设置所有内容。</p><h3 id="fio文件配置介绍"><a href="#fio文件配置介绍" class="headerlink" title="fio文件配置介绍"></a>fio文件配置介绍</h3><ol><li><p>I/O type</p><p>定义发布给文件的I/O模式，读、写、顺序、随机或者是否使用buffer.</p><ul><li><p>direct=bool</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">If value is true, use non-buffered I&#x2F;O. Default: false.</span><br></pre></td></tr></table></figure><p>这个值决定是否使用non-buffered I/O。</p><p>buffered IO指的是在内核和用户程序之间设置了一层缓冲区，用来提高IO读写的效率；</p><p>读取：硬盘—&gt;内核缓冲区—&gt;<strong>用户缓冲区</strong>—&gt;用户程序</p><p>写回：用户程序—&gt;<strong>用户缓冲区</strong>—&gt;内核缓冲区—&gt;硬盘</p></li><li><p>atomic=bool</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">If value is true, attempt to use atomic direct I&#x2F;O. Atomic writes are guaranteed to be stable once acknowledged by the operating system. </span><br></pre></td></tr></table></figure><p>如果值为 true，则尝试使用原子 I/O。原子I/O的写入是稳定的</p></li><li><p>readwrite=str，rw=str</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Type of I&#x2F;O pattern.</span><br><span class="line">read;write;trim;randread;randwrite;readwrite;randrw;trimwrite</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Block size</p><p>发出I/O的块大小，可以是单个值，也可以是个范围</p><ul><li><p>blocksize=int[,int][,int]</p><p>单个值适用于read、write和trim。 可以为read、write和trim指定逗号分隔的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The block size in bytes used for I&#x2F;O units. Default: 4096. A single value applies to reads, writes, and trims. Comma-separated values may be specified for reads, writes, and trims. A value not terminated in a comma applies to subsequent types.</span><br></pre></td></tr></table></figure></li><li><p>blocksize_range=irange[,irange][,irange], bsrange=irange[,irange][,irange]</p><p>I/O 单元的一系列块大小（以字节为单位）。 除非设置了 blocksize_unaligned，否则发出的 I/O 单元将始终是最小大小的倍数。<strong>bsrange=1k-4k,2k-8k.</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A range of block sizes in bytes for I&#x2F;O units. The issued I&#x2F;O unit will always be a multiple of the minimum size, unless blocksize_unaligned is set.</span><br><span class="line"></span><br><span class="line">Comma-separated ranges may be specified for reads, writes, and trims as described in blocksize.</span><br></pre></td></tr></table></figure></li></ul></li><li><p>I/O size</p><p>要读写的数据总量</p><ul><li><p>size=int</p><p>此作业的每个线程的文件 I/O 的总大小。 Fio 将一直运行直到传输了这么多字节，除非运行时受到其他选项的限制（例如runtime，或由 io_size 增加/减少）。</p></li></ul></li><li><p>I/O depth</p><p>如果 I/O 引擎是异步的，希望保持多大的队列深度</p><ul><li><p>iodepth=int</p><p>队列深度，要针对文件保持运行的 I/O 单元数。存储控制器可以处理的未完成I / O请求的数量。即对存储控制器的限制，该存储控制器可以处理I / O请求并将命令发送到磁盘（r / w），并且如果存在超出其处理能力的请求，则丢弃请求。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Number of I&#x2F;O units to keep in flight against the file.</span><br><span class="line">Note that increasing iodepth beyond 1 will not affect synchronous ioengines (except for small degrees when verify_async is in use). Even async engines may impose OS restrictions causing the desired depth not to be achieved. This may happen on Linux when using libaio and not setting direct&#x3D;1, since buffered I&#x2F;O is not async on that OS. Keep an eye on the I&#x2F;O depth distribution in the fio output to verify that the achieved depth is as expected. Default: 1.</span><br></pre></td></tr></table></figure></li><li><p>iodepth_batch_submit=int, iodepth_batch=int</p><p>一次提交多少I/O</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This defines how many pieces of I&#x2F;O to submit at once. It defaults to 1 which means that we submit each I&#x2F;O as soon as it is available, but can be raised to submit bigger batches of I&#x2F;O at the time. If it is set to 0 the iodepth value will be used.</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Job description</p><ul><li><p>numjobs=int</p><p>创建此作业的指定数量的克隆。 每个作业克隆都作为一个独立的线程或进程产生。 可用于设置更多执行相同操作的线程/进程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Create the specified number of clones of this job. Each clone of job is spawned as an independent thread or process. May be used to setup a larger number of threads&#x2F;processes doing the same thing. Each thread is reported separately; to see statistics for all clones as a whole, use group_reporting in conjunction with new_group. See --max-jobs. Default: 1.</span><br></pre></td></tr></table></figure><p>​    </p></li></ul></li></ol><h2 id="问题和解决方案"><a href="#问题和解决方案" class="headerlink" title="问题和解决方案"></a>问题和解决方案</h2><h3 id="RDMA"><a href="#RDMA" class="headerlink" title="RDMA"></a>RDMA</h3><ol><li><p>如果host端的一个qp中有多个请求在排队，网卡可以同时发出多个请求吗，还是只能一个一个发？</p></li><li><p>如果target端srq中一个wqe所指向的空间为4k，一个包大小为1k，那么target端来一个包应该先取一个wqe，然后接下来的3个包都用这个wqe？</p></li><li><p>如果2正确：host端有一个qp，网卡从该qp中同时取了两个命令发出，接收端先后收到了两个来自同一条qp的不同命令，这两个不同命令可以共用同一个wqe吗？</p></li><li><p>QP的一个IO会占用多少WQE，RDMA网卡不解析请求如何获知要多少WQE？</p></li><li><p>SRQ处会出现大IO堵塞小IO的情况</p></li><li><p>单个RDMA单端操作的数据量是否有上界？如果该操作数据量过大（100G），实际情况中是如何处理的？</p><p>MTU：The maximum size of a packet payload (not including headers) that can be sent / received from a port</p><p>A single request packet will result in multiple read response packets if the read length is greater than the PMTU.</p><p>Inbound RDMA Read Queue Depth (IRD)：The maximum number of incoming outstanding RDMA Read Requests that the RDMA-Capable Controller can handle on a particular RDMA-Capable Protocol Stream at the Data Source. For InfiniBand, the equivalent<br>for IRD is the Responder Resources.</p></li><li><p>target端触发RNR之后收到的包应该丢弃还是暂存？如果丢弃的话是后面来的包全部丢弃，还是只丢部分，也就是碰到SRQ空闲时就不丢，只有碰到SRQ满才丢</p></li><li><p>单个命令，I/O单元和packets的关系</p></li></ol><h3 id="NVMe-1"><a href="#NVMe-1" class="headerlink" title="NVMe"></a>NVMe</h3><h3 id="NVMeoF"><a href="#NVMeoF" class="headerlink" title="NVMeoF"></a>NVMeoF</h3><ol><li>Target端收到NVMe Read命令，应用轮询NVMe Submission queue后，是否可以同时进行这两种操作：（1）通知SSD准备数据到buffer中  2）下发RDMA Write命令，让网卡从SSD的Buffer中拖数据</li><li></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>NVMe概述</title>
    <link href="/2022/01/02/NVMe%E6%A6%82%E8%BF%B0/"/>
    <url>/2022/01/02/NVMe%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="NVMe概述"><a href="#NVMe概述" class="headerlink" title="NVMe概述"></a>NVMe概述</h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/12/01/%E5%8D%8E%E4%B8%BA%E7%BD%91%E5%8D%A1%E9%A1%B9%E7%9B%AE/"/>
    <url>/2021/12/01/%E5%8D%8E%E4%B8%BA%E7%BD%91%E5%8D%A1%E9%A1%B9%E7%9B%AE/</url>
    
    <content type="html"><![CDATA[<p>title: 华为网卡项目<br>date: 2021-12-01 11:30:15<br>tags:华为项目</p><h1 id="DPDK和SPDK"><a href="#DPDK和SPDK" class="headerlink" title="DPDK和SPDK"></a>DPDK和SPDK</h1><h2 id="DPDK-Data-Plane-Development-Kit"><a href="#DPDK-Data-Plane-Development-Kit" class="headerlink" title="DPDK(Data Plane Development Kit)"></a>DPDK(Data Plane Development Kit)</h2><p>简单说，DPDK应用程序运行在操作系统的User Space，利用自身提供的数据面库进行收发包处理，绕过了Linux内核态协议栈，以提升报文处理效率。</p><p>DPDK是一组lib库和工具包的集合。最简单的架构描述如下图所示：</p><p><img src="https://pic3.zhimg.com/80/v2-f4b703475096e19c669d6cfc7128311e_1440w.jpg" alt="img"></p><p>DPDK由于做用户态polling mode，需要对线程模型、内存管理等系统级的资源做定制的管理。例如dpdk中通过使用cpu的亲和性对thread和core做绑定，单个thread独享一个cpu core。再例如dpdk所使用的大页内存等等。这些基础资源的管理都是为用户态polling mode服务。</p><h2 id="SPDK（Storage-Performance-Development-Kit）"><a href="#SPDK（Storage-Performance-Development-Kit）" class="headerlink" title="SPDK（Storage Performance Development Kit）"></a>SPDK（Storage Performance Development Kit）</h2><p>关于SPDK的介绍<a href="https://www.cnblogs.com/vlhn/p/7727141.html">https://www.cnblogs.com/vlhn/p/7727141.html</a></p><p>SPDK(存储性能开发套件)为<strong>编写用户态存储应用</strong>提供了一套工具和库函数。</p><p>SPDK的基石是一个运行在用户空间的、采用轮询模式的、异步的、无锁的NVMe驱动。用户空间应用程序可直接访问SSD盘，而且是零拷贝、高度并行地访问SSD盘。</p><p>spdk和dpdk的区别在于，spdk主要针对存储性能的提高，关键是nvme驱动。dpdk主要针对网络性能的提高。核心思想spdk和dpdk大致相同。因此也需要对系统资源做独特的管理，这点和dpdk一样。为了资源复用，spdk在EAL这一层统一采用dpdk的实现。无须再去自己实现一套内存管理、thread模型等底层机制。</p><h1 id="RDMA相关的基础知识"><a href="#RDMA相关的基础知识" class="headerlink" title="RDMA相关的基础知识"></a>RDMA相关的基础知识</h1><p>这里有一篇汇总的博客记录RDMA的相关文档和相关知识<a href="https://blog.csdn.net/bandaoyu/article/details/112861368">https://blog.csdn.net/bandaoyu/article/details/112861368</a></p><p>还有这一篇<a href="https://blog.csdn.net/t1506376703/article/details/106911631/?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-0.opensearchhbase&amp;spm=1001.2101.3001.4242.1">https://blog.csdn.net/t1506376703/article/details/106911631/?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-0.opensearchhbase&amp;spm=1001.2101.3001.4242.1</a></p><h2 id="实现RDMA的技术"><a href="#实现RDMA的技术" class="headerlink" title="实现RDMA的技术"></a>实现RDMA的技术</h2><p>目前，有三种支持RDMA的技术：IB(InfiniBand)、RoCE(RDMA over Converged Ethernet)、以太网iWARP(the Internet Wide Area RDMA Protocol)。这三种技术使用同一API，但它们有着不同的物理层和链路层。</p><p>IB: 原生支持RDMA，它从硬件级别保证可靠传输；</p><p>iWARP: 基于 以太网之上的TCP or SCTP 做 RDMA，利用 TCP or SCTP 达到可靠传输，对网络设备的要求比较少；</p><p>RoCE: 基于以太网做 RDMA，消耗的资源比 iWARP 少，支持的特性比 iWARP 多，需要额外做可靠传输。</p><p>在以太网解决方案中，RoCE相对于iWARP来说有着明显的优势，这些优势体现在延时、吞吐率和 CPU负载。<br><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211207153558432.png" alt="image-20211207153558432" style="zoom:50%;" /></p><h2 id="OFED"><a href="#OFED" class="headerlink" title="OFED"></a>OFED</h2><p>Linux Drivers Mellanox OpenFabrics Enterprise Distribution for Linux (MLNX_OFED)是一个单独的VPI(Virtual Protocol Interconnect，虚拟协议互联)软件栈。是网卡的驱动</p><h2 id="infiniband和Ethernet的区别"><a href="#infiniband和Ethernet的区别" class="headerlink" title="infiniband和Ethernet的区别"></a>infiniband和Ethernet的区别</h2><p>InfiniBand是一种开放标准的高带宽，低时延，高可靠的<a href="https://www.zhihu.com/search?q=%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94%E6%8A%80%E6%9C%AF&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:163104439%7D">网络互联技术</a>。</p><p>对于Ethernet毋庸多言，和IP技术构成了目前世界上整个互联网络大厦的基石，所有人与智能设备皆依靠Ethernet实现万物互联，这与其设计初衷就是为了能够实现更好的兼容有关，能让不同的系统可以更好的互连互通，这样使得Ethernet自诞生之初就具有非常强的适应性，经过数十年的发展成为互联网中事实上的标准。</p><p>而InfiniBand，作为标准制定的初衷是为了解决高性能计算场景中突破集群中数据传输瓶颈痛点应运而生的一种互连标准，从制定之初就定位为高端应用，互连互通不是主要矛盾，高性能通信才是主要切入点，所以，相对于<a href="https://www.zhihu.com/search?q=Ethernet%E6%8A%80%E6%9C%AF&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:163104439%7D">Ethernet技术</a>而言，由于定位的差异导致InfiniBand与生俱来就有很多和Ethernet的不同，主要表现在带宽、时延、网络可靠性、和组网方式上。</p><p><strong>InfiniBand就是使用了RDMA技术</strong>。</p><p>实验室的网卡是ConnectX® -5 EN Card，是没有办法进行模式选择的，也就是说没有办法在以太网和IB中间进行选择，只可以使用以太网。而在以太网中如果要跑RDMA的话，需要使用RoCE技术。</p><h2 id="RDMA客户端和服务器端交流的几个方式"><a href="#RDMA客户端和服务器端交流的几个方式" class="headerlink" title="RDMA客户端和服务器端交流的几个方式"></a>RDMA客户端和服务器端交流的几个方式</h2><ol><li><p>send &amp; recieve</p><p>跟TCP/IP的send/recv是类似的，不同的是RDMA是基于消息的数据传输协议（而不是基于字节流的传输协议），所有数据包的组装都在RDMA硬件上完成的，也就是说OSI模型中的下面4层(传输层，网络层，数据链路层，物理层)都在RDMA硬件上完成。</p></li><li><p>read</p><p>RDMA读操作本质上就是Pull操作, 把<a href="https://www.zhihu.com/search?q=%E8%BF%9C%E7%A8%8B%E7%B3%BB%E7%BB%9F%E5%86%85%E5%AD%98&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:55142557%7D">远程系统内存</a>里的数据拉回到本地系统的内存里。</p></li><li><p>write</p></li></ol><h2 id="RoCE"><a href="#RoCE" class="headerlink" title="RoCE"></a>RoCE</h2><h1 id="基础的对比实验"><a href="#基础的对比实验" class="headerlink" title="基础的对比实验"></a>基础的对比实验</h1><p>在RDMA技术中，由于在RDMA中运用了锁争夺的机制，导致在线程增多的情况下，锁机制的延展性会出现问题。即线程增加会导致系统的吞吐量下降。基础的对照实验就是要体现出上述的问题。即跑出来下图的效果</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211202130806588.png" alt="image-20211202130806588"></p><p>论文中对这一块的描述是</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211209191906546.png" alt="image-20211209191906546"></p><h2 id="基础流程"><a href="#基础流程" class="headerlink" title="基础流程"></a>基础流程</h2><ol><li>安装机器，完成网卡的插入。（√）</li><li>找到直连光纤，完成两个机器的直连，线没有问题的话网卡会亮黄灯。（√）</li><li>安装驱动，设置网卡的静态ip，完成两个机器的连通。</li></ol><p>搭机子，通过交换机进行联通。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211202130940305.png" alt="image-20211202130940305"></p><p>使用驱动检查网卡的性能和使用情况。查看两台机器的连通性。</p><p>按照下图设置实验数据</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211202131719170.png" alt="image-20211202131719170"></p><p>图中cycle的定义如下</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211202131923397.png" alt="image-20211202131923397"></p><p>每个线程发送4KB大小的文件，每个线程和远程机之间创建了1000个连接，每一个cycle代表把一个4kb的数据通过这1000个连接发到远端的主机</p><h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><p>在两台机子上进行操作，每台机子的配置如下</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211202092739555.png" alt="image-20211202092739555"></p><h2 id="装卡"><a href="#装卡" class="headerlink" title="装卡"></a>装卡</h2><p>分别将两个网卡插到对应的两个机子上。然后用光纤和光模块对两个机子的网卡进行连接，网卡会闪黄灯。如果没有闪黄灯的话，一定是光纤或者光模块出现了问题</p><h2 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h2><h3 id="环境检测"><a href="#环境检测" class="headerlink" title="环境检测"></a>环境检测</h3><p>千万注意：要先进行环境的检测，检测你的环境是否安装了IB卡！</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211204100538405.png" alt="image-20211204100538405"></p><h3 id="下载驱动安装包"><a href="#下载驱动安装包" class="headerlink" title="下载驱动安装包"></a>下载驱动安装包</h3><p>驱动的下载网站<a href="https://blog.csdn.net/ljlfather/article/details/102930454">https://blog.csdn.net/ljlfather/article/details/102930454</a></p><p>进入这个网址<a href="https://www.mellanox.com/page/products_dyn?product_family=26&amp;mtag=linux_sw_drivers%EF%BC%8C%E6%89%BE%E5%88%B0%E5%92%8C%E8%87%AA%E5%B7%B1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%AF%B9%E5%BA%94%E7%9A%84%E9%A9%B1%E5%8A%A8%E8%BF%9B%E8%A1%8C%E4%B8%8B%E8%BD%BD%E3%80%82%E6%AF%94%E5%A6%82%EF%BC%8C%E6%88%91%E5%B0%B1%E5%85%88%E4%B8%8B%E8%BD%BD%E5%88%B0%E4%BA%86mlnx-en-3.3-1.0.0.0.tgz">https://www.mellanox.com/page/products_dyn?product_family=26&amp;mtag=linux_sw_drivers，找到和自己的系统对应的驱动进行下载。比如，我就先下载到了mlnx-en-3.3-1.0.0.0.tgz</a>, 装上后TCP正常工作没问题，RDMA不能用。然后从各种官网的网页里面的各种方法乱试，又找到一个MLNX_OFED_LINUX-3.3-1.0.4.0-ubuntu14.04-x86_64.tgz, 这个才对了。</p><p>本次下载的版本如下图所示</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211204131059622.png" alt="image-20211204131059622"></p><p>之后进入驱动的目录进行安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;mlnxofedinstall --force</span><br></pre></td></tr></table></figure><p>重新加载驱动</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211204101116532.png" alt="image-20211204101116532"></p><p>之后使用命令<code>ibstatus</code>你就可以看到网卡对应的接口的信息了</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211204101209872.png" alt="image-20211204101209872"></p><p>可以发现，这里的link_layer是Ethernet，代表当前的模式是以太网。</p><p>在想把模式改成IB的时候，使用命令<code>mlxconfig -d /dev/mst/mt4119_pciconf0 query</code>查看网卡的基本信息</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211204102717723.png" alt="image-20211204102717723"></p><p>发现网卡的类型是EN，仅支持Ethernet模式。所以如果要在交换机上使用RDMA的话需要安装RoCE。但是本次实验是两个机子直连的，所以直接使用Ethernet模式就可以了。</p><h2 id="测试及驱动使用说明"><a href="#测试及驱动使用说明" class="headerlink" title="测试及驱动使用说明"></a>测试及驱动使用说明</h2><p>两个机子都安装好驱动以后</p><p>一台机子作为服务器端，运行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ib_send_bw -a -c UD -d mlx4_0 -i 1</span><br></pre></td></tr></table></figure><p>另一台机子作为客户端，运行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ib_send_bw -a -c UD -d mlx4_0 -i 1 172.16.0.102</span><br></pre></td></tr></table></figure><p>ib_send命令是测试 RDMA 发送处理确定带宽</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211207144656527.png" alt="image-20211207144656527"></p><p>代表测试成功</p><h3 id="相关命令的使用说明"><a href="#相关命令的使用说明" class="headerlink" title="相关命令的使用说明"></a>相关命令的使用说明</h3><ol><li><p>如果要使用srq，就在命令行的最后加上 <strong>–use-srq</strong></p></li><li><p>ibstatus：查看网卡的基本信息</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211207150754499.png" alt="image-20211207150754499" style="zoom:80%;" /></li><li><p>ib_send_bw：Bandwith and latency test using send transactions.</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211209085626412.png" alt="image-20211209085626412"></p><p>参数说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ib_send_bw [-p TCP_port][-d device][-i IB_port][-c RC|UC|UD][-m mtu] [-s size][-a][-t tdepth][g][-r rdepth][-n iters][-I size][-b][-V][-e] [-N][-F][IP_address]</span><br><span class="line"></span><br><span class="line">where:</span><br><span class="line"></span><br><span class="line">TCP_port is the TCP port.(本次实验不怎么用到)</span><br><span class="line">device is the InfiniBand device.</span><br><span class="line">IB_port is the InfiniBand port.</span><br><span class="line">mtu is the size of the MTU.</span><br><span class="line">size is the size of the messages.</span><br><span class="line">tdepth is the size of the TX queue.</span><br><span class="line">rdepth is the size of the RX queue.</span><br><span class="line">iters is the number of message exchanges.</span><br><span class="line">IP_address is the IP address of the remote node host</span><br><span class="line"></span><br><span class="line">RC:面向连接的可靠服务</span><br><span class="line">UC:面向连接的不可靠服务</span><br><span class="line">UD:面向数据报的不可靠服务</span><br><span class="line">RD：面向非连接（类似UDP）的可靠服务</span><br><span class="line">面向连接 vs 面向数据报</span><br><span class="line">相同点：两者的通信均包括双方QP对的参与</span><br><span class="line">不同点：面向连接的通信若有N个节点与之通信，本机需要N个QP对;面向数据报的通信可以做到N个节点与之通信，本机仅需一个QP队.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211207161755180.png" alt="image-20211207161755180"></p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211207161827345.png" alt="image-20211207161827345"></p><p>为了体现多端的拥塞，本次实验多是使用的RC</p></li><li></li></ol><h2 id="实验具体配置"><a href="#实验具体配置" class="headerlink" title="实验具体配置"></a>实验具体配置</h2><h4 id="卸载驱动"><a href="#卸载驱动" class="headerlink" title="卸载驱动"></a>卸载驱动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;sbin&#x2F;ofed_uninstall.sh</span><br></pre></td></tr></table></figure><h2 id="配置ip地址"><a href="#配置ip地址" class="headerlink" title="配置ip地址"></a>配置ip地址</h2><h3 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim &#x2F;etc&#x2F;network&#x2F;interfaces</span><br></pre></td></tr></table></figure><p>在文件中添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">auto enp1s0</span><br><span class="line">iface enp1s0 inet static</span><br><span class="line">address 172.16.0.104</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">broadcast 172.16.0.255</span><br></pre></td></tr></table></figure><p>enp1s0是网卡名称，通过ifconfig查看，address是要给infiniband网卡配置的ip地址。</p><p>重启网络服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service networking restart</span><br></pre></td></tr></table></figure><h3 id="Centos"><a href="#Centos" class="headerlink" title="Centos"></a>Centos</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ib0</span><br></pre></td></tr></table></figure><p>添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">DEVICE&#x3D;ib0</span><br><span class="line">BOOTPROTO&#x3D;static</span><br><span class="line">IPADDR&#x3D;172.16.0.104</span><br><span class="line">NETMASK&#x3D;255.255.255.0</span><br><span class="line">BROADCAST&#x3D;172.16.0.255</span><br><span class="line">NETWORK&#x3D;172.16.0.0</span><br><span class="line">ONBOOT&#x3D;yes</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重启网口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ifdown ib0</span><br><span class="line">sudo ifup ib0</span><br></pre></td></tr></table></figure><h2 id="安装RoCE"><a href="#安装RoCE" class="headerlink" title="安装RoCE"></a>安装RoCE</h2><h2 id="NVMe-oF概述"><a href="#NVMe-oF概述" class="headerlink" title="NVMe-oF概述"></a>NVMe-oF概述</h2><p>NVMe-oF全称是：Non-Volatile Memory Express over Fabrics。中文的意思是：基于Fabrics的非易失性存储标准。我将Fabric理解为网络架构，RDMA Fabric就有Infiniband，iWARP，RoCEv1，RoCEv2等多种传输协议。</p><h3 id="NVMe-oF和NVMe的关系"><a href="#NVMe-oF和NVMe的关系" class="headerlink" title="NVMe-oF和NVMe的关系"></a>NVMe-oF和NVMe的关系</h3><p>NVMe是什么：NVMe传输是一种抽象协议层，旨在提供可靠的NVMe命令和数据传输，是有关访问非易失性储存（通常是 SSD 磁盘）的接口标准。本质是上建立了多个计算机与存储设备的通路，提高搬运数据的速度。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211230163244922.png" alt="image-20211230163244922"></p><p>当前数据中心中的存储网络架构通常使用的是存储区域网络 (Storage Area Network, SAN) ，SAN 是一种基于块的存储，利用高速架构将服务器与其逻辑磁盘单元 (Logical Disk Unit, LUN) 相连。当前的SAN通常使用采用FC（Fibre Channel）光纤通道或者Ethernet进行远距离传输。其中SAN网络环境中，因采用存储设备类型的不同又可以分为FC-SAN(采用光纤通道存储产品)和IP-SAN(采用ISCSI存储设备)。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230170745869.png" alt="image-20211230170745869" style="zoom:50%;" /><p><strong>NVMe-oF的目的就是利用现有成熟的Fabric来跑NVMe，实现NVMe标准在PCIe总线上的扩展也就是把本地高速访问的优势暴露给远端应用。</strong>NVMe-oF可以实现ISCISI的功能，甚至可以更好。在长时间内，NVMe-oF和iSCSI还是长期并存的局面。iSCSI目前已经非常成熟，而NVMe-oF则刚刚开始发展，需要不断地完善，并且借鉴iSCSI协议的一些功能，以支持更多的功能。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230170818645.png" alt="image-20211230170818645" style="zoom:50%;" /><h3 id="NVMe-oF"><a href="#NVMe-oF" class="headerlink" title="NVMe-oF"></a>NVMe-oF</h3><p>2016年发布的 NVMe-oF 1.0 规范描述了两种Fabric，光纤通道(Fibre Channel)和远程直接内存访问 (RDMA) 。下图是NVME和各种Fabric的关系。可以看到NVMe-oF是在Fabric之上的。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230171628666.png" alt="image-20211230171628666" style="zoom:50%;" /><p>上图可以更好的展示为，左侧三个灰色框架代表的是NVMe在一个机器内的操作，右边是通过NVMe-oF把NVMe扩展到数据中心中。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230172937194.png" alt="image-20211230172937194" style="zoom:50%;" /><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230193645449.png" alt="image-20211230193645449" style="zoom:67%;" /><p>NVMe-oF的协议栈如下</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230195604296.png" alt="image-20211230195604296" style="zoom:50%;" /><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230201734587.png" alt="image-20211230201734587" style="zoom:50%;" /><p>NVMeoF协议栈访问流程</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20220725111730264.png" alt="image-20220725111730264"></p><h3 id="NVMe-Transport-Mapping（NVME传输映射）"><a href="#NVMe-Transport-Mapping（NVME传输映射）" class="headerlink" title="NVMe Transport Mapping（NVME传输映射）"></a>NVMe Transport Mapping（NVME传输映射）</h3><p><strong>NVMe over Fabrics 需要底层 NVMe 传输来提供可靠的 NVMe 命令和数据传输。</strong></p><p>在本地 NVMe 实现中，NVMe 命令和响应通过 PCIe 接口映射到主机中的共享内存。然而，fabric 是建立在发送和接收消息的概念之上的，在端之间没有共享内存。NVMe fabric消息传输旨在通过使用包含一个或多个 NVMe 命令或响应的“capsules”将 NVMe 命令和响应封装到基于消息的系统中。 capsules或capsules与数据的组合独立于特定的fabric，并通过所需fabric发送和接收。就是说<strong>NVMe和Fabric之间没有指定的关系，是松耦合的</strong>。 <strong>NVMe 传输是独立于任何物理互连属性的抽象协议层。</strong></p><p> 在NVMe over Fabrics中，整个 NVMe 多队列模型得到维护，使用普通的 NVMe 提交队列(submission queues)和完成队列(completion queues)，但封装在基于消息的传输上。 NVMe I/O 队列对(submission and completion)是为多核 CPU 设计的，这种低延迟的高效设计在 NVMe over Fabrics 中得到维护。</p><p> 下图显示了 NVMe 传输的分类和示例。 NVMe 传输包含内存模型、消息模型或两者的组合。 内存模型是一种通过执行显式内存读写操作在结构节点之间传输命令、响应和数据的模型，而消息模型是一种仅在结构节点之间发送包含命令capsules、响应capsules和数据的消息。 消息/内存模型使用消息和显式内存读写操作的组合在结构节点之间传输命令包、响应包和数据。 数据可以选择性地包含在命令包和响应包中。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230192640428.png" alt="image-20211230192640428" style="zoom:40%;" /><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230185100624.png" alt="image-20211230185100624" style="zoom:50%;" /><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">上面这两个图一个来自OverView（第二个图），一个来自specification(第一个图)，感觉有点冲突。</span><br></pre></td></tr></table></figure><p>在向 NVMe over Fabrics 设备发送复杂消息时，capsules允许将多条小消息作为一条消息发送，从而提高传输效率并减少延迟。 capsules是一个提交队列条目(submission queue entry)或一个完成队列条目(completion queue entry)，结合了一定数量的数据、元数据或 Scatter-Gather Lists (SGLs)。 元素的内容与本地 NVMe 协议相同，但capsules是一种将它们打包在一起以提高效率的方式。下图是capsules的具体架构。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211230190840475.png" alt="image-20211230190840475"></p><h3 id="NVMe"><a href="#NVMe" class="headerlink" title="NVMe"></a>NVMe</h3><p>NVMe是什么：NVMe是一种Host与SSD之间通讯的协议，它在协议栈中隶属高层。</p><p><img src="https://img-blog.csdn.net/20180417100139590" alt="img"></p><p>NVMe制定了Host与SSD之间通讯的命令，以及命令如何执行的。</p><p>NVMe有两种命令，一种叫Admin Command，用以Host管理和控制SSD；另外一种就是I/O Command，用以Host和SSD之间数据的传输。</p><p>NVMe有三种队列：Submission Queue （SQ），Completion Queue（CQ）和Doorbell Register （DB）。 SQ和CQ位于Host的内存中，DB则位于SSD的控制器内部。如下图所示：</p><p><img src="https://img-blog.csdn.net/20180417100922685" alt="img"></p><p>SQ位于Host内存中，Host要发送命令时，先把准备好的命令放在SQ中，然后通知SSD来取；CQ也是位于Host内存中，一个命令执行完成，成功或失败，SSD总会往CQ中写入命令完成状态。DB则是在Host发送命令时，不是直接往SSD中发送命令的，而是把命令准备好放在自己的内存中，Host就是通过写SSD端的DB寄存器来告知SSD命令已经处理完毕，可以前来检阅。流程如下图所示：</p><p><img src="https://img-blog.csdn.net/20180417101200769" alt="img"></p><ol><li>Host写命令到SQ，此时的命令在host的内存中；</li><li>Host写DB，通知NVMe Controller取命令。通过更新在Controller内部的寄存器SQ Tail Doorbell来完成。</li><li>Controller收到通知，于是从SQ中取命令。取走命令之后，需要在Controller内部的SQ Head Pointer寄存器中更新Head所在的位置。NVMe没有规定Command存入队列的执行顺序，Controller可以一次取出多个Command进行批量处理。</li><li>Controller执行命令。执行Read/Wirte Command时，这个过程也会与Host Memory进行数据传递。</li><li>命令执行完成，Controller往CQ中写指令执行结果。此时，Controller需要更新内部的CQ Tail Pointer寄存器。</li><li>Controller发短信通知Host指令完成。Controller通过发送一个中断信息告知Host。</li><li>收到短信，Host处理CQ，查看命令完成状态；</li><li>Host处理完CQ中的命令需要告知controller。Host更新Controller内部的CQ Head Doorbell。</li></ol><p>四个寄存器全部放在Controller内存中。也就是说Controller知道这SQ Tail/Head和CQ Tail/Head的全部信息。</p><p>而Host仅仅知道自己更新的两个信息SQ Tail和CQ Head。Controller把SQ Head和CQ Tail的信息写入Completion报文中，通知给host。</p><p>NVMe 访存路径</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20220725111306065.png" alt="image-20220725111306065"></p><h4 id="NVMe-Controller-Memory-Buffer-控制器内存缓冲区"><a href="#NVMe-Controller-Memory-Buffer-控制器内存缓冲区" class="headerlink" title="NVMe Controller Memory Buffer(控制器内存缓冲区)"></a>NVMe Controller Memory Buffer(控制器内存缓冲区)</h4><p>controller通过将 CAP.CMBS 设置为“1”来指示对 CMB 的支持。 host通过将 CMBMSC.CRE 设置为“1”来表示使用 CMB 的意图。 一旦该位设置为“1”，controller就会通过 CMBLOC 和 CMBSZ 属性指示 CMB 的属性.</p><p>CMB 可用于多种用途。 controller通过在 CMBSZ 属性中设置支持标志来指示内存可用于哪些目的。</p><h3 id="NVMe-over-ROCE"><a href="#NVMe-over-ROCE" class="headerlink" title="NVMe over ROCE"></a>NVMe over ROCE</h3><p>NVMe over RoCE 调用关系如下图所示，内核 nvme_rdma 模块相当于胶水层，连接 rdma stack 和 nvme core接口，即 NVMe 队列接口可以对接 RDMA 队列接口，进而调用下层 rdma stack 中 verbs 传输接口。</p><img src="https://pic4.zhimg.com/v2-adaad1b3a14e2fa115fe0472c8b0955f_r.jpg" alt="preview" style="zoom:50%;" /><h4 id="NVMeoF队列结构"><a href="#NVMeoF队列结构" class="headerlink" title="NVMeoF队列结构"></a>NVMeoF队列结构</h4><p>NVMeoF将NVMe队列映射到RDMA队列上。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20220725112852892.png" alt="image-20220725112852892"></p><p>Host端RNIC将NVMe SQE封装成网络命令包，作为RDMA报文内容（payload），通过RDMA传输到target端，Target端的RNIC解包之后，将SQE和数据放入target端主机的内存中，随后Target处理NVMe命令和数据；处理完之后，将NVMe CQE封装成RDMA响应包(Response)，放入RDMA完成队列中，返回给Host。</p><h2 id="XRC（扩展可靠连接技术）网卡模式"><a href="#XRC（扩展可靠连接技术）网卡模式" class="headerlink" title="XRC（扩展可靠连接技术）网卡模式"></a>XRC（扩展可靠连接技术）网卡模式</h2><p>使用SRQ虽然能够大大减少进程的接收缓冲区数目，但是它仍然需要在每个进程之间都建立连接。</p><p>在多核系统上， 一个节点内往往运行多个进程，这就会使得单个节点上的连接数目成倍增加，内存开销也会成倍增加。为了解决这个问题，扩展可靠连接(Extended Reliable Connection，简称 XRC)技术被引入到了InfiniBand传输服务中。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20220122194819302.png" alt="image-20220122194819302" style="zoom:50%;" /><p>允许发送方在发送工作请求里指定远端接收队列。如果使用了SRQ，这意味着消息发送者可以指定消息在达到目的节点后由哪个SRQ来接收，因为SRQ是独立于连接之外能够被多个QP所共享的资源，所以XRC相当于变相地支持了一个本地QP可以向多个远端QP发送消息，也就是说，通过XRC一个进程只需要一条连接或者一个QP即可向远端节点上的所有进程发送消息。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20220122194215743.png" alt="image-20220122194215743"></p><p>XRC 在请求方(requester)的操作与 RC 类似，在响应方(responder)与 RD 类似。由于这种不对称性，XRC 传输服务中的传输对象有一些独特的特征。</p><ol><li>XRC INI QP 与常规 RC QP 类似，但没有响应端</li><li>XRC TGT QP 类似于 RD EEC，但没有请求方</li><li>XRC SRQ 类似于 RD QP，但没有请求方 </li></ol><table><thead><tr><th align="left">名称</th><th>含义</th></tr></thead><tbody><tr><td align="left">XRC</td><td>eXtended Reliable Connected transport service</td></tr><tr><td align="left">XRC INI QP</td><td>XRC Initiator QP。这是 XRC 操作的发起者队列。 XRC INI QP 用于发出 XRC 传出请求，并且没有响应(responder)方。 XRC 传入请求将由 XRC TGT QP 处理</td></tr><tr><td align="left">XRC TGT QP</td><td>XRC Target QP。这是 XRC 操作的响应者。 XRC TGT QP（与 XRC SRQ 一起）用于处理传入的 XRC 请求。 XRC TGT QP 没有请求方。 XRC 传出请求通过 XRC INI QP 发出</td></tr><tr><td align="left">XRC SRQ</td><td>这是为传入的 XRC 请求 post Receive WQE 的Receive Queue。 XRC 请求数据包在扩展标头 (XRCETH) 中携带目标 XRC SRQ 编号，如果需要，将从该编号中获取接收 WQE</td></tr><tr><td align="left">XRC Domain</td><td>用于关联 XRC TGT QP 和 XRC SRQ 的属性。 XRC 数据包只能以与它们的目的地 XRC TGT QP 相同的 XRC Domain中的 XRC SRQ 为目标</td></tr><tr><td align="left">XRCETH</td><td>XRC Extended Transport Header. Present in XRC request packets.</td></tr></tbody></table><h1 id="实验的相关命令和具体参数"><a href="#实验的相关命令和具体参数" class="headerlink" title="实验的相关命令和具体参数"></a>实验的相关命令和具体参数</h1><h2 id="抓包工具"><a href="#抓包工具" class="headerlink" title="抓包工具"></a>抓包工具</h2><h3 id="ibdump"><a href="#ibdump" class="headerlink" title="ibdump"></a>ibdump</h3><h2 id="性能测试工具"><a href="#性能测试工具" class="headerlink" title="性能测试工具"></a>性能测试工具</h2><h3 id="ib-send-bw"><a href="#ib-send-bw" class="headerlink" title="ib_send_bw"></a>ib_send_bw</h3><p>具体内容可以看gitlab网页<a href="https://github.com/linux-rdma/perftest">https://github.com/linux-rdma/perftest</a></p><ol><li><p>服务器端运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ib_send_bw -a -c UD -d mlx5_0 -i 1 -z</span><br></pre></td></tr></table></figure></li><li><p>客户端运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ib_send_bw -a -c UD -d mlx5_0 -i 1 -z 172.16.0.106</span><br></pre></td></tr></table></figure></li></ol><p>重点解释一下<code>-z</code>这个参数是什么意思：Communicate with rdma_cm module to exchange data - use regular QPs</p><h1 id="分流访问NVMe-SSD"><a href="#分流访问NVMe-SSD" class="headerlink" title="分流访问NVMe SSD"></a>分流访问NVMe SSD</h1><h2 id="SPDK-NVMe-oF的介绍"><a href="#SPDK-NVMe-oF的介绍" class="headerlink" title="SPDK NVMe-oF的介绍"></a>SPDK NVMe-oF的介绍</h2><p>NVMe over Fabrics (NVMe-oF) 协议在 RDMA（iWARP、RoCE、InfiniBand™）、光纤通道和 TCP 等网络结构上扩展了 NVM Express* (NVMe) 块协议的并行性和效率。SPDK 提供用户空间 NVMe-oF 的target和initiator，可通过网络扩展 SPDK 堆栈其余部分的软件效率。SPDK NVMe-oF 的target使用 SPDK user-space, polled-mode NVMe driver 向 NVMe 设备提交和完成 I/O 请求，从而减少软件处理开销。 同样，它将连接固定到 CPU 内核以避免同步和缓存抖动，以便这些连接的数据尽可能靠近 CPU 缓存。</p><p>SPDK NVMe-oF target and initiator 使用 Infiniband/RDMA verbs API 来访问支持RDMA的NIC。目前只针对ROCEV2进行了测试。与 SPDK NVMe 驱动程序类似，SPDK 提供了一个user-space, lockless, polled-mode的 NVMe-oF  initiator。host使用initiator建立连接并向 NVMe-oF target内的 NVMe 子系统提交 I/O 请求。NVMe 子系统包含namespace，每个namespace都映射到通过 SPDK 的 bdev 层公开的单个块设备。SPDK 的 bdev 层是块设备抽象层和通用块存储堆栈，在许多操作系统都有类似实现。使用 bdev 接口将存储介质与用于访问存储的前端协议完全解耦。用户可以构建自己的虚拟 bdev，提供复杂的存储服务，并将它们与 SPDK NVMe-oF  target集成，无需额外的代码更改。 NVMe-oF target中可能有许多子系统，每个子系统可能包含许多namespace。子系统和namespace可以通过 JSON-RPC 接口动态配置。</p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ol><li><p>查看nvme ssd具体有哪几个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvme list</span><br></pre></td></tr></table></figure><p>可以查看所有连接到当前系统的nvme设备：名称，序列号，大小，LBA 和 serial。</p><p>使用该命令的话可以在host机器上可以查看到target的ssd（前提是target的ssd挂载到了spdk中）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">通过spdk查看每个硬盘的pcie地址</span></span><br></pre></td></tr></table></figure><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20220519154020368.png" alt="image-20220519154020368"></p></li></ol><p>注意spdk驱动和nvme驱动的问题</p><p>配置完target在配置host</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>如果使用modprobe nvme_rdma出错。大概率问题出现在rdma驱动中</p><h2 id="FIO工具介绍"><a href="#FIO工具介绍" class="headerlink" title="FIO工具介绍"></a>FIO工具介绍</h2><p>FIO 工具是一款用于测试硬件存储性能的辅助工具，兼具灵活性、可靠性从而从众多性能测试工具中脱颖而出。磁盘的 I/O 是衡量硬件性能的最重要的指标之一，而 FIO 工具通过模拟 I/O负载对存储介质进行压力测试，并将存储介质的 I/O 数据直观的呈现出来。</p><p>f关于io介绍的网站：<a href="https://fio.readthedocs.io/en/latest/fio_doc.html#how-fio-works">https://fio.readthedocs.io/en/latest/fio_doc.html#how-fio-works</a></p><h3 id="fio操作"><a href="#fio操作" class="headerlink" title="fio操作"></a>fio操作</h3><p>让 fio 模拟所需的 I/O 工作负载的第一步是编写一个描述该特定设置的作业文件(job file)。 作业文件中可以定义要模拟的线程或者文件，通过共享参数定义全局部分，也可以定义每一线程的单独参数。运行时，fio 会解析此文件并按照描述设置所有内容。</p><h3 id="fio文件配置介绍"><a href="#fio文件配置介绍" class="headerlink" title="fio文件配置介绍"></a>fio文件配置介绍</h3><ol><li><p>I/O type</p><p>定义发布给文件的I/O模式，读、写、顺序、随机或者是否使用buffer.</p><ul><li><p>direct=bool</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">If value is true, use non-buffered I&#x2F;O. Default: false.</span><br></pre></td></tr></table></figure><p>这个值决定是否使用non-buffered I/O。</p><p>buffered IO指的是在内核和用户程序之间设置了一层缓冲区，用来提高IO读写的效率；</p><p>读取：硬盘—&gt;内核缓冲区—&gt;<strong>用户缓冲区</strong>—&gt;用户程序</p><p>写回：用户程序—&gt;<strong>用户缓冲区</strong>—&gt;内核缓冲区—&gt;硬盘</p></li><li><p>atomic=bool</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">If value is true, attempt to use atomic direct I&#x2F;O. Atomic writes are guaranteed to be stable once acknowledged by the operating system. </span><br></pre></td></tr></table></figure><p>如果值为 true，则尝试使用原子 I/O。原子I/O的写入是稳定的</p></li><li><p>readwrite=str，rw=str</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Type of I&#x2F;O pattern.</span><br><span class="line">read;write;trim;randread;randwrite;readwrite;randrw;trimwrite</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Block size</p><p>发出I/O的块大小，可以是单个值，也可以是个范围</p><ul><li><p>blocksize=int[,int][,int]</p><p>单个值适用于read、write和trim。 可以为read、write和trim指定逗号分隔的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The block size in bytes used for I&#x2F;O units. Default: 4096. A single value applies to reads, writes, and trims. Comma-separated values may be specified for reads, writes, and trims. A value not terminated in a comma applies to subsequent types.</span><br></pre></td></tr></table></figure></li><li><p>blocksize_range=irange[,irange][,irange], bsrange=irange[,irange][,irange]</p><p>I/O 单元的一系列块大小（以字节为单位）。 除非设置了 blocksize_unaligned，否则发出的 I/O 单元将始终是最小大小的倍数。<strong>bsrange=1k-4k,2k-8k.</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A range of block sizes in bytes for I&#x2F;O units. The issued I&#x2F;O unit will always be a multiple of the minimum size, unless blocksize_unaligned is set.</span><br><span class="line"></span><br><span class="line">Comma-separated ranges may be specified for reads, writes, and trims as described in blocksize.</span><br></pre></td></tr></table></figure></li></ul></li><li><p>I/O size</p><p>要读写的数据总量</p><ul><li>size=int</li></ul></li><li></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>群晖使用手册</title>
    <link href="/2021/11/22/%E7%BE%A4%E6%99%96%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    <url>/2021/11/22/%E7%BE%A4%E6%99%96%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="群晖NAS简单使用说明"><a href="#群晖NAS简单使用说明" class="headerlink" title="群晖NAS简单使用说明"></a>群晖NAS简单使用说明</h1><h2 id="群晖NAS是什么"><a href="#群晖NAS是什么" class="headerlink" title="群晖NAS是什么"></a>群晖NAS是什么</h2><ol><li>你可把它看作是你的私人云盘，具有安全可控，功能可拓展的特点。</li><li>现在你可以把重要的文件放到你的云盘.上，或者分享给你周围的人。</li><li>可以通过网页进行登录。</li><li>属于共同项目组的可以使用群晖中的gitlab进行代码管理</li></ol><h2 id="账号和密码"><a href="#账号和密码" class="headerlink" title="账号和密码"></a>账号和密码</h2><ol><li><p>账号是每个人的首字母小写。初始密码是：111222（建议登陆后进行修改）</p></li><li><p>如果忘记密码可以重新设置。注意查看自己的qq邮箱。群晖的邮箱账号是<strong>PiedPiper - Synology DiskStation</strong></p></li><li><p>内网登录网址：<a href="http://192.168.0.8:5000/">http://192.168.0.8:5000/</a></p></li><li><p>外网登录网址：<a href="http://120.79.170.202:8047/">http://120.79.170.202:8047/</a></p></li><li><p>外网通过域名访问：<a href="http://quickconnect.cn/ForPiedPiper/">http://QuickConnect.cn/ForPiedPiper/</a></p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\群晖使用手册\image-20211122151646208.png" alt="image-20211122151646208" style="zoom:30%;" /></li></ol><h2 id="空间配额与使用"><a href="#空间配额与使用" class="headerlink" title="空间配额与使用"></a>空间配额与使用</h2><ol><li>每个人的使用空间是500GB，. 上传下载单个文件最大10GB。</li><li>个人空间的文件有读写权限。所有者可设置分享文件的读写权限。</li><li>目前NAS系统配置了通讯，下载，备份，协同办公等软件，建议熟悉使用。例如Chat提供通讯功能，Calendar,Note提供日程安排，HyperBackup提供文件备份功能。0ffice提供在线预览，编辑等功能。</li><li>通过网页登陆时，桌面系统的操作方式简单，与平时使用Windows系统类似。例如你选中想要分享的文件，点击右键选择共享，然后设置你要分享的人或群组。</li></ol><h1 id="群晖备份数据说明"><a href="#群晖备份数据说明" class="headerlink" title="群晖备份数据说明"></a>群晖备份数据说明</h1><h2 id="各个文件夹介绍"><a href="#各个文件夹介绍" class="headerlink" title="各个文件夹介绍"></a>各个文件夹介绍</h2><ol><li><p> home： 分配给个人的隐私空间，其他人不能访问</p></li><li><p>homes: 管理员（每一个新开的账号都有管理员权限）可以看到所有人的home个人隐私空间（建议不要查看）</p></li><li><p>共享文件夹：所有人（管理员和非管理员）共享的空间，所有人都可以进行读写</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\群晖使用手册\image-20211122153119510.png" alt="image-20211122153119510"></p></li></ol><h2 id="备份说明"><a href="#备份说明" class="headerlink" title="备份说明"></a>备份说明</h2><ol><li> 共享文件夹 —- data-backup目录下  —- 论文题目</li></ol><p>   <img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\群晖使用手册\clip_image001.png" alt="img"></p><ol start="2"><li><p>备份格式：</p><p>子目录包括：代码，图（fig.1 , fig.2 …）, 论文latex 格式，论文PDF格式</p><p>其中图(（fig.1 , fig.2）要包括： 图的数据， 画图脚本，图</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\群晖使用手册\image-20211122153511798.png" alt="image-20211122153511798"></p></li></ol><h2 id="备份方法"><a href="#备份方法" class="headerlink" title="备份方法"></a>备份方法</h2><ol><li><p>Window 系统备份指定文件夹或文件到群晖</p><p>使用Cloud Station Server 套件， windows系统需要安装Synology Cloud Station Backup-4.3.2-4450， 群文件有，或者在群晖直接下载安装</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\群晖使用手册\clip_image002.jpg" alt="img" style="zoom:80%;" /><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\群晖使用手册\clip_image004.jpg" alt="img" style="zoom:80%;" /><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\群晖使用手册\clip_image006.jpg" alt="img" style="zoom:80%;" /><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\群晖使用手册\clip_image008.jpg" alt="img" style="zoom:80%;" /><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\群晖使用手册\clip_image010.jpg" alt="img" style="zoom:80%;" /></li><li><p>Ubuntu 或者centos 系统备份指定文件夹或文件到群晖</p><p>​    使用Actice Backup for Business套件，选择文件服务器，配置需要备份的服务器信息等</p></li></ol><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\群晖使用手册\image-20211122153858036.png" alt="image-20211122153858036"></p><h1 id="gitlab使用说明"><a href="#gitlab使用说明" class="headerlink" title="gitlab使用说明"></a>gitlab使用说明</h1><h2 id="gitlab简介"><a href="#gitlab简介" class="headerlink" title="gitlab简介"></a>gitlab简介</h2><p>GitLab 是一个用于仓库管理系统的开源项目。使用<a href="http://baike.baidu.com/view/1531489.htm">Git</a>作为代码管理工具，并在此基础上搭建起来的web服务。</p><p>可通过Web界面进行访问公开的或者私人项目。它拥有与Github类似的功能，能够浏览源代码，管理缺陷和注释。可以管理团队对仓库的访问，它非常易于浏览提交过的版本并提供一个文件历史库。团队成员可以利用内置的简单聊天程序(Wall)进行交流。它还提供一个代码片段收集功能可以轻松实现代码复用。</p><h2 id="账号和密码-1"><a href="#账号和密码-1" class="headerlink" title="账号和密码"></a>账号和密码</h2><ol><li><p>内网登录的网址：<a href="http://192.168.0.8:30000/">http://192.168.0.8:30000/</a></p></li><li><p>外网登录网址：<a href="http://120.79.170.202:9001/">http://120.79.170.202:9001/</a></p></li><li><p>每个人的账号都是自己的首字母<strong>大写</strong>，邮箱都是自己的qq邮箱。初始密码是：12345678 。第一次登陆需要自己修改密码。</p></li><li><p>如果忘记自己的密码，需要联系管理员本人，进行密码的修改（目前还没有邮件的功能）</p></li><li><p>管理员账户：root。管理员密码：PiedPiper</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\群晖使用手册\image-20211122194705212.png" alt="image-20211122194705212" style="zoom:50%;" /></li></ol><h2 id="设置ssh-keys登录"><a href="#设置ssh-keys登录" class="headerlink" title="设置ssh keys登录"></a>设置ssh keys登录</h2><p>为了方便和gitlab的交互，建议每个人学会git的操作使用。方便使用<strong>ssh keys</strong>进行登录从而进行代码的push和copy。</p><ol><li><p>点击Preferences，进入个人的设置界面。</p></li><li><p>在左侧的侧边栏中选择SSH Keys选项。</p></li><li><p>在自己的主机中找到自己的ssh文件（没有的话，利用git去生成。见<a href="https://blog.csdn.net/weixin_44291453/article/details/106763561%EF%BC%89">https://blog.csdn.net/weixin_44291453/article/details/106763561）</a></p></li><li><p>打开id_rsa.pub文件，将其中的内容。复制到gitlab界面的key选项的文本框中。此文件的目录（在我的windows中是）</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\群晖使用手册\image-20211122190230008.png" alt="image-20211122190230008"></p></li><li><p>之后就可以远程对自己加入的项目进行git操作了。</p></li><li><p>如果使用内网进行登录，直接使用clone标签下的提示命令就可以。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\群晖使用手册\image-20211122193428521.png" alt="image-20211122193428521"></p></li><li><p>如果使用外网登录，需要修改代码。例子如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone ssh:&#x2F;&#x2F;git@120.79.170.202:9002&#x2F;szb&#x2F;sun_test.git</span><br></pre></td></tr></table></figure><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\群晖使用手册\image-20211122194920668.png" alt="image-20211122194920668" style="zoom:80%;" /><p>每个人的<code>120.79.170.202:9002</code>是不变的，是我们的反向代理的ip地址和端口号。后面的<code>/szb/sun_test.git</code>部分根据每个人情况有所不同。</p></li></ol><h2 id="创建小组和项目"><a href="#创建小组和项目" class="headerlink" title="创建小组和项目"></a>创建小组和项目</h2><p>每个人都有权限创建group和project。并且创建完了还可以邀请同组的成员，进行代码共享。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\群晖使用手册\image-20211122193904131.png" alt="image-20211122193904131"></p>]]></content>
    
    
    
    <tags>
      
      <tag>群晖使用手册</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自动组卷系统</title>
    <link href="/2021/10/11/%E8%87%AA%E5%8A%A8%E7%BB%84%E5%8D%B7%E7%B3%BB%E7%BB%9F/"/>
    <url>/2021/10/11/%E8%87%AA%E5%8A%A8%E7%BB%84%E5%8D%B7%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="自动组卷系统"><a href="#自动组卷系统" class="headerlink" title="自动组卷系统"></a>自动组卷系统</h1><h2 id="系统使用手册"><a href="#系统使用手册" class="headerlink" title="系统使用手册"></a>系统使用手册</h2><h3 id="数据库说明"><a href="#数据库说明" class="headerlink" title="数据库说明"></a>数据库说明</h3><p>数据库使用的是neo4j-3.3.3版本，由于服务器最开始安装的是jdk8，而高版本的neo4j需要使用的是jdk11或者jdk12，所以项目使用了低版本的neo4j数据库。</p><p>数据库对任意的ip地址都是可以访问的，数据库的访问网址是<code>http://1.15.187.75:7474/</code>访问界面如下</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\自动组卷系统\image-20211013092136019.png" alt="image-20211013092136019" style="zoom:30%;" /><p>在命令行中输入命令<code>match(n) return n;</code>可以看到当前数据库的基本图网络。</p><h4 id="图网络结构说明"><a href="#图网络结构说明" class="headerlink" title="图网络结构说明"></a>图网络结构说明</h4><p>整体框架中所有的节点分为两类，一类是层节点，一类是题目节点。分层的基本结构如下图所示。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\自动组卷系统\image-20211013102423350.png" alt="image-20211013102423350" style="zoom:50%;" /><p>可以看到层节点总共有四种类型。分别是<img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\自动组卷系统\image-20211013102404814.png" alt="image-20211013102404814" style="zoom:50%;" />。每个高层节点对低层节点的关系都是<strong>include</strong>.每类层节点的介绍如下(从高到低)。</p><ol><li><p><u>Class节点</u>：该节点只有一个，是Python课程。具体属性有：**”Title”:(课程的名称)** 和 **”Teacher”: (授课老师)**。</p></li><li><p><u>Theme节点</u>：是课程中的每一讲，是根据课程的pdf文件的名称进行命名的。具体属性有：**”Title”: (该讲的名称)、”Difficulty”: (该讲难易度)、”Importance”: (该讲应当掌握的重要程度)**。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\自动组卷系统\image-20211012140033427.png" alt="image-20211012140033427" style="zoom:50%;" /></li><li><p><u>Knowledge节点</u>：是每一讲中的每一节，根据每一讲文件中的目录进行命名的。具体属性有：**”Title”: (该知识的名称)<strong>、</strong>“Difficulty”: (该知识难易度)<strong>、</strong>“Importance”: (该知识应当掌握的重要程度)**。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\自动组卷系统\image-20211012143235855.png" alt="image-20211012143235855" style="zoom:50%;" /></li><li><p><u>Point节点</u>：是每一节中的每一个具体知识点。具体属性有：**”Title”: (该知识点的名称)<strong>、</strong>“Difficulty”: (该知识点难易度)<strong>、</strong>“Importance”: (该知识点应当掌握的重要程度)**。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\自动组卷系统\image-20211013143847081.png" alt="image-20211013143847081" style="zoom:20%;" /></li></ol><p>除了层节点还有题目节点，题目节点的类型是<strong>Test</strong>.</p><p>Test就是题目本身，一个test可以和多个Point相关，一个Point也可以和多个Test相关。具体属性有：**”Type”：（该习题的习题类型）、”Content”: (该习题的具体内容)、”Difficulty”: (该题目难易度)、”Answer”:(该题目的答案)、”Importance”: (该题目的重要程度)**。每一个Test对Point节点的关系是relate。</p><h3 id="系统操作"><a href="#系统操作" class="headerlink" title="系统操作"></a>系统操作</h3><h4 id="服务器说明"><a href="#服务器说明" class="headerlink" title="服务器说明"></a>服务器说明</h4><p>服务器的ip地址是：1.15.187.75，账号是root，密码是zjzty@1123@.</p><p>项目的地址是:/usr/local/python_projects/python_web/PythonClass/</p><p>nginx的地址是：/usr/local/nginx</p><p>anaconda的地址是：/root/anaconda3</p><h4 id="项目说明"><a href="#项目说明" class="headerlink" title="项目说明"></a>项目说明</h4><p>项目的启动方式有两种</p><ol><li>直接在项目的根目录中使用  <code>python manage.py runserver 0.0.0.0:80</code></li><li>在本机的pycharm中进行django项目的配置，之后直接启动项目，效果和1的类似</li><li>先使用命令<code>python manage.py runserver</code>，再启动nginx，再启动uwsgi，之后可以进行访问</li></ol><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\自动组卷系统\image-20211025014218913.png" alt="image-20211025014218913" style="zoom:30%;" /><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><h3 id="项目需求"><a href="#项目需求" class="headerlink" title="项目需求"></a>项目需求</h3><ol><li>管理员可以将题库上传</li><li>题库按照知识点进行分类</li><li>系统自动根据知识点随机出题</li><li>学生端完成题目，系统自动进行判卷</li></ol><h3 id="项目架构"><a href="#项目架构" class="headerlink" title="项目架构"></a>项目架构</h3><ol><li>使用neo4j作为数据库</li><li>前端使用浏览器</li></ol><h2 id="平台设计"><a href="#平台设计" class="headerlink" title="平台设计"></a>平台设计</h2><p>平台主要有三个模块，分别是登录模块、教师模块、学生模块。</p><h3 id="登录模块"><a href="#登录模块" class="headerlink" title="登录模块"></a>登录模块</h3><p>登录模块主要是负责在登录的时候把教师和学生进行区分，即在neo4j数据库中存储有学生类型的节点和教师类型的节点，节点的属性都包含用户名和密码。通过登录模块把每个学生和老师分开，平台的UI操作也会不一样。同样当用户输入任何网址的时候都需要先登录。</p><h3 id="教师模块"><a href="#教师模块" class="headerlink" title="教师模块"></a>教师模块</h3><p>需要多个教师节点，每个教师节点对应不同的学生。</p><p>教师节点会存储教师登录的用户名和密码。所以教师节点的属性有：登陆账号和登陆密码。班级，（有的知识多个老师讲了没有）</p><p>教师模块能够实现知识图谱的构建与题库的录入。还可以进行作业和考试试卷的布置。主要就是有权限。</p><h3 id="学生模块"><a href="#学生模块" class="headerlink" title="学生模块"></a>学生模块</h3><p>学生节点的属性有：</p><ol><li>学号（登录的账号）</li><li>登录密码</li><li>姓名</li><li>班级</li><li>性别</li></ol><p>每一个学生节点和Test类型的节点都是有一条边（LEARN）联系的，属性有：</p><ol><li>该生做这个题目做了多少次</li><li>该生做对了这个题目多少次</li></ol><h3 id="学生模块和教师模块的结合"><a href="#学生模块和教师模块的结合" class="headerlink" title="学生模块和教师模块的结合"></a>学生模块和教师模块的结合</h3><h4 id="作业模块"><a href="#作业模块" class="headerlink" title="作业模块"></a>作业模块</h4><p>教师可以通过教师端布置作业。选择想要考察的知识点和其对应的题目数目。平台进行记录，保存到一个json文件中，包含知识点名称和其对应的出题数目。学生端在完成本次作业的时候，平台会对此json文件进行读取，再随机出题。</p><p>本次作业的结果会以csv文件的格式保存表格的属性有：题目名称、题目内容、出题次数、答错次数。同样本次的结果也会对题目节点的属性进行更新。</p><p>每个学生都会维护一个表格（名称是：“姓名_学号_班级”），用来记录自己的学习情况，每一行是一个题目。每当有一个题目节点被添加进来了，该表格就会多一行。属性有：完成次数、答对次数、答错次数、第几次作业答对、第几次作业答错。</p><p>方便教师对每个学生单独的学习信息进行统计分析。</p><h2 id="中期推进"><a href="#中期推进" class="headerlink" title="中期推进"></a>中期推进</h2><h3 id="安装neo4j"><a href="#安装neo4j" class="headerlink" title="安装neo4j"></a>安装neo4j</h3><p>按照<a href="https://www.cnblogs.com/Hackerman/p/12555365.html">centos 安装neo4j图形数据库 - Hackerman - 博客园 (cnblogs.com)</a>这篇文章进行安装，可以最终得到如下结果。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\自动组卷系统\image-20211011155000074.png" alt="image-20211011155000074"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br></pre></td><td class="code"><pre><span class="line">#*****************************************************************</span><br><span class="line"># Neo4j configuration</span><br><span class="line">#</span><br><span class="line"># For more details and a complete list of settings, please see</span><br><span class="line"># https:&#x2F;&#x2F;neo4j.com&#x2F;docs&#x2F;operations-manual&#x2F;current&#x2F;reference&#x2F;configuration-settings&#x2F;</span><br><span class="line">#*****************************************************************</span><br><span class="line"></span><br><span class="line"># The name of the database to mount</span><br><span class="line">#要装载的数据库的名称，默认就是graph.db</span><br><span class="line">dbms.active_database&#x3D;graph.db</span><br><span class="line"></span><br><span class="line"># Paths of directories in the installation.</span><br><span class="line">#安装中目录的路径，默认使用当前安装Neo4j的目录</span><br><span class="line">#dbms.directories.data&#x3D;data</span><br><span class="line">#dbms.directories.plugins&#x3D;plugins</span><br><span class="line">#dbms.directories.certificates&#x3D;certificates</span><br><span class="line">#dbms.directories.logs&#x3D;logs</span><br><span class="line">#dbms.directories.lib&#x3D;lib</span><br><span class="line">#dbms.directories.run&#x3D;run</span><br><span class="line"></span><br><span class="line"># This setting constrains all &#96;LOAD CSV&#96; import files to be under the &#96;import&#96; directory. Remove or comment it out to</span><br><span class="line"># allow files to be loaded from anywhere in the filesystem; this introduces possible security problems. See the</span><br><span class="line"># &#96;LOAD CSV&#96; section of the manual for details.</span><br><span class="line">#导入数据的CSV数据文件的默认存放目录</span><br><span class="line">dbms.directories.import&#x3D;import</span><br><span class="line"></span><br><span class="line"># Whether requests to Neo4j are authenticated.</span><br><span class="line"># To disable authentication, uncomment this line</span><br><span class="line">#对Neo4j的请求是否经过身份验证。</span><br><span class="line">dbms.security.auth_enabled&#x3D;true</span><br><span class="line"></span><br><span class="line"># Enable this to be able to upgrade a store from an older version.</span><br><span class="line"># 是否能够从旧版本升级存储</span><br><span class="line">#dbms.allow_upgrade&#x3D;true</span><br><span class="line"></span><br><span class="line"># Java Heap Size: by default the Java heap size is dynamically</span><br><span class="line"># calculated based on available system resources.</span><br><span class="line"># Uncomment these lines to set specific initial and maximum</span><br><span class="line"># heap size.</span><br><span class="line">#Java堆大小：默认情况下，Java堆大小是基于可用系统资源动态计算的。</span><br><span class="line">#未注释这些行以设置特定的初始和最大堆大小。</span><br><span class="line">#可自己设置初始堆大小和最大堆大小值，具体值需要根据自己系统及数据量大小而定</span><br><span class="line">#dbms.memory.heap.initial_size&#x3D;512m</span><br><span class="line">#dbms.memory.heap.max_size&#x3D;512m</span><br><span class="line"></span><br><span class="line"># The amount of memory to use for mapping the store files, in bytes (or</span><br><span class="line"># kilobytes with the &#39;k&#39; suffix, megabytes with &#39;m&#39; and gigabytes with &#39;g&#39;).</span><br><span class="line"># If Neo4j is running on a dedicated server, then it is generally recommended</span><br><span class="line"># to leave about 2-4 gigabytes for the operating system, give the JVM enough</span><br><span class="line"># heap to hold all your transaction state and query context, and then leave the</span><br><span class="line"># rest for the page cache.</span><br><span class="line"># The default page cache memory assumes the machine is dedicated to running</span><br><span class="line"># Neo4j, and is heuristically set to 50% of RAM minus the max Java heap size.</span><br><span class="line">#用于映射存储文件的内存量，也就是缓存，单位可以是k&#x2F;m&#x2F;g。</span><br><span class="line">#如果Neo4j运行在专用服务器上，则通常建议为了给操作系统留下大约2-4gb的空间，</span><br><span class="line">#给JVM足够的空间堆以保存所有事务状态和查询上下文，然后在页面缓存中休息。</span><br><span class="line">#建议设置为RAM的50%减去最大Java堆大小。</span><br><span class="line">#dbms.memory.pagecache.size&#x3D;10g</span><br><span class="line"></span><br><span class="line">#*****************************************************************</span><br><span class="line"># Network connector configuration</span><br><span class="line">#*****************************************************************</span><br><span class="line"></span><br><span class="line"># With default configuration Neo4j only accepts local connections.</span><br><span class="line"># To accept non-local connections, uncomment this line:</span><br><span class="line"># 默认配置下，Neo4j只接受本地连接。要接受非本地连接，请取消注释此行：</span><br><span class="line">dbms.connectors.default_listen_address&#x3D;0.0.0.0</span><br><span class="line"></span><br><span class="line"># You can also choose a specific network interface, and configure a non-default</span><br><span class="line"># port for each connector, by setting their individual listen_address.</span><br><span class="line"></span><br><span class="line"># The address at which this server can be reached by its clients. This may be the server&#39;s IP address or DNS name, or</span><br><span class="line"># it may be the address of a reverse proxy which sits in front of the server. This setting may be overridden for</span><br><span class="line"># individual connectors below.</span><br><span class="line">#您还可以选择一个特定的网络接口，并为每个连接器配置一个非默认端口，方法是设置它们各自的侦听地址。</span><br><span class="line">#客户端可以访问此服务器的地址。这可能是服务器的IP地址或DNS名称，也可能是位于服务器前面的反向代理的地址。</span><br><span class="line">#对于下面的单独连接器，此设置可能被重写</span><br><span class="line">#默认是本地地址</span><br><span class="line">dbms.connectors.default_advertised_address&#x3D;localhost</span><br><span class="line"></span><br><span class="line"># You can also choose a specific advertised hostname or IP address, and</span><br><span class="line"># configure an advertised port for each connector, by setting their</span><br><span class="line"># individual advertised_address.</span><br><span class="line"></span><br><span class="line"># Bolt connector</span><br><span class="line"># Bolt 连接开启</span><br><span class="line">dbms.connector.bolt.enabled&#x3D;true</span><br><span class="line">#dbms.connector.bolt.tls_level&#x3D;OPTIONAL</span><br><span class="line">#Bolt端口号</span><br><span class="line">dbms.connector.bolt.listen_address&#x3D;:7687</span><br><span class="line"></span><br><span class="line"># HTTP Connector. There must be exactly one HTTP connector.</span><br><span class="line">#HTTP连接</span><br><span class="line">dbms.connector.http.enabled&#x3D;true</span><br><span class="line">#HTTP连接端口号</span><br><span class="line">dbms.connector.http.listen_address&#x3D;:7474</span><br><span class="line"></span><br><span class="line"># HTTPS Connector. There can be zero or one HTTPS connectors.</span><br><span class="line">#HTTPs连接</span><br><span class="line">dbms.connector.https.enabled&#x3D;true</span><br><span class="line">#HTTPS端口</span><br><span class="line">dbms.connector.https.listen_address&#x3D;:7473</span><br><span class="line"></span><br><span class="line"># Number of Neo4j worker threads.</span><br><span class="line">#运行线程数</span><br><span class="line">#dbms.threads.worker_count&#x3D;</span><br><span class="line"></span><br><span class="line">#*****************************************************************</span><br><span class="line"># SSL system configuration</span><br><span class="line">#*****************************************************************</span><br><span class="line"></span><br><span class="line"># Names of the SSL policies to be used for the respective components.</span><br><span class="line"></span><br><span class="line"># The legacy policy is a special policy which is not defined in</span><br><span class="line"># the policy configuration section, but rather derives from</span><br><span class="line"># dbms.directories.certificates and associated files</span><br><span class="line"># (by default: neo4j.key and neo4j.cert). Its use will be deprecated.</span><br><span class="line"></span><br><span class="line"># The policies to be used for connectors.</span><br><span class="line">#</span><br><span class="line"># N.B: Note that a connector must be configured to support&#x2F;require</span><br><span class="line">#      SSL&#x2F;TLS for the policy to actually be utilized.</span><br><span class="line">#</span><br><span class="line"># see: dbms.connector.*.tls_level</span><br><span class="line"></span><br><span class="line">#bolt.ssl_policy&#x3D;legacy</span><br><span class="line">#https.ssl_policy&#x3D;legacy</span><br><span class="line"></span><br><span class="line">#*****************************************************************</span><br><span class="line"># SSL policy configuration SSL策略配置</span><br><span class="line">#*****************************************************************</span><br><span class="line"></span><br><span class="line"># Each policy is configured under a separate namespace, e.g.</span><br><span class="line">#    dbms.ssl.policy.&lt;policyname&gt;.*</span><br><span class="line">#</span><br><span class="line"># The example settings below are for a new policy named &#39;default&#39;.</span><br><span class="line"></span><br><span class="line"># The base directory for cryptographic objects. Each policy will by</span><br><span class="line"># default look for its associated objects (keys, certificates, ...)</span><br><span class="line"># under the base directory.</span><br><span class="line">#</span><br><span class="line"># Every such setting can be overriden using a full path to</span><br><span class="line"># the respective object, but every policy will by default look</span><br><span class="line"># for cryptographic objects in its base location.</span><br><span class="line">#</span><br><span class="line"># Mandatory setting 强制设置</span><br><span class="line"></span><br><span class="line">#dbms.ssl.policy.default.base_directory&#x3D;certificates&#x2F;default</span><br><span class="line"></span><br><span class="line"># Allows the generation of a fresh private key and a self-signed</span><br><span class="line"># certificate if none are found in the expected locations. It is</span><br><span class="line"># recommended to turn this off again after keys have been generated.</span><br><span class="line">#</span><br><span class="line"># Keys should in general be generated and distributed offline</span><br><span class="line"># by a trusted certificate authority (CA) and not by utilizing</span><br><span class="line"># this mode.</span><br><span class="line">#密钥通常应该由受信任的证书颁发机构（CA）脱机生成和分发，而不是使用此模式。</span><br><span class="line">#是否允许生成秘钥</span><br><span class="line"></span><br><span class="line">#dbms.ssl.policy.default.allow_key_generation&#x3D;false</span><br><span class="line"></span><br><span class="line"># Enabling this makes it so that this policy ignores the contents</span><br><span class="line"># of the trusted_dir and simply resorts to trusting everything.</span><br><span class="line">#</span><br><span class="line"># Use of this mode is discouraged. It would offer encryption but no security.</span><br><span class="line"># 不鼓励使用此模式。它将提供加密，但没有安全性。</span><br><span class="line"># 是否信任所有</span><br><span class="line"></span><br><span class="line">#dbms.ssl.policy.default.trust_all&#x3D;false</span><br><span class="line"></span><br><span class="line"># The private key for the default SSL policy. By default a file</span><br><span class="line"># named private.key is expected under the base directory of the policy.</span><br><span class="line"># It is mandatory that a key can be found or generated.</span><br><span class="line"></span><br><span class="line">#dbms.ssl.policy.default.private_key&#x3D;</span><br><span class="line"></span><br><span class="line"># The private key for the default SSL policy. By default a file</span><br><span class="line"># named public.crt is expected under the base directory of the policy.</span><br><span class="line"># It is mandatory that a certificate can be found or generated.</span><br><span class="line"></span><br><span class="line">#dbms.ssl.policy.default.public_certificate&#x3D;</span><br><span class="line"></span><br><span class="line"># The certificates of trusted parties. By default a directory named</span><br><span class="line"># &#39;trusted&#39; is expected under the base directory of the policy. It is</span><br><span class="line"># mandatory to create the directory so that it exists, because it cannot</span><br><span class="line"># be auto-created (for security purposes).</span><br><span class="line">#</span><br><span class="line"># To enforce client authentication client_auth must be set to &#39;require&#39;!</span><br><span class="line"></span><br><span class="line">#dbms.ssl.policy.default.trusted_dir&#x3D;</span><br><span class="line"></span><br><span class="line"># Client authentication setting. Values: none, optional, require</span><br><span class="line"># The default is to require client authentication.</span><br><span class="line">#</span><br><span class="line"># Servers are always authenticated unless explicitly overridden</span><br><span class="line"># using the trust_all setting. In a mutual authentication setup this</span><br><span class="line"># should be kept at the default of require and trusted certificates</span><br><span class="line"># must be installed in the trusted_dir.</span><br><span class="line"></span><br><span class="line">#dbms.ssl.policy.default.client_auth&#x3D;require</span><br><span class="line"></span><br><span class="line"># A comma-separated list of allowed TLS versions.</span><br><span class="line"># By default TLSv1, TLSv1.1 and TLSv1.2 are allowed.</span><br><span class="line"></span><br><span class="line">#dbms.ssl.policy.default.tls_versions&#x3D;</span><br><span class="line"></span><br><span class="line"># A comma-separated list of allowed ciphers.</span><br><span class="line"># The default ciphers are the defaults of the JVM platform.</span><br><span class="line"></span><br><span class="line">#dbms.ssl.policy.default.ciphers&#x3D;</span><br><span class="line"></span><br><span class="line">#*****************************************************************</span><br><span class="line"># Logging configuration 日志配置</span><br><span class="line">#*****************************************************************</span><br><span class="line"></span><br><span class="line"># To enable HTTP logging, uncomment this line</span><br><span class="line">#是否启用HTTP日志记录</span><br><span class="line">#dbms.logs.http.enabled&#x3D;true</span><br><span class="line"></span><br><span class="line"># Number of HTTP logs to keep.</span><br><span class="line">#保留日志文件数</span><br><span class="line">#dbms.logs.http.rotation.keep_number&#x3D;5</span><br><span class="line"></span><br><span class="line"># Size of each HTTP log that is kept.</span><br><span class="line">#日志文件大小</span><br><span class="line">#dbms.logs.http.rotation.size&#x3D;20m</span><br><span class="line"></span><br><span class="line"># To enable GC Logging, uncomment this line</span><br><span class="line"># 启用GC日志记录</span><br><span class="line">#dbms.logs.gc.enabled&#x3D;true</span><br><span class="line"></span><br><span class="line"># GC Logging Options</span><br><span class="line">#日志记录选项，详情见下地址</span><br><span class="line"># see http:&#x2F;&#x2F;docs.oracle.com&#x2F;cd&#x2F;E19957-01&#x2F;819-0084-10&#x2F;pt_tuningjava.html#wp57013 for more information.</span><br><span class="line">#dbms.logs.gc.options&#x3D;-XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCApplicationStoppedTime -XX:+PrintPromotionFailure -XX:+PrintTenuringDistribution</span><br><span class="line"></span><br><span class="line"># Number of GC logs to keep.</span><br><span class="line">#GC日志保留数</span><br><span class="line">#dbms.logs.gc.rotation.keep_number&#x3D;5</span><br><span class="line"></span><br><span class="line"># Size of each GC log that is kept.</span><br><span class="line">#GC日志文件大小</span><br><span class="line">#dbms.logs.gc.rotation.size&#x3D;20m</span><br><span class="line"></span><br><span class="line"># Size threshold for rotation of the debug log. If set to zero then no rotation will occur. Accepts a binary suffix &quot;k&quot;,</span><br><span class="line"># &quot;m&quot; or &quot;g&quot;.</span><br><span class="line">#调试日志阈值大小</span><br><span class="line">#dbms.logs.debug.rotation.size&#x3D;20m</span><br><span class="line"></span><br><span class="line"># Maximum number of history files for the internal log.</span><br><span class="line">#最多保留日志文件数</span><br><span class="line">#dbms.logs.debug.rotation.keep_number&#x3D;7</span><br><span class="line"></span><br><span class="line">#*****************************************************************</span><br><span class="line"># Miscellaneous configuration 其他配置</span><br><span class="line">#*****************************************************************</span><br><span class="line"></span><br><span class="line"># Enable this to specify a parser other than the default one.</span><br><span class="line">#cypher 版本</span><br><span class="line">#cypher.default_language_version&#x3D;3.0</span><br><span class="line"></span><br><span class="line"># Determines if Cypher will allow using file URLs when loading data using</span><br><span class="line"># &#96;LOAD CSV&#96;. Setting this value to &#96;false&#96; will cause Neo4j to fail &#96;LOAD CSV&#96;</span><br><span class="line"># clauses that load data from the file system.</span><br><span class="line">#是否允许Cypher在Load CSV时引用互联网上的地址</span><br><span class="line">#dbms.security.allow_csv_import_from_file_urls&#x3D;true</span><br><span class="line"></span><br><span class="line"># Retention policy for transaction logs needed to perform recovery and backups.</span><br><span class="line">#执行恢复和备份所需的事务日志的保留策略</span><br><span class="line">dbms.tx_log.rotation.retention_policy&#x3D;1 days</span><br><span class="line"></span><br><span class="line"># Enable a remote shell server which Neo4j Shell clients can log in to.</span><br><span class="line">#是否允许shell远程连接</span><br><span class="line">dbms.shell.enabled&#x3D;true</span><br><span class="line"># The network interface IP the shell will listen on (use 0.0.0.0 for all interfaces).</span><br><span class="line">#shell连接地址（用 0.0.0.0 表示所有地址都可连接）</span><br><span class="line">#127.0.0.1</span><br><span class="line">dbms.shell.host&#x3D;0.0.0.0</span><br><span class="line"># The port the shell will listen on, default is 1337.</span><br><span class="line">#Shell连接端口号</span><br><span class="line">dbms.shell.port&#x3D;1337</span><br><span class="line"></span><br><span class="line"># Only allow read operations from this Neo4j instance. This mode still requires</span><br><span class="line"># write access to the directory for lock purposes.</span><br><span class="line">#dbms.read_only&#x3D;false</span><br><span class="line"></span><br><span class="line"># Comma separated list of JAX-RS packages containing JAX-RS resources, one</span><br><span class="line"># package name for each mountpoint. The listed package names will be loaded</span><br><span class="line"># under the mountpoints specified. Uncomment this line to mount the</span><br><span class="line"># org.neo4j.examples.server.unmanaged.HelloWorldResource.java from</span><br><span class="line"># neo4j-server-examples under &#x2F;examples&#x2F;unmanaged, resulting in a final URL of</span><br><span class="line"># http:&#x2F;&#x2F;localhost:7474&#x2F;examples&#x2F;unmanaged&#x2F;helloworld&#x2F;&#123;nodeId&#125;</span><br><span class="line">#dbms.unmanaged_extension_classes&#x3D;org.neo4j.examples.server.unmanaged&#x3D;&#x2F;examples&#x2F;unmanaged</span><br><span class="line"></span><br><span class="line">#********************************************************************</span><br><span class="line"># JVM Parameters JVM参数配置</span><br><span class="line">#********************************************************************</span><br><span class="line"></span><br><span class="line"># G1GC generally strikes a good balance between throughput and tail</span><br><span class="line"># latency, without too much tuning.</span><br><span class="line">dbms.jvm.additional&#x3D;-XX:+UseG1GC</span><br><span class="line"></span><br><span class="line"># Have common exceptions keep producing stack traces, so they can be</span><br><span class="line"># debugged regardless of how often logs are rotated.</span><br><span class="line">dbms.jvm.additional&#x3D;-XX:-OmitStackTraceInFastThrow</span><br><span class="line"></span><br><span class="line"># Make sure that &#96;initmemory&#96; is not only allocated, but committed to</span><br><span class="line"># the process, before starting the database. This reduces memory</span><br><span class="line"># fragmentation, increasing the effectiveness of transparent huge</span><br><span class="line"># pages. It also reduces the possibility of seeing performance drop</span><br><span class="line"># due to heap-growing GC events, where a decrease in available page</span><br><span class="line"># cache leads to an increase in mean IO response time.</span><br><span class="line"># Try reducing the heap memory, if this flag degrades performance.</span><br><span class="line">dbms.jvm.additional&#x3D;-XX:+AlwaysPreTouch</span><br><span class="line"></span><br><span class="line"># Trust that non-static final fields are really final.</span><br><span class="line"># This allows more optimizations and improves overall performance.</span><br><span class="line"># NOTE: Disable this if you use embedded mode, or have extensions or dependencies that may use reflection or</span><br><span class="line"># serialization to change the value of final fields!</span><br><span class="line">dbms.jvm.additional&#x3D;-XX:+UnlockExperimentalVMOptions</span><br><span class="line">dbms.jvm.additional&#x3D;-XX:+TrustFinalNonStaticFields</span><br><span class="line"></span><br><span class="line"># Disable explicit garbage collection, which is occasionally invoked by the JDK itself.</span><br><span class="line">dbms.jvm.additional&#x3D;-XX:+DisableExplicitGC</span><br><span class="line"></span><br><span class="line"># Remote JMX monitoring, uncomment and adjust the following lines as needed. Absolute paths to jmx.access and</span><br><span class="line"># jmx.password files are required.</span><br><span class="line"># Also make sure to update the jmx.access and jmx.password files with appropriate permission roles and passwords,</span><br><span class="line"># the shipped configuration contains only a read only role called &#39;monitor&#39; with password &#39;Neo4j&#39;.</span><br><span class="line"># For more details, see: http:&#x2F;&#x2F;download.oracle.com&#x2F;javase&#x2F;8&#x2F;docs&#x2F;technotes&#x2F;guides&#x2F;management&#x2F;agent.html</span><br><span class="line"># On Unix based systems the jmx.password file needs to be owned by the user that will run the server,</span><br><span class="line"># and have permissions set to 0600.</span><br><span class="line"># For details on setting these file permissions on Windows see:</span><br><span class="line">#     http:&#x2F;&#x2F;docs.oracle.com&#x2F;javase&#x2F;8&#x2F;docs&#x2F;technotes&#x2F;guides&#x2F;management&#x2F;security-windows.html</span><br><span class="line">#dbms.jvm.additional&#x3D;-Dcom.sun.management.jmxremote.port&#x3D;3637</span><br><span class="line">#dbms.jvm.additional&#x3D;-Dcom.sun.management.jmxremote.authenticate&#x3D;true</span><br><span class="line">#dbms.jvm.additional&#x3D;-Dcom.sun.management.jmxremote.ssl&#x3D;false</span><br><span class="line">#dbms.jvm.additional&#x3D;-Dcom.sun.management.jmxremote.password.file&#x3D;&#x2F;absolute&#x2F;path&#x2F;to&#x2F;conf&#x2F;jmx.password</span><br><span class="line">#dbms.jvm.additional&#x3D;-Dcom.sun.management.jmxremote.access.file&#x3D;&#x2F;absolute&#x2F;path&#x2F;to&#x2F;conf&#x2F;jmx.access</span><br><span class="line"></span><br><span class="line"># Some systems cannot discover host name automatically, and need this line configured:</span><br><span class="line">#dbms.jvm.additional&#x3D;-Djava.rmi.server.hostname&#x3D;$THE_NEO4J_SERVER_HOSTNAME</span><br><span class="line"></span><br><span class="line"># Expand Diffie Hellman (DH) key size from default 1024 to 2048 for DH-RSA cipher suites used in server TLS handshakes.</span><br><span class="line"># This is to protect the server from any potential passive eavesdropping.</span><br><span class="line">dbms.jvm.additional&#x3D;-Djdk.tls.ephemeralDHKeySize&#x3D;2048</span><br><span class="line"></span><br><span class="line"># This mitigates a DDoS vector.</span><br><span class="line">dbms.jvm.additional&#x3D;-Djdk.tls.rejectClientInitiatedRenegotiation&#x3D;true</span><br><span class="line"></span><br><span class="line">#********************************************************************</span><br><span class="line"># Wrapper Windows NT&#x2F;2000&#x2F;XP Service Properties</span><br><span class="line">#********************************************************************</span><br><span class="line"># WARNING - Do not modify any of these properties when an application</span><br><span class="line">#  using this configuration file has been installed as a service.</span><br><span class="line">#  Please uninstall the service before modifying this section.  The</span><br><span class="line">#  service can then be reinstalled.</span><br><span class="line"></span><br><span class="line"># Name of the service</span><br><span class="line">dbms.windows_service_name&#x3D;neo4j</span><br><span class="line"></span><br><span class="line">#********************************************************************</span><br><span class="line"># Other Neo4j system properties</span><br><span class="line">#********************************************************************</span><br><span class="line">dbms.jvm.additional&#x3D;-Dunsupported.dbms.udc.source&#x3D;tarball</span><br></pre></td></tr></table></figure><p>neo4j的配置文件的具体详情，可能之后会用到。</p><h3 id="使用java连接neo4j"><a href="#使用java连接neo4j" class="headerlink" title="使用java连接neo4j"></a>使用java连接neo4j</h3><p>首先做的是一个小的java的程序，在idea中，使用了maven添加依赖。在<code>pom.xml</code>文件中加入如下语句。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.neo4j.driver<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>neo4j-java-driver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>因为安装的neo4j的版本是3.3.3.1，所以使用的是1.5.0版本的api。之后在java中完成了一个简单连接数据库并写入节点的操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.neo4j.driver.v1.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.neo4j.driver.v1.Values.parameters;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldExample</span> <span class="keyword">implements</span> <span class="title">AutoCloseable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Driver driver;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HelloWorldExample</span><span class="params">( String uri, String user, String password )</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        driver = GraphDatabase.driver( uri, AuthTokens.basic( user, password ) );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        driver.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printGreeting</span><span class="params">( <span class="keyword">final</span> String message )</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> ( Session session = driver.session() )</span><br><span class="line">        &#123;</span><br><span class="line">            String greeting = session.writeTransaction( <span class="keyword">new</span> TransactionWork&lt;String&gt;()</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">( Transaction tx )</span></span></span><br><span class="line"><span class="function">                </span>&#123;</span><br><span class="line">                    StatementResult result = tx.run( <span class="string">&quot;CREATE (a:Greeting) &quot;</span> +</span><br><span class="line">                                    <span class="string">&quot;SET a.message = $message &quot;</span> +</span><br><span class="line">                                    <span class="string">&quot;RETURN a.message + &#x27;, from node &#x27; + id(a)&quot;</span>,</span><br><span class="line">                            parameters( <span class="string">&quot;message&quot;</span>, message ) );</span><br><span class="line">                    <span class="keyword">return</span> result.single().get( <span class="number">0</span> ).asString();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; );</span><br><span class="line">            System.out.println( greeting );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">( String... args )</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> ( HelloWorldExample greeter = <span class="keyword">new</span> HelloWorldExample( <span class="string">&quot;bolt://1.15.187.75:7687&quot;</span>, <span class="string">&quot;neo4j&quot;</span>, <span class="string">&quot;szb123123&quot;</span> ) )</span><br><span class="line">        &#123;</span><br><span class="line">            greeter.printGreeting( <span class="string">&quot;hello, world&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>找到了Neo4j的开发者文档<a href="https://neo4j.com/docs/developer-manual/current/index.html">The Neo4j Developer Manual v3.4</a>可以学习和查阅。</p><p>如下显示一个连接的生命周期</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DriverLifecycleExample</span> <span class="keyword">implements</span> <span class="title">AutoCloseable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Driver driver;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DriverLifecycleExample</span><span class="params">( String uri, String user, String password )</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        driver = GraphDatabase.driver( uri, AuthTokens.basic( user, password ) );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        driver.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建图网络"><a href="#创建图网络" class="headerlink" title="创建图网络"></a>创建图网络</h3><p>由于是最开始的基础部分，所以只是手动添加试题。按照老师的课件将所有python的知识分成21讲。如下所示。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\自动组卷系统\image-20211012140033427.png" alt="image-20211012140033427"></p><p>因为只是一个初步的程序，所以只对第一讲的内容做具体分析。</p><p>因为是图数据库，所以对每个节点进行不同的定义。将课程名称<strong>Python数据处理编程</strong>设置为第一个节点。该节点只有一个，节点属性如下（当前比较简单，之后可以再加）。节点的类型是Class，该节点叫做Python。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;properties&quot;</span>:</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;Title&quot;</span>:(课程的名称)</span><br><span class="line">    <span class="string">&quot;Teacher&quot;</span>: (授课老师)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Python节点的子节点的类型都是Theme，代表的是每一讲。第一讲的名字叫做Grammar。每个theme节点都有统一的节点属性，属性内容如下。其中Difficulty,</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;properties&quot;</span>:</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;Title&quot;</span>: (该讲的名称)</span><br><span class="line">    <span class="string">&quot;Difficulty&quot;</span>: (该讲难易度)</span><br><span class="line">    <span class="string">&quot;Importance&quot;</span>: (该讲应当掌握的重要程度)</span><br><span class="line">    <span class="string">&quot;Mastery&quot;</span>:(学生的掌握程度)</span><br><span class="line">    <span class="string">&quot;Weights&quot;</span>:(培养计划中所占的权重)</span><br><span class="line">    <span class="string">&quot;Teached&quot;</span>:(是否已经讲解)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Theme类型的子节点的类型都是Knowledge，也就是知识类型。第一讲所包含的知识点如下图。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\自动组卷系统\image-20211012143235855.png" alt="image-20211012143235855"></p><p>Knowledge节点的属性内容如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;properties&quot;</span>:</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;Title&quot;</span>: (该讲的名称)</span><br><span class="line">    <span class="string">&quot;Difficulty&quot;</span>: (该讲难易度)</span><br><span class="line">    <span class="string">&quot;Importance&quot;</span>: (该讲应当掌握的重要程度)</span><br><span class="line">    <span class="string">&quot;Mastery&quot;</span>:(学生的掌握程度)</span><br><span class="line">    <span class="string">&quot;Weights&quot;</span>:(培养计划中所占的权重)</span><br><span class="line">    <span class="string">&quot;Teached&quot;</span>:(是否已经讲解)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Knowledge类型节点的子节点的类型都是Point，就是小的知识点了。例如<code>Python内置函数</code>的知识点就包括<code>类型转换与类型判断</code>等。</p><p>Point节点的属性内容如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;properties&quot;</span>:</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;Title&quot;</span>: (该讲的名称)</span><br><span class="line">    <span class="string">&quot;Difficulty&quot;</span>: (该讲难易度)</span><br><span class="line">    <span class="string">&quot;Importance&quot;</span>: (该讲应当掌握的重要程度)</span><br><span class="line">    <span class="string">&quot;Mastery&quot;</span>:(学生的掌握程度)</span><br><span class="line">    <span class="string">&quot;Weights&quot;</span>:(培养计划中所占的权重)</span><br><span class="line">    <span class="string">&quot;Teached&quot;</span>:(是否已经讲解)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Point节点的子节点的类型都是Test，代表练习题。</p><p>Test节点的属性内容如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;properties&quot;</span>:</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;Type&quot;</span>：（该习题的习题类型）</span><br><span class="line">    <span class="string">&quot;Difficulty&quot;</span>: (该题目难易度)</span><br><span class="line">    <span class="string">&quot;Importance&quot;</span>: (该题目的重要程度)</span><br><span class="line">    <span class="string">&quot;HomeworkTimes&quot;</span>:(在作业中出现过几次)</span><br><span class="line">    <span class="string">&quot;WrongTimes&quot;</span>:(在作业中被做错的次数)</span><br><span class="line">    <span class="string">&quot;ExamTimes&quot;</span>:(在前几年的考试中总共出现的次数)</span><br><span class="line">    <span class="string">&quot;Teached&quot;</span>:(是否已经讲解)</span><br><span class="line">    <span class="string">&quot;Content&quot;</span>: (该习题的具体内容)</span><br><span class="line">    <span class="string">&quot;Answer&quot;</span>:(该题目的答案)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建各个节点的代码如下。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Create (Python:Class &#123;title:&#x27;Python数据处理编程&#x27;, Teacher:&#x27;蒋万春&#x27;&#125;)</span><br><span class="line">CREATE (Grammar:Theme &#123;title:&#x27;Python语法基础&#x27;,Difficulty:2,importance:5&#125;)</span><br><span class="line">Create (InFunction:Knowledge &#123;title:&#x27;Python内置函数&#x27;,Difficulty:2,importance:5&#125;)</span><br><span class="line">Create (TypeChangeJudge:Point &#123;title:&#x27;类型转换与判断&#x27;,Difficulty:2,importance:5&#125;)</span><br><span class="line">Create (Test1:Test &#123;title:&#x27;test1&#x27;,type:1,Dificulty:2,Content:&#x27;bin(555)的答案是\nA.0b1000101011\tB.100101011\tC.0b1000101010\tD.1000101010&#x27;&#125;)</span><br><span class="line"><span class="keyword">Create</span> (Python)<span class="operator">-</span>[:include]<span class="operator">-</span><span class="operator">&gt;</span>(Grammar)<span class="operator">-</span>[:include]<span class="operator">-</span><span class="operator">&gt;</span>(InFunction)<span class="operator">-</span>[:include]<span class="operator">-</span><span class="operator">&gt;</span>(TypeChangeJudge)</span><br><span class="line">Create (n:Knowledge &#123;title:&#x27;运算符与表达式&#x27;,Difficulty:3,importance:4&#125;)</span><br><span class="line">Create (p:Point &#123;title:&#x27;算数运算符&#x27;,Difficulty:3,importance:4&#125;)</span><br><span class="line">Create (t:Test &#123;title:&#x27;test2&#x27;,type:2,Dificulty:2,Content:&#x27;3**2的答案是&#x27;&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>之后创建各个节点之间的连接</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">match (k:Knowledge&#123;title:&quot;运算符与表达式&quot;&#125;),(t:Theme&#123;title:&quot;Python语法基础&quot;&#125;) create (t)-[:include]-&gt;(k)</span><br><span class="line">match (t:Test&#123;title:&quot;test2&quot;&#125;),(p:Point&#123;title:&quot;算数运算符&quot;&#125;),(k:Knowledge&#123;title:&quot;运算符与表达式&quot;&#125;) create (k)-[:include]-&gt;(p)-[:include]-&gt;(t);</span><br></pre></td></tr></table></figure><p>搭建的基本的图结构如下图所示。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\自动组卷系统\image-20211012154800153.png" alt="image-20211012154800153" style="zoom:50%;" /><h3 id="使用python连接neo4j数据库"><a href="#使用python连接neo4j数据库" class="headerlink" title="使用python连接neo4j数据库"></a>使用python连接neo4j数据库</h3><p>首先是搭建环境，使用的neo4j的版本是3.3.3所以需要使用较低版本的各种python的库。</p><p>安装的python的版本是3.7.经过多次调试，使用如下命令安装neo4j的相关包是可以成功的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install py2neo&#x3D;&#x3D;4.3</span><br><span class="line">pip install neo4j-driver&#x3D;&#x3D;1.5.3</span><br></pre></td></tr></table></figure><p>重点使用py2neo包对图数据库的内容进行查找和操作。测试代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> py2neo <span class="keyword">import</span> Graph,Node,Relationship</span><br><span class="line">graph = Graph(<span class="string">&quot;http://localhost:7474&quot;</span>,auth=(<span class="string">&quot;neo4j&quot;</span>,<span class="string">&quot;password&quot;</span>))</span><br><span class="line">a = Node(<span class="string">&quot;Person&quot;</span>, name=<span class="string">&quot;Alice&quot;</span>)</span><br><span class="line">b = Node(<span class="string">&quot;Person&quot;</span>, name=<span class="string">&quot;Bob&quot;</span>)</span><br><span class="line">ab = Relationship(a, <span class="string">&quot;KNOWS&quot;</span>, b)</span><br><span class="line">graph.create(ab)</span><br></pre></td></tr></table></figure><p>出现如下结果则证明环境已经安装完成。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\自动组卷系统\image-20211013130646335.png" alt="image-20211013130646335" style="zoom:50%;" /><h3 id="python进行控制台系统设计"><a href="#python进行控制台系统设计" class="headerlink" title="python进行控制台系统设计"></a>python进行控制台系统设计</h3><h4 id="功能模块"><a href="#功能模块" class="headerlink" title="功能模块"></a>功能模块</h4><ol><li>插入层节点</li><li>插入题目</li><li>出卷</li><li>退出</li></ol><h4 id="插入层节点设计"><a href="#插入层节点设计" class="headerlink" title="插入层节点设计"></a>插入层节点设计</h4><p>因为Class节点只有一个，所以就手动创建了，之后系统只需要创建Theme、Knowledge、Point这三种层节点。在创建层节点的同时需要同时创建该层节点和上一个层节点的连接。</p><h3 id="Django的相关知识"><a href="#Django的相关知识" class="headerlink" title="Django的相关知识"></a>Django的相关知识</h3><h4 id="项目的urls-py和app内的urls-py的区别"><a href="#项目的urls-py和app内的urls-py的区别" class="headerlink" title="项目的urls.py和app内的urls.py的区别"></a>项目的urls.py和app内的urls.py的区别</h4><p>在一个项目中，通常不会只有一个app，如果把所有的 app 的 views 中的视图都放在 urls.py 中进行映射，会让代码显得非常乱。因此 django 给我们提供了一个方法，可以在 app 内部包含自己的 url 匹配规则，而在项目的 urls.py 中再统一包含这个 app 的 urls 。使用这个技术需要借助 include 函数。</p><p><strong>应用中的urls.py文件</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> demo <span class="keyword">import</span> views</span><br><span class="line"> </span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r&#x27;^receive/&#x27;</span>, views.receive),</span><br><span class="line"> </span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><strong>项目中的urls.py文件</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url, include</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"> </span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r&#x27;^admin/&#x27;</span>, admin.site.urls),</span><br><span class="line">    <span class="comment"># 自动同步的demo</span></span><br><span class="line">    url(<span class="string">r&#x27;^demo/&#x27;</span>, include(<span class="string">&#x27;demo.urls&#x27;</span>)),</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="django的url匹配问题"><a href="#django的url匹配问题" class="headerlink" title="django的url匹配问题"></a>django的url匹配问题</h4><p><a href="https://www.cnblogs.com/JiangLe/p/9197874.html">https://www.cnblogs.com/JiangLe/p/9197874.html</a> 和<a href="https://blog.csdn.net/J_wb49/article/details/103055521%E8%BF%99%E4%B8%A4%E7%AF%87%E6%96%87%E7%AB%A0%E4%BB%8B%E7%BB%8D%E4%BA%86%E5%A6%82%E4%BD%95%E9%98%B2%E6%AD%A2%E5%9C%A8%E5%A4%9A%E4%B8%AAapp%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9B%B8%E5%90%8C%E5%91%BD%E5%90%8D%E7%9A%84html%E6%96%87%E4%BB%B6%E7%9A%84%E9%97%AE%E9%A2%98%E3%80%82">https://blog.csdn.net/J_wb49/article/details/103055521这两篇文章介绍了如何防止在多个app中出现相同命名的html文件的问题。</a></p><h4 id="如何设置django的日志系统进行调试"><a href="#如何设置django的日志系统进行调试" class="headerlink" title="如何设置django的日志系统进行调试"></a>如何设置django的日志系统进行调试</h4><p>在<code>settings.py</code>文件中加入如下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> django.utils.log</span><br><span class="line"><span class="keyword">import</span> logging.handlers</span><br><span class="line"><span class="comment"># 添加日志的打印项</span></span><br><span class="line">log_path = os.path.join(BASE_DIR, <span class="string">&quot;logs&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(log_path):</span><br><span class="line">    os.makedirs(<span class="string">&quot;logs&quot;</span>)</span><br><span class="line"></span><br><span class="line">LOGGING = &#123;</span><br><span class="line">    <span class="string">&#x27;version&#x27;</span>: <span class="number">1</span>,  <span class="comment"># 保留字</span></span><br><span class="line">    <span class="string">&#x27;disable_existing_loggers&#x27;</span>: <span class="literal">False</span>,  <span class="comment"># 禁用已经存在的logger实例</span></span><br><span class="line">    <span class="comment"># 日志文件的格式</span></span><br><span class="line">    <span class="string">&#x27;formatters&#x27;</span>: &#123;</span><br><span class="line">        <span class="comment"># 详细的日志格式</span></span><br><span class="line">        <span class="string">&#x27;standard&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;format&#x27;</span>: <span class="string">&#x27;[%(asctime)s][%(threadName)s:%(thread)d][task_id:%(name)s][%(filename)s:%(lineno)d]&#x27;</span></span><br><span class="line">                      <span class="string">&#x27;[%(levelname)s][%(message)s]&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment"># 简单的日志格式</span></span><br><span class="line">        <span class="string">&#x27;simple&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;format&#x27;</span>: <span class="string">&#x27;[%(levelname)s][%(asctime)s][%(filename)s:%(lineno)d]%(message)s&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment"># 定义一个特殊的日志格式</span></span><br><span class="line">        <span class="string">&#x27;collect&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;format&#x27;</span>: <span class="string">&#x27;%(message)s&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment"># 过滤器</span></span><br><span class="line">    <span class="string">&#x27;filters&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;require_debug_true&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;()&#x27;</span>: <span class="string">&#x27;django.utils.log.RequireDebugTrue&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment"># 处理器</span></span><br><span class="line">    <span class="string">&#x27;handlers&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;console&#x27;</span>: &#123;     <span class="comment"># 在终端打印</span></span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;DEBUG&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;filters&#x27;</span>: [<span class="string">&#x27;require_debug_true&#x27;</span>],  <span class="comment"># 只有在Django debug为True时才在屏幕打印日志</span></span><br><span class="line">            <span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;logging.StreamHandler&#x27;</span>,  <span class="comment">#</span></span><br><span class="line">            <span class="string">&#x27;formatter&#x27;</span>: <span class="string">&#x27;simple&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;default&#x27;</span>: &#123;    <span class="comment"># 默认的</span></span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;INFO&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;logging.handlers.RotatingFileHandler&#x27;</span>,  <span class="comment"># 保存到文件，自动切</span></span><br><span class="line">            <span class="string">&#x27;filename&#x27;</span>: os.path.join(BASE_DIR+<span class="string">&#x27;/logs/&#x27;</span>, <span class="string">&quot;all.log&quot;</span>),  <span class="comment"># 日志文件</span></span><br><span class="line">            <span class="string">&#x27;maxBytes&#x27;</span>: <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">50</span>,                    <span class="comment"># 日志大小 50M</span></span><br><span class="line">            <span class="string">&#x27;backupCount&#x27;</span>: <span class="number">3</span>,                                <span class="comment"># 最多备份几个</span></span><br><span class="line">            <span class="string">&#x27;formatter&#x27;</span>: <span class="string">&#x27;standard&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;encoding&#x27;</span>: <span class="string">&#x27;utf-8&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;error&#x27;</span>: &#123;   <span class="comment"># 专门用来记错误日志</span></span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;ERROR&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;logging.handlers.RotatingFileHandler&#x27;</span>,  <span class="comment"># 保存到文件，自动切</span></span><br><span class="line">            <span class="string">&#x27;filename&#x27;</span>: os.path.join(BASE_DIR+<span class="string">&#x27;/logs/&#x27;</span>, <span class="string">&quot;error.log&quot;</span>),  <span class="comment"># 日志文件</span></span><br><span class="line">            <span class="string">&#x27;maxBytes&#x27;</span>: <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">50</span>,  <span class="comment"># 日志大小 50M</span></span><br><span class="line">            <span class="string">&#x27;backupCount&#x27;</span>: <span class="number">5</span>,</span><br><span class="line">            <span class="string">&#x27;formatter&#x27;</span>: <span class="string">&#x27;standard&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;encoding&#x27;</span>: <span class="string">&#x27;utf-8&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;collect&#x27;</span>: &#123;   <span class="comment"># 专门定义一个收集特定信息的日志</span></span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;INFO&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;logging.handlers.RotatingFileHandler&#x27;</span>,  <span class="comment"># 保存到文件，自动切</span></span><br><span class="line">            <span class="string">&#x27;filename&#x27;</span>: os.path.join(BASE_DIR+<span class="string">&#x27;/logs/&#x27;</span>, <span class="string">&quot;collect.log&quot;</span>),</span><br><span class="line">            <span class="string">&#x27;maxBytes&#x27;</span>: <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">50</span>,  <span class="comment"># 日志大小 50M</span></span><br><span class="line">            <span class="string">&#x27;backupCount&#x27;</span>: <span class="number">5</span>,</span><br><span class="line">            <span class="string">&#x27;formatter&#x27;</span>: <span class="string">&#x27;collect&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;encoding&#x27;</span>: <span class="string">&quot;utf-8&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;scprits_handler&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>:<span class="string">&#x27;DEBUG&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;class&#x27;</span>:<span class="string">&#x27;logging.handlers.RotatingFileHandler&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;filename&#x27;</span>: os.path.join(BASE_DIR+<span class="string">&#x27;/logs/&#x27;</span>, <span class="string">&quot;script.log&quot;</span>),</span><br><span class="line">            <span class="string">&#x27;maxBytes&#x27;</span>: <span class="number">1024</span>*<span class="number">1024</span>*<span class="number">5</span>,</span><br><span class="line">            <span class="string">&#x27;backupCount&#x27;</span>: <span class="number">5</span>,</span><br><span class="line">            <span class="string">&#x27;formatter&#x27;</span>:<span class="string">&#x27;standard&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;loggers&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;django&#x27;</span>: &#123;             <span class="comment"># 默认的logger应用如下配置</span></span><br><span class="line">            <span class="string">&#x27;handlers&#x27;</span>: [<span class="string">&#x27;default&#x27;</span>, <span class="string">&#x27;console&#x27;</span>, <span class="string">&#x27;error&#x27;</span>],  <span class="comment"># 上线之后可以把&#x27;console&#x27;移除</span></span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;DEBUG&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;propagate&#x27;</span>: <span class="literal">True</span>,  <span class="comment"># 向不向更高级别的logger传递</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;collect&#x27;</span>: &#123;      <span class="comment"># 名为 &#x27;collect&#x27;的logger还单独处理</span></span><br><span class="line">            <span class="string">&#x27;handlers&#x27;</span>: [<span class="string">&#x27;console&#x27;</span>, <span class="string">&#x27;collect&#x27;</span>],</span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;INFO&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;scripts&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;handlers&#x27;</span>: [<span class="string">&#x27;scprits_handler&#x27;</span>],</span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;INFO&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;propagate&#x27;</span>: <span class="literal">False</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后再在需要使用的地方加入如下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logger = logging.getLogger(<span class="string">&#x27;django&#x27;</span>)</span><br><span class="line">logger.info(xxxx)</span><br></pre></td></tr></table></figure><p>就可以在文件中看到你想要看到的调试结果了。</p><h3 id="如何在pycharm中远程调试服务器的django项目"><a href="#如何在pycharm中远程调试服务器的django项目" class="headerlink" title="如何在pycharm中远程调试服务器的django项目"></a>如何在pycharm中远程调试服务器的django项目</h3><h3 id="使用Django-Uwsgi-nginx搭建前后端平台"><a href="#使用Django-Uwsgi-nginx搭建前后端平台" class="headerlink" title="使用Django+Uwsgi+nginx搭建前后端平台"></a>使用Django+Uwsgi+nginx搭建前后端平台</h3><p><a href="https://github.com/jiangnanboy/movie_knowledge_graph_app">jiangnanboy/movie_knowledge_graph_app: 电影知识图谱，主要包括实体识别、实体查询、关系查询以及智能问答等。movie knowledge graph(Entity identification, graph display, and intelligent question and answer) (github.com)</a>作为主要前端参考的github项目。</p><p><a href="https://neo4j-examples.github.io/paradise-papers-django/%E6%98%AF%E6%95%B4%E4%BD%93%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%8F%82%E8%80%83">https://neo4j-examples.github.io/paradise-papers-django/是整体项目的参考</a></p><h4 id="在django项目中连接到服务器的neo4j数据库"><a href="#在django项目中连接到服务器的neo4j数据库" class="headerlink" title="在django项目中连接到服务器的neo4j数据库"></a>在django项目中连接到服务器的neo4j数据库</h4><p>在<code>settings.py</code>文件中引入了<code>neomodel</code>文件，用于直接在django中连接neo4j数据库。在文件中加入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config.DATABASE_URL = <span class="string">&#x27;bolt://neo4j:neo4j@1.15.187.75:7687&#x27;</span></span><br></pre></td></tr></table></figure><p>关于neomodel包的使用见<a href="https://juejin.cn/post/6844904005060165646%E8%BF%99%E7%AF%87%E6%96%87%E7%AB%A0">https://juejin.cn/post/6844904005060165646这篇文章</a></p><h4 id="配置django的static文件"><a href="#配置django的static文件" class="headerlink" title="配置django的static文件"></a>配置django的static文件</h4><p>首先就遇到了一个问题，如何在nginx+django中搭建管理静态文件的环境。这个问题整整调了三个小时。</p><p>问题描述：在django中用 <code>python manage.py runserver 0.0.0.0:80</code>命令可以成功显示静态文件，但是使用nginx之后就不可以了。</p><p>解决办法：</p><ol><li><p>配置nginx的配置文件：这里需要注意这是django项目目录下的static文件，最后要加上一个“/”</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\自动组卷系统\image-20211020165009512.png" alt="image-20211020165009512"></p></li><li><p>在项目中的<code>urls.py</code>中添加如下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.staticfiles.views <span class="keyword">import</span> serve</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> re_path</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">return_static</span>(<span class="params">request, path, insecure=<span class="literal">True</span>, **kwargs</span>):</span></span><br><span class="line">  <span class="keyword">return</span> serve(request, path, insecure, **kwargs)</span><br><span class="line"> </span><br><span class="line">urlpatterns = [</span><br><span class="line">  ...</span><br><span class="line">  re_path(<span class="string">r&#x27;^static/(?P&lt;path&gt;.*)$&#x27;</span>, return_static, name=<span class="string">&#x27;static&#x27;</span>), <span class="comment"># 添加这行</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>修改setting.py中的有关static_url中的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">STATIC_URL = <span class="string">&#x27;/static/&#x27;</span></span><br><span class="line"></span><br><span class="line">STATICFILES_DIRS = [</span><br><span class="line">    os.path.join(BASE_DIR, <span class="string">&quot;static&quot;</span>),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">STATIC_ROOT = os.path.join(BASE_DIR, <span class="string">&#x27;collect_static/&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ol><h4 id="设置models"><a href="#设置models" class="headerlink" title="设置models"></a>设置models</h4><p>首先在app中新建一个models的文件夹，然后在models中创建所需要的类。</p><p>models是django所用到的数据类型，需要对每个节点的类型都设置一个单独的model。models文件夹的内容如下。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\自动组卷系统\image-20211026220958331.png" alt="image-20211026220958331" style="zoom:50%;" /><p>里面把neo4j数据库中的所有类型的节点都变成以python类的形式存在，方便直接进行节点的调用。为了在首页进行显示的时候区分Class节点和其他类型的知识节点，所以每个节点内都设置了<code>attributes</code>属性，用于区分两者的区别<code>Point.py</code>的具体内容如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> neomodel <span class="keyword">import</span> (</span><br><span class="line">    StringProperty,</span><br><span class="line">    StructuredNode,</span><br><span class="line">    RelationshipFrom,</span><br><span class="line">    IntegerProperty,</span><br><span class="line">    RelationshipTo,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .nodeutils <span class="keyword">import</span> NodeUtils</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>(<span class="params">StructuredNode, NodeUtils</span>):</span></span><br><span class="line">    <span class="built_in">type</span> = <span class="string">&#x27;Point&#x27;</span></span><br><span class="line">    title = StringProperty()</span><br><span class="line">    Difficulty = IntegerProperty()</span><br><span class="line">    Importance = IntegerProperty()</span><br><span class="line">    <span class="built_in">id</span>= IntegerProperty(index=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># 下面这两个属性用于生成关系</span></span><br><span class="line">    <span class="comment"># knowledges = RelationshipFrom(&#x27;.Knowledge.Knowledge&#x27;, &#x27;include&#x27;)</span></span><br><span class="line">    tests = RelationshipTo(<span class="string">&#x27;.Test.Test&#x27;</span>, <span class="string">&#x27;relate&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># serialize可以以字典的形式返回数据</span></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">serialize</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="string">&#x27;node_properties&#x27;</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;type&#x27;</span> : self.<span class="built_in">type</span>,</span><br><span class="line">                <span class="string">&#x27;title&#x27;</span>: self.title,</span><br><span class="line">                <span class="string">&#x27;id&#x27;</span>: self.<span class="built_in">id</span>,</span><br><span class="line">                <span class="string">&#x27;attributes&#x27;</span>:&#123;</span><br><span class="line">                    <span class="string">&#x27;Difficulty&#x27;</span>: self.Difficulty,</span><br><span class="line">                    <span class="string">&#x27;Importance&#x27;</span>: self.Importance,</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">#以字典的形式返回所有和该节点连接的节点</span></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">serialize_connections</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&#x27;nodes_type&#x27;</span>: <span class="string">&#x27;Test&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;nodes_related&#x27;</span>: self.serialize_relationships(self.tests.<span class="built_in">all</span>()),</span><br><span class="line">            &#125;,</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure><p>在djano的项目中，setting设置连接了neo4j数据库之后，在代码中直接调用这个类就可以直接连接neo4j数据库了。</p><h2 id="真实使用中的问题"><a href="#真实使用中的问题" class="headerlink" title="真实使用中的问题"></a>真实使用中的问题</h2><h3 id="常用命令集合"><a href="#常用命令集合" class="headerlink" title="常用命令集合"></a>常用命令集合</h3><ol><li><p>部分学生由于选课的问题并没有被导入教务系统的名单，需要手动导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE(n:Student &#123;name:&#39;虞昊泽&#39;, gender:1,username:&#39;8204201928&#39;,password:&#39;8204201928&#39;,study_class:&quot;计算机2002&quot;,test_num:0,test_right_num:0&#125;)</span><br></pre></td></tr></table></figure></li><li><p>删除某个学生的相关的边</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">match (n)-[r]-&gt;(m)</span><br><span class="line">where n.name&#x3D;&quot;李扬&quot;</span><br><span class="line">delete r</span><br><span class="line">return n</span><br></pre></td></tr></table></figure></li><li></li></ol><h3 id="部分题目的答案录入出错"><a href="#部分题目的答案录入出错" class="headerlink" title="部分题目的答案录入出错"></a>部分题目的答案录入出错</h3><p>在第一次作业中，有三道题的答案录入出错</p><h3 id="编程题没有办法分开编译错误和程序错误（能不能跑起来和跑起来之后答案对不对）"><a href="#编程题没有办法分开编译错误和程序错误（能不能跑起来和跑起来之后答案对不对）" class="headerlink" title="编程题没有办法分开编译错误和程序错误（能不能跑起来和跑起来之后答案对不对）"></a>编程题没有办法分开编译错误和程序错误（能不能跑起来和跑起来之后答案对不对）</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>算法笔记</title>
    <link href="/2021/05/20/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/05/20/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>本人目前大三在读，为了对考研的机试做好准备，特此写博客对算法进行总结。本博客主要是根据《算法笔记》这本书进行复习。并且作者已经有了C语言的一定基础。</p><h1 id="算法笔记-第一章"><a href="#算法笔记-第一章" class="headerlink" title="算法笔记-第一章"></a>算法笔记-第一章</h1><p>算法笔记第一章主要就是介绍了本书使用的题目来源分别是<a href="https://www.patest.cn/">PAT 计算机程序设计能力考试 (patest.cn)</a>和<a href="https://www.codeup.cn/">酷哒学习平台 (codeup.cn)</a>并介绍了主要使用的语言是C和C++。</p><p>好像目前codeup没有办法使用了，所以找到了<a href="http://codeup.hustoj.com/">华中科技大学的题目备份网站</a>在里面可以进行算法笔记相关题目的练习。</p><p>由于本人有一定的C语言基础，所以对第二章就不做过多的介绍了</p><h1 id="算法笔记-第三章：入门模拟"><a href="#算法笔记-第三章：入门模拟" class="headerlink" title="算法笔记-第三章：入门模拟"></a>算法笔记-第三章：入门模拟</h1><p>入门模拟主要用来熟悉一下编辑环境还有两个网站的风格，所以还是决定试一试。</p><h2 id="简单模拟"><a href="#简单模拟" class="headerlink" title="简单模拟"></a>简单模拟</h2><p>两个简单的模拟熟悉一下风格</p><blockquote><p><strong><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805325918486528">1001 害死人不偿命的(3n+1)猜想</a></strong></p><p>卡拉兹(Callatz)猜想：</p><p>对任何一个正整数 <em>n</em>，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把 (3<em>n</em>+1) 砍掉一半。这样一直反复砍下去，最后一定在某一步得到 <em>n</em>=1。卡拉兹在 1950 年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证 (3<em>n</em>+1)，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展……</p><p>我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过 1000 的正整数 <em>n</em>，简单地数一下，需要多少步（砍几下）才能得到 <em>n</em>=1？</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>每个测试输入包含 1 个测试用例，即给出正整数 <em>n</em> 的值。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出从 <em>n</em> 计算到 1 需要的步数。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure></blockquote><p>首先就Visual Studio的环境就配置了挺久的，重点是记得一定要在项目的源文件里创建cpp文件，不要乱搞。</p><p><img src="/images/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/image-20210520104750931.png" alt="image-20210520104750931"></p><p>并且在Visual Studio2019中，使用scanf可能回出现问题，所以需要在文件首行加上<code>#define _CRT_SECURE_NO_WARNINGS</code></p><p>具体代码如下。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//#include &lt;cstdio&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="comment">//读入输入的数据</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="comment">//轮次记录</span></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; n != <span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">n = n / <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">n = (<span class="number">3</span> * n + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, i);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805289432236032">1032 挖掘机技术哪家强</a>*</p><p>为了用事实说明挖掘机技术到底哪家强，PAT 组织了一场挖掘机技能大赛。现请你根据比赛结果统计出技术最强的那个学校。</p><h3 id="输入格式：-1"><a href="#输入格式：-1" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第 1 行给出不超过 105 的正整数 <em>N</em>，即参赛人数。随后 <em>N</em> 行，每行给出一位参赛者的信息和成绩，包括其所代表的学校的编号（从 1 开始连续编号）、及其比赛成绩（百分制），中间以空格分隔。</p><h3 id="输出格式：-1"><a href="#输出格式：-1" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中给出总得分最高的学校的编号、及其总分，中间以空格分隔。题目保证答案唯一，没有并列。</p><h3 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">3 65</span><br><span class="line">2 80</span><br><span class="line">1 100</span><br><span class="line">2 70</span><br><span class="line">3 40</span><br><span class="line">3 0</span><br></pre></td></tr></table></figure><h3 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 150</span><br></pre></td></tr></table></figure></blockquote><p>解决代码如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="comment">//记录所有得分的数组</span></span><br><span class="line"><span class="keyword">int</span> S[<span class="number">100010</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="comment">//记录最高得分</span></span><br><span class="line"><span class="keyword">int</span> max_score = <span class="number">-1</span>;</span><br><span class="line"><span class="comment">//记录最高的单位</span></span><br><span class="line"><span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//输入的行数</span></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="comment">//记录目前输入</span></span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> t_score = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line"><span class="keyword">while</span> (N != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;t, &amp;t_score);</span><br><span class="line">S[t] = S[t] + t_score;</span><br><span class="line"><span class="keyword">if</span> (S[t] &gt; max_score)</span><br><span class="line">&#123;</span><br><span class="line">max = t;</span><br><span class="line">max_score = S[t];</span><br><span class="line">&#125;</span><br><span class="line">N--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>,max, S[max]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><p>通常查找较多元素的时候使用二分法，下面例题用于训练二分法查找。由于书中的例子是遍历查找的，所以将下面的例子换成了PAT中的二分查找的例子</p><blockquote><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805432256675840"><strong>1048 Find Coins</strong></a><br>Eva loves to collect coins from all over the universe, including some other planets like Mars. One day she visited a universal shopping mall which could accept all kinds of coins as payments. However, there was a special requirement of the payment: for each bill, she could only use exactly two coins to pay the exact amount. Since she has as many as 105 coins with her, she definitely needs your help. You are supposed to tell her, for any given amount of money, whether or not she can find two coins to pay for it.</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>Each input file contains one test case. For each case, the first line contains 2 positive numbers: <em>N</em> (≤$10^5$, the total number of coins) and <em>M</em> (≤$10^3$, the amount of money Eva has to pay). The second line contains <em>N</em> face values of the coins, which are all positive numbers no more than 500. All the numbers in a line are separated by a space.</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>For each test case, print in one line the two face values $V_1$ and $V_2$ (separated by a space) such that  $V_1$ + $V_2$ =M and  $V_1$ ≤$V_2$. If such a solution is not unique, output the one with the smallest  $V_1$ . If there is no solution, output <code>No Solution</code> instead.</p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">8 15</span><br><span class="line">1 2 8 7 2 4 11 15</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 11</span><br></pre></td></tr></table></figure></blockquote><p>此题目就是给出n个硬币面额，还有一个目标金额m，如果n个硬币面额中存在两个n1 + n2 = m，则输出n1最小的n1、n2组合。如果不存在则输出No Solution。</p><blockquote><h3 id="二分法"><a href="#二分法" class="headerlink" title="二分法"></a>二分法</h3><p>先将所有硬币从小到大排序，然后逐个选择作为第一个硬币x，令第二个硬币y=m-x，如果y比500大说明这种情况不可以，如果y比500小则在当前硬币之后的所有硬币中二分查找是否存在数值为y的硬币，如果存在则输出并退出循环，如果不存在则输出No solution。</p></blockquote><p>解决代码如下,其中，二分查找的方法是经常用的，这里使用的是递归的方法进行二分查找。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_NUM 100010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//递归实现二分查找</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bi_find</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> coins[],<span class="keyword">int</span> right,<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> mid;</span><br><span class="line"><span class="keyword">if</span> (left &gt; right) &#123; <span class="keyword">return</span> <span class="literal">false</span>; &#125;</span><br><span class="line">mid = (left + right) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (coins[mid] == x) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (coins[mid] &gt; x) &#123; <span class="keyword">return</span>(<span class="built_in">bi_find</span>(left, coins, mid - <span class="number">1</span>, x)); &#125;</span><br><span class="line"><span class="keyword">if</span> (coins[mid] &lt; x) &#123; <span class="keyword">return</span>(<span class="built_in">bi_find</span>(mid + <span class="number">1</span>, coins, right, x)); &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="comment">//n是需要输入的所有硬币的个数，m是需要组成的钱</span></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="comment">//硬币数组</span></span><br><span class="line"><span class="keyword">int</span> coins[MAX_NUM];</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;coins[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从小到大，对coins进行排序</span></span><br><span class="line"><span class="built_in">sort</span>(coins, coins + n);</span><br><span class="line"><span class="comment">//输出结果 v1,v2</span></span><br><span class="line"><span class="keyword">int</span> v1 = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> v2 = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">v1 = coins[i];</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">bi_find</span>(i+<span class="number">1</span>, coins,n<span class="number">-1</span>,m-v1)) &#123;</span><br><span class="line">v2 = m - v1;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (v2 != <span class="number">-1</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, v1, v2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (v2 == <span class="number">-1</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;No Solution&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="图形输出"><a href="#图形输出" class="headerlink" title="图形输出"></a>图形输出</h2><p>在有些题目中，题目会给定一些规则，需要考生根据规则来进行画图。所谓图形，其实是由若干字符组成的，因此只需要弄清楚规则就能编写代码。这种题目的做法–般有两种:</p><ol><li>通过规律直接输出</li><li>通过二维字符数组输出</li></ol><p>下面是PAT中的一个例子。</p><blockquote><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805285812551680"><strong>1036 跟奥巴马一起编程</strong></a> </p><p>美国总统奥巴马不仅呼吁所有人都学习编程，甚至以身作则编写代码，成为美国历史上首位编写计算机代码的总统。2014 年底，为庆祝“计算机科学教育周”正式启动，奥巴马编写了很简单的计算机代码：在屏幕上画一个正方形。现在你也跟他一起画吧！</p><h3 id="输入格式：-2"><a href="#输入格式：-2" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出正方形边长 <em>N</em>（3≤<em>N</em>≤20）和组成正方形边的某种字符 C，间隔一个空格。</p><h3 id="输出格式：-2"><a href="#输出格式：-2" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出由给定字符 C 画出的正方形。但是注意到行间距比列间距大，所以为了让结果看上去更像正方形，我们输出的行数实际上是列数的 50%（四舍五入取整）。</p><h3 id="输入样例：-2"><a href="#输入样例：-2" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 a</span><br></pre></td></tr></table></figure><h3 id="输出样例：-2"><a href="#输出样例：-2" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">aaaaaaaaaa</span><br><span class="line">a        a</span><br><span class="line">a        a</span><br><span class="line">a        a</span><br><span class="line">aaaaaaaaaa</span><br></pre></td></tr></table></figure></blockquote><p>就是一个简单的输出正方形的题，这里我感觉比较重要的是需要学会用c++，来进行四舍五入的判断。首先需要导入的是<code>math.h</code>包，之后使用<code>round(n / 2.0)</code>运算对值进行四舍五入，其中最重要一点是除数需要是<strong>2.0</strong>，即一个小数，这样n是整型的话才可以。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="comment">//输入正方形边长</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="comment">//输入字符c</span></span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %c&quot;</span>, &amp;n,&amp;c);</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//这里用于对行数进行四舍五入取整</span></span><br><span class="line"><span class="keyword">int</span> row = <span class="number">0</span>;</span><br><span class="line">row = <span class="built_in">round</span>(n / <span class="number">2.0</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; row; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">0</span> || i==row<span class="number">-1</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (j == <span class="number">0</span> || j== n<span class="number">-1</span>) &#123; <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, c); &#125;</span><br><span class="line"><span class="keyword">else</span> &#123; <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>); &#125;</span><br><span class="line"><span class="keyword">if</span> (j == n - <span class="number">1</span>) &#123; <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="日期问题"><a href="#日期问题" class="headerlink" title="日期问题"></a>日期问题</h2><p>日期问题主要还是需要对闰年进行判断。</p><blockquote><p><a href="http://codeup.hustoj.com/problem.php?cid=100000578&pid=0">日期差值</a></p><p>有两个日期，求两个日期之间的天数，如果两个日期是连续的我们规定他们之间的天数为两天。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>有多组数据，每组数据有两行，分别表示两个日期，形式为YYYYMMDD</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>每组数据输出一行，即日期差值</p><h3 id="输入样例：-3"><a href="#输入样例：-3" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">20130101</span><br><span class="line">20130105</span><br></pre></td></tr></table></figure><h3 id="输出样例：-3"><a href="#输出样例：-3" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure></blockquote><p>这种求日期之间相差天数的题目有一一个很直接的思路，即令日期不断加1天，直到第一个日期等于第二个日期为止，即可统计出答案。具体处理时，如果当加了一天之后天数d 等于当前月份m所拥有的天数加1，那么就令月份m加1、同时置天数d为1号(即把日期变于当前月份m所拥有的天数加1，那么就令月份m加1、同时置天数d为1号(即把日期变为下一个月的1号);如果此时月份m变为了13，那么就令年份y加1、同时置月份m为1月(即把日期变为下一年的1月)。<br>为了方便直接取出每个月的天数，不妨给定一个二维数组<code>int month[13][2]</code>, 用来存放每个月的天数，其中第二维为0时表示平年，为1时表示闰年。<br>注意:如果想要加快速度，只需要先把第-一个 日期的年份不断加1，直到与第二个日期的年份相差1为止(想一想为什么不能直接加到等于第二个日期的年份时才停止? )， 期间根据平年或是闰年来累加365天或者366天即可。之后再进行不断令天数加1的操作。</p><p>代码如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> month[<span class="number">13</span>][<span class="number">2</span>] = &#123; &#123;<span class="number">0</span>, <span class="number">0</span>&#125;,&#123;<span class="number">31</span>, <span class="number">31</span>&#125;,&#123;<span class="number">28</span>, <span class="number">29</span>&#125;,&#123;<span class="number">31</span>, <span class="number">31</span>&#125;,&#123;<span class="number">30</span>, <span class="number">30</span>&#125;,&#123;<span class="number">31</span>, <span class="number">31</span>&#125;,&#123;<span class="number">30</span>, <span class="number">30</span>&#125;,&#123;<span class="number">31</span>, <span class="number">31</span>&#125;,&#123;<span class="number">31</span>, <span class="number">31</span>&#125;,&#123;<span class="number">30</span>, <span class="number">30</span>&#125;,&#123;<span class="number">31</span>, <span class="number">31</span>&#125;,&#123;<span class="number">30</span>, <span class="number">30</span>&#125;,&#123;<span class="number">31</span>, <span class="number">31</span>&#125; &#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isLeap</span><span class="params">(<span class="keyword">int</span> year)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span>((year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>) || year % <span class="number">400</span> == <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//编号是1的存储更大的日期</span></span><br><span class="line"><span class="keyword">int</span> time1, time2;</span><br><span class="line"><span class="keyword">int</span> year1, year2, month1, month2, day1, day2;</span><br><span class="line"><span class="comment">//对输入进行取值</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;time1, &amp;time2);</span><br><span class="line"><span class="keyword">if</span> (time1 &lt; time2) &#123;</span><br><span class="line"><span class="keyword">int</span> time = time1;</span><br><span class="line">time1 = time2;</span><br><span class="line">time2 = time;</span><br><span class="line">&#125;</span><br><span class="line">year1 = time1 / <span class="number">10000</span>;</span><br><span class="line">year2 = time2 / <span class="number">10000</span>;</span><br><span class="line">month1 = time1 % <span class="number">10000</span> / <span class="number">100</span>;</span><br><span class="line">month2 = time2 % <span class="number">10000</span> / <span class="number">100</span>;</span><br><span class="line">day1 = time1 % <span class="number">100</span>;</span><br><span class="line">day2 = time2 % <span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> day = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> isleap = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (year2 != year1 || month2 != month1 || day2 != day1) &#123;</span><br><span class="line"><span class="keyword">if</span> (day2 == month[month2][<span class="built_in">isLeap</span>(year2)]) &#123;</span><br><span class="line">day2 = <span class="number">0</span>;</span><br><span class="line">month2++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (month2 == <span class="number">13</span>) &#123;</span><br><span class="line">year2++;</span><br><span class="line">month2 = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">day2++;</span><br><span class="line">day++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, day);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="算法笔记-第四章：算法初步"><a href="#算法笔记-第四章：算法初步" class="headerlink" title="算法笔记-第四章：算法初步"></a>算法笔记-第四章：算法初步</h1><p>第三章的内容作为入手所以基本每一个题目都上手敲了一遍，第四章的内容就只会捡着重点敲一下了。</p><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><p><strong>算法逻辑</strong>：总共需要进行$n(1\le i \le n)$趟操作,每趟操作选出待排序部分$[i,n]$中最小的元素，令其与$A[i]$交换。复杂度是$O(n^2)$.</p><h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3><p>关于插入排序的内容，看下面的几个图就可以了。</p><p><img src="/images/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/image-20210526192254889.png" alt="image-20210526192254889"></p><p><img src="/images/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/image-20210526192324752.png" alt="image-20210526192324752"></p><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><p>介绍一下书中没有提到的快速排序的问题。</p><p>快速排序算法是一种基于交换的高效的排序算法，它采用了<strong>分治法</strong>的思想：</p><ol><li>从数列中取出一个数作为基准数（枢轴，pivot）。 </li><li>将数组进行划分(partition)，将比基准数大的元素都移至枢轴右边，将小于等于基准数的元素都移至枢轴左边。</li><li>再对左右的子区间重复第二步的划分操作，直至每个子区间只有一个元素。</li></ol><p>代码如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span>  <span class="comment">//找基准数 划分</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = left + <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">int</span> j = right;</span><br><span class="line">    <span class="keyword">int</span> temp = arr[left];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(i &lt;= j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (arr[i] &lt; temp)</span><br><span class="line">        &#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (arr[j] &gt; temp )</span><br><span class="line">        &#123;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; j)</span><br><span class="line">            <span class="built_in">swap</span>(arr[i++], arr[j--]);</span><br><span class="line">        <span class="keyword">else</span> i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">swap</span>(arr[j], arr[left]);</span><br><span class="line">    <span class="keyword">return</span> j;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (left &gt; right)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="built_in">partition</span>(arr, left, right);</span><br><span class="line">    <span class="built_in">quick_sort</span>(arr, left, j - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">quick_sort</span>(arr, j + <span class="number">1</span>, right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="排序题与sort函数的应用"><a href="#排序题与sort函数的应用" class="headerlink" title="排序题与sort函数的应用"></a>排序题与sort函数的应用</h3><p>在笔试的过程中常常会涉及到对各种不同的结构体进行排序的情况，这个时候就需要自己完成sort函数的排序规则即<strong>自己完成cmp函数</strong>的定义。sort函数是C++中的一个库，可以很方便的进行调用。下面看一个PAT的例子。</p><blockquote><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805474338127872"><strong>1025 PAT Ranking</strong></a></p><p>Programming Ability Test (PAT) is organized by the College of Computer Science and Technology of Zhejiang University. Each test is supposed to run simultaneously in several places, and the ranklists will be merged immediately after the test. Now it is your job to write a program to correctly merge all the ranklists and generate the final rank.</p><h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line contains a positive number <em>N</em> (≤100), the number of test locations. Then <em>N</em> ranklists follow, each starts with a line containing a positive integer <em>K</em> (≤300), the number of testees, and then <em>K</em> lines containing the registration number (a 13-digit number) and the total score of each testee. All the numbers in a line are separated by a space.</p><h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, first print in one line the total number of testees. Then print the final ranklist in the following format:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">registration_number final_rank location_number local_rank</span><br></pre></td></tr></table></figure><p>The locations are numbered from 1 to <em>N</em>. The output must be sorted in nondecreasing order of the final ranks. The testees with the same score must have the same rank, and the output must be sorted in nondecreasing order of their registration numbers.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">5</span><br><span class="line">1234567890001 95</span><br><span class="line">1234567890005 100</span><br><span class="line">1234567890003 95</span><br><span class="line">1234567890002 77</span><br><span class="line">1234567890004 85</span><br><span class="line">4</span><br><span class="line">1234567890013 65</span><br><span class="line">1234567890011 25</span><br><span class="line">1234567890014 100</span><br><span class="line">1234567890012 85</span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">9</span><br><span class="line">1234567890005 1 1 1</span><br><span class="line">1234567890014 1 2 1</span><br><span class="line">1234567890001 3 1 2</span><br><span class="line">1234567890003 3 1 2</span><br><span class="line">1234567890004 5 1 4</span><br><span class="line">1234567890012 5 2 2</span><br><span class="line">1234567890002 7 1 5</span><br><span class="line">1234567890013 8 2 3</span><br><span class="line">1234567890011 9 2 4</span><br></pre></td></tr></table></figure></blockquote><p>该题目需要注意的点如下：</p><ol><li>自己创建结构类型，熟悉结构类型的操作</li><li>c++中的sort函数以及自定义比较大小的方法</li><li>由于用户id是13位的，所以使用<code>long long int</code>的类型</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_NUM 30010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">ll <span class="keyword">int</span> registration_number;</span><br><span class="line"><span class="keyword">int</span> final_rank;</span><br><span class="line"><span class="keyword">int</span> location_number;</span><br><span class="line"><span class="keyword">int</span> local_rank;</span><br><span class="line"><span class="keyword">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//自定义比较大小</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Student a, Student b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a.score != b.score) &#123; <span class="keyword">return</span> a.score &gt; b.score; &#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> a.registration_number &lt; b.registration_number;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Student stu[MAX_NUM];</span><br><span class="line"><span class="comment">//输入地址个数</span></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//记录学生总数</span></span><br><span class="line"><span class="keyword">int</span> s = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> s1 = s;</span><br><span class="line"><span class="keyword">int</span> K = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;K);</span><br><span class="line"><span class="comment">//读入学生信息</span></span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; K; j++) &#123;</span><br><span class="line">stu[s].location_number = i+<span class="number">1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld %d&quot;</span>, &amp;stu[s].registration_number, &amp;stu[s].score);</span><br><span class="line">s++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> s2 = s;</span><br><span class="line"><span class="comment">//对这一个地区的进行排序</span></span><br><span class="line"><span class="built_in">sort</span>(stu + s1, stu + s2,cmp);</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; K; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (j!=<span class="number">0</span> &amp;&amp; stu[s1 + j].score == stu[s1 + j - <span class="number">1</span>].score) &#123; stu[s1 + j].local_rank = stu[s1 + j - <span class="number">1</span>].local_rank; &#125;</span><br><span class="line"><span class="keyword">else</span> &#123; stu[s1 + j].local_rank = j + <span class="number">1</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//对所有学生总排序，然后记录排名</span></span><br><span class="line"><span class="built_in">sort</span>(stu, stu + s, cmp);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, s);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; s; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; stu[i].score == stu[i<span class="number">-1</span>].score) &#123; stu[i].final_rank = stu[i - <span class="number">1</span>].final_rank; &#125;</span><br><span class="line"><span class="keyword">else</span> &#123; stu[i].final_rank = i + <span class="number">1</span>; &#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld %d %d %d\n&quot;</span>,stu[i].registration_number,stu[i].final_rank,stu[i].location_number,stu[i].local_rank);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用以上代码进行提交的时候，发现最后一个例子总是过不去，所以将用户id的类型改写成了字符串的类型，重点记得要修改字符串比较大小的方式。最后成功通过。</p><h2 id="散列——Hash"><a href="#散列——Hash" class="headerlink" title="散列——Hash"></a>散列——Hash</h2><h3 id="hash的定义与整数散列"><a href="#hash的定义与整数散列" class="headerlink" title="hash的定义与整数散列"></a>hash的定义与整数散列</h3><p><strong>思路</strong>：<u>创建hashTable用空间换取时间，那就是直接把输入的数作为数组的下标来对这个数的性质进行统计</u>。散列：“将元素通过一个函数转换为整数，使得该整数可以尽量唯一 地代表这个元素”。</p><p>常用的散列函数有：</p><ol><li>直接定址法。</li><li>平方取中法。</li><li>除留余数法。</li></ol><p>如何解决散列的地址冲突问题：</p><ul><li>线性探查法</li><li>平方探查法</li><li>链地址法</li></ul><h3 id="字符串hash初步"><a href="#字符串hash初步" class="headerlink" title="字符串hash初步"></a>字符串hash初步</h3><p>hash中的key不是整数，而是字符串的时候。</p><p><img src="/images/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/image-20210527201122751.png" alt="image-20210527201122751"></p><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><h3 id="分治"><a href="#分治" class="headerlink" title="分治"></a>分治</h3><p>分治法的三个步骤：</p><ol><li>分解：将原问题分解为若干和原问题拥有相同或相似结构的子问题。</li><li>解决：递归求解所有子问题。如果存在子问题的规模小到可以直接解决，就直接解决它。</li><li>合并：将子问题的解合并为原问题的解。</li></ol><p>需要指出的是，分治法分解出的子问题应当是相互独立、没有交叉的。如果存在两个子问题有相交部分，那么不应当使用分治法解决。</p><h3 id="递归-1"><a href="#递归-1" class="headerlink" title="递归"></a>递归</h3><p>递归逻辑中有两个重要的概念：</p><ol><li>递归边界</li><li>递归式</li></ol><p>递归的经典问题：</p><ol><li>全排列</li><li>八皇后</li></ol><h2 id="贪心"><a href="#贪心" class="headerlink" title="贪心"></a>贪心</h2><h3 id="简单贪心"><a href="#简单贪心" class="headerlink" title="简单贪心"></a>简单贪心</h3><p>贪心法是求解一类最优化问题的方法， 它总是考虑在当前状态下局部最优（或较优）的策略，来使全局的结果达到最优(或较优)。显然，如果采取较优而非最优的策略（最优策略）。</p><p>下面是贪心算法的例题。</p><blockquote><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805298269634560"><strong>1023 组个最小数</strong></a></p><p>给定数字 0-9 各若干个。你可以以任意顺序排列这些数字，但必须全部使用。目标是使得最后得到的数尽可能小（注意 0 不能做首位）。例如：给定两个 0，两个 1，三个 5，一个 8，我们得到的最小的数就是 10015558。</p><p>现给定数字，请编写程序输出能够组成的最小的数。</p><h3 id="输入格式：-3"><a href="#输入格式：-3" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出 10 个非负整数，顺序表示我们拥有数字 0、数字 1、……数字 9 的个数。整数间用一个空格分隔。10 个数字的总个数不超过 50，且至少拥有 1 个非 0 的数字。</p><h3 id="输出格式：-3"><a href="#输出格式：-3" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出能够组成的最小的数。</p><h3 id="输入样例：-4"><a href="#输入样例：-4" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 2 0 0 0 3 0 0 1 0</span><br></pre></td></tr></table></figure><h3 id="输出样例：-4"><a href="#输出样例：-4" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10015558</span><br></pre></td></tr></table></figure></blockquote><p>不是很难，所以直接贴代码了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_NUM 60</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> nums[<span class="number">10</span>] = &#123;&#125;;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> ans[MAX_NUM] = &#123;&#125;;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;nums[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (nums[i] != <span class="number">0</span>) &#123;</span><br><span class="line">ans[j] = i + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">j++;</span><br><span class="line">nums[i]--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="keyword">while</span>(nums[i] != <span class="number">0</span>) &#123;</span><br><span class="line">ans[j] = i + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">j++;</span><br><span class="line">nums[i]--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="区间贪心"><a href="#区间贪心" class="headerlink" title="区间贪心"></a>区间贪心</h3><p>书中的描述蛮有意思的。</p><p><img src="/images/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/image-20210527210523447.png" alt="image-20210527210523447"></p><h2 id="二分"><a href="#二分" class="headerlink" title="二分"></a>二分</h2><h3 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h3><p>关于二分查找的知识点在上文提到过了，所以不再赘述。</p><p><img src="/images/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/image-20210527211947169.png" alt="image-20210527211947169"></p><h3 id="二分法拓展"><a href="#二分法拓展" class="headerlink" title="二分法拓展"></a>二分法拓展</h3><blockquote><p>求多条边组成的凸边形的外接圆的最大半径</p><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定 N 个线段的长度，试将它们头尾相接（顺序任意）地组合成一个凸多边形，使得凸多边形的外接圆的半径最大，求该最大半径。其中 N 不超过 105 ，线段长度均不超过 100 ，要求算法中不涉及坐标的计算。</p><h3 id="考查内容"><a href="#考查内容" class="headerlink" title="考查内容"></a>考查内容</h3><p>二分算法的本质就是通过不断迭代使left 和 right 在固定条件下逐渐靠近真实值，符合一定误差，所以实际上把该题放在二分扩展里面，这个所谓的最大半径的“最大”是不在求解中的，最大应该算题干，先组成一个有外接圆的凸多边形，然后求其半径即可。不要误入歧途在“最大”上绞尽脑汁。</p></blockquote><h3 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h3><h1 id="算法笔记-第五章：数学问题"><a href="#算法笔记-第五章：数学问题" class="headerlink" title="算法笔记-第五章：数学问题"></a>算法笔记-第五章：数学问题</h1><h2 id="简单数学"><a href="#简单数学" class="headerlink" title="简单数学"></a>简单数学</h2><h1 id="算法笔记-第七章：提高篇-1-–数据结构专题（1）"><a href="#算法笔记-第七章：提高篇-1-–数据结构专题（1）" class="headerlink" title="算法笔记-第七章：提高篇(1)–数据结构专题（1）"></a>算法笔记-第七章：提高篇(1)–数据结构专题（1）</h1><h2 id="栈的应用"><a href="#栈的应用" class="headerlink" title="栈的应用"></a>栈的应用</h2>]]></content>
    
    
    
    <tags>
      
      <tag>算法 复习 算法笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo更换主题</title>
    <link href="/2021/05/13/hexo%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/"/>
    <url>/2021/05/13/hexo%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo设置插图"><a href="#Hexo设置插图" class="headerlink" title="Hexo设置插图"></a>Hexo设置插图</h1><p>hexo可以很好的结合Typora进行博客文章的插图处理，就只需要两步操作</p><h2 id="设置图片根目录"><a href="#设置图片根目录" class="headerlink" title="设置图片根目录"></a>设置图片根目录</h2><p>打开<code>格式(O)-图像-设置图片根目录</code>，选择<code>source</code>文件夹（就是<code>_posts</code>上一级），确定，这时候回到文件中，可以看到在文章头部出现了这么一行字：</p><p><img src="/images/hexo%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/image-20210513163932292.png" alt="设置图片根目录"></p><h2 id="Typora配置"><a href="#Typora配置" class="headerlink" title="Typora配置"></a>Typora配置</h2><p>在Typora中设置图像粘贴位置</p><p>打开<code>格式(O)-图像-全局图像设置</code>，在“插入图片时…”选择<strong>复制到指定路径</strong>，然后在下面写入<code>../images/$&#123;filename&#125;</code>（<code>$</code>中的参数是以文件名命名的文件夹），并勾选“优先使用相对路径”。</p><p><img src="/images/hexo%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/image-20210513164424278.png" alt="typora更改路径"></p><p>完成上面这两个步骤就可以在自己hexo的主页中看到自己上传的图片了。</p><h1 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a>设置主题</h1><p>首先去hexo的主题官网<a href="https://hexo.io/themes/">Themes | Hexo</a>选一个主题，这里就介绍最简单的NEXT主题叭。</p><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>进入hexo对应的目录，使用git运行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure><p>git结果如下图</p><p><img src="/images/hexo%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/image-20210513184904009.png" alt="下载主题"></p><h2 id="设置主题-1"><a href="#设置主题-1" class="headerlink" title="设置主题"></a>设置主题</h2><p>修改当前目录下的<code>_config.yml</code>文件，找到 theme 字段，并将其值更改为 next。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>然后使用git重新部署网站</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><p>但是出现了如下错误 <code>&#123;% extends ‘_layout.swig‘ %&#125; &#123;% import ‘_macro/post.swig‘ as post_template %&#125;</code></p><p><img src="/images/hexo%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/image-20210513192500960.png" alt="next出错"></p><p>之后在网上找到该问题的答案，用npm安装swig。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-swig --save</span><br></pre></td></tr></table></figure><p>之后就可以看到next的主题风格了。</p><p><img src="/images/hexo%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/image-20210513194508921.png" alt="next主页"></p><h2 id="修改网站中的配置文件"><a href="#修改网站中的配置文件" class="headerlink" title="修改网站中的配置文件"></a>修改网站中的配置文件</h2><p>在当前目录下进入对<code>_config.yml</code>文件内容进行修改。</p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo插图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大数据编程第一天</title>
    <link href="/2021/05/11/%E7%94%A8%E6%88%B7%E7%94%BB%E5%83%8F/"/>
    <url>/2021/05/11/%E7%94%A8%E6%88%B7%E7%94%BB%E5%83%8F/</url>
    
    <content type="html"><![CDATA[<p>因为本科专业是大数据的，但是三年下来好像对大数据没有特别深的了解，所以最近打算跟着B站上的教程学一手大数据的项目。是<a href="https://www.bilibili.com/video/BV1Mp4y1x7y7?t=332">黑马程序员_大数据实战之用户画像企业级项目,快速进入500强企业的捷径_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili</a>用到了spark的相关知识。</p><h1 id="什么是用户画像"><a href="#什么是用户画像" class="headerlink" title="什么是用户画像"></a>什么是用户画像</h1><p>用户画像通常应用于营销推广和个性化推荐。</p><ol><li>数据仓库<ul><li>离线数据仓库，例如点击流日志数据</li><li>实时数据仓库</li></ul></li><li>用户画像<ul><li>以用户为主题，将用户数据进行标签化，给用户打上标签，获取用户群体和画像</li></ul></li><li>推广营销和个性化推荐<ul><li>使用用户画像的标签数据</li></ul></li></ol><p><a href="">用户画像：将用户数据标签化，给用户打上标签。</a></p><blockquote><p>用户数据有哪些</p><ul><li>基本信息数据<ul><li>基于基本信息数据构建标签，称为<code>User Personal</code></li></ul></li><li>使用APP或网站产生数据<ul><li>流量日志数据、订单数据、购物车数据、收藏数据</li><li>构建标签，称为<code>User Profile</code></li></ul></li></ul></blockquote><p><strong>重点来了</strong>：经过我几天的观察以及搜索，发现没有办法获取这个教程相关的资料。所以又只能自己一步步学习了。😔，太难了。目前就是一边快速看视频一边努力找适合自己的项目。所以接下来记录的都是我自己的学习过程。</p><h1 id="搭建大数据环境"><a href="#搭建大数据环境" class="headerlink" title="搭建大数据环境"></a>搭建大数据环境</h1><p>第一次知道可以使用ClouderaManager或者Ambari直接对大数据平台进行搭建。本文使用CM安装CDH从而对大数据平台进行安装以及管理。</p><p>首先使用VMware搭建了三个Centos系统的主机，并配置了公网ip地址。其中废了好大的劲用来配置，主要参考了下面的文章<a href="https://blog.csdn.net/chsong888/article/details/79358959"> 一、Vmware虚拟机设置固定IP地址_半个西瓜-CSDN博客</a></p><p>之后根据<a href="https://blog.csdn.net/m0_38017084/article/details/82218559?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-2.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-2.control">cloudera环境搭建_扣脚小生-CSDN博客_cloudera</a>安装Cloudera环境。</p><h2 id="集群同步脚本"><a href="#集群同步脚本" class="headerlink" title="集群同步脚本"></a>集群同步脚本</h2><p>根据网上的其他资料，补充一下博客中没有的，如何设置集群同步脚本。不过在设置集群同步脚本之前，最好先进行<strong>SSH免密登录</strong>。</p><p>这是需要自己完成一个脚本的，从而之后方便调用。</p><p>具体代码即运行结果如下</p><h3 id="编写集群同步自行命令的脚本"><a href="#编写集群同步自行命令的脚本" class="headerlink" title="编写集群同步自行命令的脚本"></a>编写集群同步自行命令的脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">[root@node101 ~]# vi &#x2F;usr&#x2F;local&#x2F;bin&#x2F;xcall.sh</span><br><span class="line">[root@node101 ~]# </span><br><span class="line">[root@node101 ~]# chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;xcall.sh</span><br><span class="line">[root@node101 ~]# </span><br><span class="line">[root@node101 ~]# more &#96;which xcall.sh&#96;</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">#@author :yinzhengjie</span><br><span class="line">#blog:http:&#x2F;&#x2F;www.cnblogs.com&#x2F;yinzhengjie</span><br><span class="line">#EMAIL:y1053419035@qq.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#判断用户是否传参</span><br><span class="line">if [ $# -lt 1 ];then</span><br><span class="line">        echo &quot;请输入参数&quot;</span><br><span class="line">        exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">#获取用户输入的命令</span><br><span class="line">cmd&#x3D;$@</span><br><span class="line"></span><br><span class="line">for (( i&#x3D;101;i&lt;&#x3D;103;i++ ))</span><br><span class="line">do</span><br><span class="line">        #使终端变绿色 </span><br><span class="line">        tput setaf 2</span><br><span class="line">        echo &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; node$&#123;i&#125;.yinzhengjie.org.cn : $cmd &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">        #使终端变回原来的颜色，即白灰色</span><br><span class="line">        tput setaf 7</span><br><span class="line">        #远程执行命令</span><br><span class="line">        ssh node$&#123;i&#125;.yinzhengjie.org.cn  $cmd</span><br><span class="line">        #判断命令是否执行成功</span><br><span class="line">        if [ $? &#x3D;&#x3D; 0 ];then</span><br><span class="line">                echo &quot;命令执行成功&quot;</span><br><span class="line">        fi</span><br><span class="line">done</span><br><span class="line">[root@node101 ~]# </span><br><span class="line">[root@node101 ~]# xcall.sh ls -d &#x2F;home&#x2F;yinzhengjie&#x2F;</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; node101.yinzhengjie.org.cn : ls -d &#x2F;home&#x2F;yinzhengjie&#x2F; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">&#x2F;home&#x2F;yinzhengjie&#x2F;</span><br><span class="line">命令执行成功</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; node102.yinzhengjie.org.cn : ls -d &#x2F;home&#x2F;yinzhengjie&#x2F; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">&#x2F;home&#x2F;yinzhengjie&#x2F;</span><br><span class="line">命令执行成功</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; node103.yinzhengjie.org.cn : ls -d &#x2F;home&#x2F;yinzhengjie&#x2F; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">&#x2F;home&#x2F;yinzhengjie&#x2F;</span><br><span class="line">命令执行成功</span><br><span class="line">[root@node101 ~]# </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="编写集群同步配置文件的脚本"><a href="#编写集群同步配置文件的脚本" class="headerlink" title="编写集群同步配置文件的脚本"></a>编写集群同步配置文件的脚本</h3><p>这个脚本与之前的脚本的区别就在于脚本中只对后面两个从节点进行了配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">[root@node101 ~]# vi &#x2F;usr&#x2F;local&#x2F;bin&#x2F;xrsync.sh</span><br><span class="line">[root@node101 ~]# </span><br><span class="line">[root@node101 ~]# </span><br><span class="line">[root@node101 ~]# chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;xrsync.sh</span><br><span class="line">[root@node101 ~]# </span><br><span class="line">[root@node101 ~]# </span><br><span class="line">[root@node101 ~]# more &#96;which xrsync.sh&#96;</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">#@author :yinzhengjie</span><br><span class="line">#blog:http:&#x2F;&#x2F;www.cnblogs.com&#x2F;yinzhengjie</span><br><span class="line">#EMAIL:y1053419035@qq.com</span><br><span class="line"></span><br><span class="line">#判断用户是否传参</span><br><span class="line">if [ $# -lt 1 ];then</span><br><span class="line">    echo &quot;请输入参数&quot;;</span><br><span class="line">    exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#获取文件路径</span><br><span class="line">file&#x3D;$@</span><br><span class="line"></span><br><span class="line">#获取子路径</span><br><span class="line">filename&#x3D;&#96;basename $file&#96;</span><br><span class="line"></span><br><span class="line">#获取父路径</span><br><span class="line">dirpath&#x3D;&#96;dirname $file&#96;</span><br><span class="line"></span><br><span class="line">#获取完整路径</span><br><span class="line">cd $dirpath</span><br><span class="line">fullpath&#x3D;&#96;pwd -P&#96;</span><br><span class="line"></span><br><span class="line">#同步文件到DataNode</span><br><span class="line">for (( i&#x3D;102;i&lt;&#x3D;103;i++ ))</span><br><span class="line">do</span><br><span class="line">    #使终端变绿色 </span><br><span class="line">    tput setaf 2</span><br><span class="line">    echo &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; node$&#123;i&#125;.yinzhengjie.org.cn : $file &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">    #使终端变回原来的颜色，即白灰色</span><br><span class="line">    tput setaf 7</span><br><span class="line">    #远程执行命令</span><br><span class="line">    rsync -lr $filename &#96;whoami&#96;@node$&#123;i&#125;.yinzhengjie.org.cn:$fullpath</span><br><span class="line">    #判断命令是否执行成功</span><br><span class="line">    if [ $? &#x3D;&#x3D; 0 ];then</span><br><span class="line">        echo &quot;命令执行成功&quot;</span><br><span class="line">    fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h2 id="配置java环境"><a href="#配置java环境" class="headerlink" title="配置java环境"></a>配置java环境</h2><p>三个机子都需要配置java环境。关于如何下载老版本的java链接如下<a href="https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html">Java Archive Downloads - Java SE 8 (oracle.com)</a></p><p>但是安装的过程中出现了报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java: error while loading shared libraries: libjli.so: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure><p>原因应该是在解压<code>jdk-8u181-linux-x64.tar.gz</code>的时候，由于jdk文件过大，直接拖入虚拟机的时候造成了文件的损坏，所以解决方案见<a href="https://blog.csdn.net/liangliang233/article/details/105968513/?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-0&spm=1001.2101.3001.4242">(linux解压出错 归档文件中异常的 EOF 文件不完整_liangliang233的博客-CSDN博客</a>之后就可以了。重新安装一下就可以了。</p><h2 id="安装CM"><a href="#安装CM" class="headerlink" title="安装CM"></a>安装CM</h2><p>由于最近CM的官网要求下载相关文件需要购买，所以特此找了一个有百度网盘的下载教程<a href="https://cloud.tencent.com/developer/article/1185607">Centos7离线安装Cloudera Manager 5.14.1 - 云+社区 - 腾讯云 (tencent.com)</a>但主要的流程还是跟着之前的来的，只是中间换了一些步骤。</p><p>主要记录一下rpm的安装方式。</p><p>按照<a href="https://blog.csdn.net/u010452388/article/details/102822956?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-0&spm=1001.2101.3001.4242"> CDH5.16.1采用rpm+http方式离线部署（图解详细流程）_阿顾的博客-CSDN博客</a>这篇博客进行的。其中数据库的配置部分其中综合了两篇文章的共同部分。</p><h2 id="分区扩容"><a href="#分区扩容" class="headerlink" title="分区扩容"></a>分区扩容</h2><p>linux的分区如何扩容可以参考这一篇<a href="https://zhuanlan.zhihu.com/p/83340525">博客</a>。在操作的过程中需要对部分的分区进行扩容。</p><p>最后成功搭建了Cloudera-Manager环境，但是由于虚拟机的内存不够，怎么运行都很卡。所以至此，切换了研究的思路。打算自己搭建大数据环境了。</p><h1 id="Spark电商实战项目"><a href="#Spark电商实战项目" class="headerlink" title="Spark电商实战项目"></a>Spark电商实战项目</h1><p>这一部分的内容是根据<a href="https://blog.csdn.net/u012318074/category_6744423.html">Spark大型电商项目实战_Erik_ly的博客-CSDN博客</a>进行的。</p><h2 id="常用的命令"><a href="#常用的命令" class="headerlink" title="常用的命令"></a>常用的命令</h2><p>在这之前先记录常用的命令</p><blockquote><ul><li>启动mysql</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service mysql start</span><br><span class="line">service mysql status   #验证</span><br></pre></td></tr></table></figure><ul><li>启动zookeeper</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zkServer.sh start    #每个节点都要执行</span><br></pre></td></tr></table></figure><ul><li>启动hdfs</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">start-dfs.sh   #在主机上运行</span><br><span class="line">jps   #在三台机子上使用jps查看</span><br></pre></td></tr></table></figure><ul><li>启动yarn集群</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">start-yarn.sh    #hadoop01启动start-yarn.sh</span><br><span class="line">yarn-daemon.sh start resourceManager   #hadoop02、3手动启动ResourceManager</span><br></pre></td></tr></table></figure><ul><li>更改hdfs中的文件的所属用户</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u hdfs hdfs dfs -chown root &#x2F;user&#x2F;root</span><br></pre></td></tr></table></figure><ul><li>获取hdfs的正确端口号</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs getconf -confKey fs.default.name</span><br></pre></td></tr></table></figure></blockquote><h2 id="在使用过程中常见的问题"><a href="#在使用过程中常见的问题" class="headerlink" title="在使用过程中常见的问题"></a>在使用过程中常见的问题</h2><p>这一部分介绍项目在进行和使用的过程中遇到的一些问题。</p><h3 id="启动hadoop集群的时候没有namenode"><a href="#启动hadoop集群的时候没有namenode" class="headerlink" title="启动hadoop集群的时候没有namenode"></a>启动hadoop集群的时候没有namenode</h3><p>在主机的终端使用<code>start-all.sh</code>之后，使用jps查看，发现结果如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@sun sun]# jps</span><br><span class="line">3270 QuorumPeerMain</span><br><span class="line">7159 SecondaryNameNode</span><br><span class="line">2295 Main</span><br><span class="line">7310 ResourceManager</span><br><span class="line">7582 Jps</span><br><span class="line">3215 AlertPublisher</span><br><span class="line">3311 DataNode</span><br></pre></td></tr></table></figure><p>主要根据这篇文章进行修改<a href="https://blog.csdn.net/weixin_44318830/article/details/104339471">完美解决Hadoop集群无法正常关闭的问题!_Alice菌的博客-CSDN博客</a>和<a href="https://blog.csdn.net/hlx20080808/article/details/56670886">hadoop 关闭datanode节点时发生异常：no datanode to stop_分享我的点点滴滴，在成长路上与你同行！-CSDN博客</a></p><h3 id="hadoop没有办法正常关闭"><a href="#hadoop没有办法正常关闭" class="headerlink" title="hadoop没有办法正常关闭"></a>hadoop没有办法正常关闭</h3><p>在进行<code>stop-all.sh</code>的时候，显示的是</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# stop-dfs.sh</span><br><span class="line">Stopping namenodes on [master]</span><br><span class="line">master: no namenode to stop</span><br><span class="line">slave2: no datanode to stop</span><br><span class="line">slave1: no datanode to stop</span><br><span class="line">…</span><br></pre></td></tr></table></figure><p>这个问题的出现是由于hadoop集群关闭的时候，Namenode或者DataNode的pid文件找不着。所以就需要强制关闭hadoop，即使用<code>kill -9 pid</code>.但是在使用这个命令关闭datanode的时候总是会有新的datanode进程被创建，所以需要使用命令<code>cd /proc/pid</code>和<code>cat status</code>对这个进行的父进程进行查看，kill掉父进程，但是发现一会又创建出来了datanode。</p><p>所以需要先使用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find -name dfs</span><br></pre></td></tr></table></figure><p>，找到所有的dfs文件，之后将除了eclipse后面的那个都删除，之后再删除<code>/tmp</code>目录中的一些文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@sun2 tmp]# rm -rf hsperfdata*</span><br><span class="line">[root@sun2 tmp]# rm -rf hadoop*</span><br><span class="line">[root@sun2 tmp]# rm -rf yarn*</span><br></pre></td></tr></table></figure><p>之后再使用<code>jps</code>进行查看，就发现都没有了。</p><p>之后需要修改pid文件的目录，在配置文件中$HADOOP_HOME/conf/hadoop-env.sh中添加如下，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export HADOOP_PID_DIR=$&#123;HADOOP_HOME&#125;/pids</span><br></pre></td></tr></table></figure><h3 id="hadoop配置文件"><a href="#hadoop配置文件" class="headerlink" title="hadoop配置文件"></a>hadoop配置文件</h3><p>修改master主机修改Hadoop如下配置文件，这些配置文件都位于/usr/local/hadoop/etc/hadoop目录下。<br>修改slaves：<br>这里把DataNode的主机名写入该文件，每行一个。这里让master节点主机仅作为NameNode使用。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sun2</span><br><span class="line">sun3</span><br></pre></td></tr></table></figure><p>修改core-site.xml，其中<code>hadoop.tmp.dir</code>不是一个临时文件，是存放所有hadoop中数据的文件，其目录地址为：<code>file:/usr/local/hadoop/tmp</code>。<code>fs.default.name</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/usr/local/hadoop/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">description</span>&gt;</span>Abase for other temporary directories.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://master:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改hdfs-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hadoop/data/namenode<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hadoop/data/datanode<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hadoop/data/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">value</span>&gt;</span>192.168.220.101:50070<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>dfs.name.dir</code>这个参数用于确定将HDFS文件系统的<strong>元信息保存</strong>在什么目录下。</p><p><code>dfs.data.dir</code>这个参数用于确定将<strong>HDFS文件系统的数据保存</strong>在什么目录下。</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>因为在之前配置过了虚拟机的IP地址，所以这里直接就进行hadoop等环境的配置了。具体细节见原博客，我只说明其中出问题的部分。</p><blockquote><p>在原博客中的对path环境变量进行设置的时候都缺少对原始path的引用，一定要注意。</p></blockquote><p>在linux中运行mysql的命令是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><h3 id="hive安装"><a href="#hive安装" class="headerlink" title="hive安装"></a>hive安装</h3><p>在hive的安装过程中，配置<code>hive-site.xml</code>之后启动hive，出现报错，所以将百度网盘中的<code>hive-site.xml</code>复制进虚拟机中 ，进行替换。</p><blockquote><h4 id="Linux中使用vim进行单词查找的操作"><a href="#Linux中使用vim进行单词查找的操作" class="headerlink" title="Linux中使用vim进行单词查找的操作"></a>Linux中使用vim进行单词查找的操作</h4><p>从开头搜索</p><p>在命令模式下，输入/你要查找的字符</p><p>按下回车，可以看到vim把光标移动到该字符处</p><p>再按n（小写）查看下一个匹配</p><p>按N(大写）查看上一个匹配（capslock切换大小写，也可以在小写状态下按shift+n）</p><p>从结尾处搜索</p><p>？要搜索的字符串或字符</p></blockquote><p>之后在使用hive创建表格的时候出现了报错</p><blockquote><p>FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask. MetaException(message:Got exception: java.io.IOException Failed on local exception: com.google.protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.; Host Details : local host is: “sun/192.168.220.101”; destination host is: “sun”:9000; )</p></blockquote><p>这里需要先修改一下之前的<code>hive-site.xml</code>文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">  &lt;name&gt;javax.jdo.option.ConnectionURL&lt;&#x2F;name&gt;</span><br><span class="line">  &lt;value&gt;jdbc:mysql:&#x2F;&#x2F;192.168.220.101:3306&#x2F;hive_metadata?serverTimezone&#x3D;GMT&lt;&#x2F;value&gt;</span><br><span class="line">  &lt;description&gt;JDBC connect string for a JDBC metastore&lt;&#x2F;description&gt;</span><br><span class="line">&lt;&#x2F;property&gt;</span><br></pre></td></tr></table></figure><p>数据库连接的部分如上修改。之后在<code>hive</code>的<code>bin</code>目录下运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;schematool -dbType mysql -initSchema</span><br></pre></td></tr></table></figure><p>成功之后即可进行下一步。</p><p>但是在创建表格的时候继续报错。于是使用命令 <code>hive -hiveconf hive.root.logger=DEBUG,console\</code>对hive内的内容进行打印。报错如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR ql.Driver: FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask. MetaException(message:Got exception: org.apache.hadoop.security.AccessControlException Permission denied: user&#x3D;root, access&#x3D;WRITE, inode&#x3D;&quot;&#x2F;user&quot;:hdfs:supergroup:drwxr-xr-x</span><br></pre></td></tr></table></figure><p>这个样子应该是在hadoop中没有给root用户配置权限。定睛一看。发现在hdfs中的user目录下都没有root用户。执行以下命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo -u hdfs hadoop fs -mkdir &#x2F;user&#x2F;root     #在hdfs中创建root用户</span><br><span class="line">hadoop fs -chmod 777 &#x2F;user&#x2F;root              #给root用户配置权限</span><br></pre></td></tr></table></figure><p>之后就可以在hive中创建表格了。之后上传<code>users.txt</code>文件到<code>/usr/local</code>的过程中不知道为什么显示的users表中的内容都是null。但是经过其他的教程来看问题应该不大，所以先不管他。</p><h3 id="zookeeper集群安装"><a href="#zookeeper集群安装" class="headerlink" title="zookeeper集群安装"></a>zookeeper集群安装</h3><p>按照文章的步骤进行，没有出现问题。</p><h3 id="kafka安装"><a href="#kafka安装" class="headerlink" title="kafka安装"></a>kafka安装</h3><p>按照文章的步骤进行，没有出现问题</p><h3 id="flume安装"><a href="#flume安装" class="headerlink" title="flume安装"></a>flume安装</h3><p>在flume的安装过程中出现了问题，其中需要把9000的端口号改成8020</p><h3 id="Spark安装"><a href="#Spark安装" class="headerlink" title="Spark安装"></a>Spark安装</h3><p>按照文章的步骤可以进行安装，但是在进行spark作业提交的时候会出现报错，报错如下</p><blockquote><p>java.lang.OutOfMemoryError: Java heap space</p><p>spark处理数据的时候遇到内存不足的报错</p></blockquote><h3 id="MySQL及客户端安装"><a href="#MySQL及客户端安装" class="headerlink" title="MySQL及客户端安装"></a>MySQL及客户端安装</h3><p>这里都是在自己的windows环境中进行配置的，由于这一部分比较占用内存，所以先不进行操作</p><h3 id="环境搭建-Maven安装及配置idea"><a href="#环境搭建-Maven安装及配置idea" class="headerlink" title="环境搭建-Maven安装及配置idea"></a>环境搭建-Maven安装及配置idea</h3><p>现在大部分的开发都是使用idea了，所以这里的开发环境也选择idea了。参考的博客是<a href="https://blog.csdn.net/qq_32588349/article/details/51461182">使用IntelliJ IDEA 配置Maven（入门）_记事本-CSDN博客_idea配置maven</a></p><h4 id="下载maven级配置"><a href="#下载maven级配置" class="headerlink" title="下载maven级配置"></a>下载maven级配置</h4><p>现在的地址在<a href="https://archive.apache.org/dist/maven/maven-3/3.3.9/binaries/">Index of /dist/maven/maven-3/3.3.9/binaries (apache.org)</a>，</p>]]></content>
    
    
    
    <tags>
      
      <tag>python spark</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在echarts中利用百度地图api绘制国外地图</title>
    <link href="/2021/04/29/%E5%9C%A8echarts%E4%B8%AD%E5%88%A9%E7%94%A8%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE%E7%BB%98%E5%88%B6%E5%9B%BD%E5%A4%96%E5%9C%B0%E5%9B%BE/"/>
    <url>/2021/04/29/%E5%9C%A8echarts%E4%B8%AD%E5%88%A9%E7%94%A8%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE%E7%BB%98%E5%88%B6%E5%9B%BD%E5%A4%96%E5%9C%B0%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<p>由于我最近要利用High-D数据集做一个数据可视化的大屏，所以下面来看看如何利用echarts+百度地图api对国外地图进行简单的绘制。本文利用了jQuery，不会的同学可以先简单了解一下。</p><h2 id="申请百度地图的JavaScript-API"><a href="#申请百度地图的JavaScript-API" class="headerlink" title="申请百度地图的JavaScript API"></a>申请百度地图的JavaScript API</h2><p><a href="http://lbsyun.baidu.com/index.php?title=jspopular3.0">百度地图JavaScript API</a>是一套由JavaScript语言编写的应用程序接口，可帮助您在网站中构建功能丰富、交互性强的地图应用，支持PC端和移动端基于浏览器的地图应用开发，且支持HTML5特性的地图开发。本项目使用的是v3.0版本。</p><p>申请API的具体流程如下图</p><img src="/images/在echarts中利用百度地图绘制国外地图/image-20210429214642909.png" alt="image-20210429214642909" style="zoom:50%;" /><p>其中，需要注意的是在第三步获取服务密钥的时候，应用类型选择浏览器端，申请之后就可以在控制台看到了。</p><img src="/images/在echarts中利用百度地图绘制国外地图/image-20210429215213204.png" alt="image-20210429215213204" style="zoom:50%;" /><h2 id="Echarts相关资源下载"><a href="#Echarts相关资源下载" class="headerlink" title="Echarts相关资源下载"></a>Echarts相关资源下载</h2><p>之后是在echarts的<a href="https://github.com/apache/echarts/tree/master/dist">官方github</a>中下载相应的js文件，在html中引入的js文件从打包后的<code>dist</code>文件夹中拿：<code>dist/echarts.js</code>和<code>dist/extension/bmap.js</code>，之后再把jquery文件导入到对应的html文件中。</p><h2 id="Echarts官方实例的应用"><a href="#Echarts官方实例的应用" class="headerlink" title="Echarts官方实例的应用"></a>Echarts官方实例的应用</h2><p>其中，echarts官网中的<a href="https://echarts.apache.org/examples/zh/editor.html?c=effectScatter-bmap">全国主要城市空气质量图</a>是利用bmap实现的。html文件的代码如下。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">        #main &#123;</span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%;height:800px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./js/echarts.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./js/bmap.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://api.map.baidu.com/api?v=3.0&amp;ak=yourapk&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./js/mymap.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中，<code>mymap.js</code>文件是自己的新建文件，也就是将上面链接中的完整代码复制过来的。去掉<code>import * as echarts from &#39;echarts&#39;;</code>这一行。之后就可以在本地运行，进行查看。如下图所示。</p><img src="/images/在echarts中利用百度地图绘制国外地图/image-20210430000527340.png" alt="image-20210430000527340" style="zoom:40%;" /><h2 id="带入到实际实例中"><a href="#带入到实际实例中" class="headerlink" title="带入到实际实例中"></a>带入到实际实例中</h2><p>本次项目使用的是德国的地图。</p><p>其实百度地图api还是很友善的，因为不管你的需求是国内还是国外它都画的挺详细的（至少在我需求的领域是这个样子）。所以当你想要定位到别的国家的时候，直接修改bmap的center属性就好了，不需要再加载其他国家的地图包之类的了。但是通常其他国家会比中国小，所以有的时候也需要修改地图的缩放程度。自己想要的的经纬度可以使用<a href="http://api.map.baidu.com/lbsapi/getpoint/index.html">百度地图的坐标拾取器 </a>获得。在自己代码中找到下面的地方进行修改。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">center: [<span class="number">9.967067</span>, <span class="number">53.578978</span>],</span><br><span class="line">zoom: <span class="number">7</span>,</span><br></pre></td></tr></table></figure><p>可以看到德国的轮廓被白实线勾勒出来。如下图所示</p><p><img src="/images/%E5%9C%A8echarts%E4%B8%AD%E5%88%A9%E7%94%A8%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE%E7%BB%98%E5%88%B6%E5%9B%BD%E5%A4%96%E5%9C%B0%E5%9B%BE/image-20210511163319564.png" alt="image-20210511163319564"></p><p>如何去除左下角的百度logo和上面居中的题目。左下角的logo需要添加css内容</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.BMap_cpyCtrl</span> &#123;</span><br><span class="line">            <span class="attribute">display</span>: none;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="selector-class">.anchorBL</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: none;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>标题就删除option中的title，即删掉如下代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: &#123;</span><br><span class="line">        text: &#39;全国主要城市空气质量 - 百度地图&#39;,</span><br><span class="line">        subtext: &#39;data from PM25.in&#39;,</span><br><span class="line">        sublink: &#39;http:&#x2F;&#x2F;www.pm25.in&#39;,</span><br><span class="line">        left: &#39;center&#39;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p>地图的样式并不是我们想要的，所以需要对地图的具体样式进行修改，可以使用百度提供的<a href="https://lbsyun.baidu.com/customv2/editor/37ac49dc514ca193f95359ab99c72aee">百度地图个性化编辑器 (baidu.com)</a>对地图进行个性化定制。根据自己的需求定制后点击编辑json，可以获得此地图样式对应的代码。之后把代码复制到<code>mymap.js</code>中的<code>styleJson</code>就可以看到内容发生了改变。下面是我的样式对应的代码和结果。并且为了显示具体的城市和街道名称，需要将zoom调至15。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br></pre></td><td class="code"><pre><span class="line">mapStyle: &#123;</span><br><span class="line">            styleJson: [&#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#fa0404ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;land&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#091220ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;water&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#113549ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;green&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#0e1b30ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;building&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;building&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffb3&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;building&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#dadadab3&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subwaystation&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#b15454B2&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;education&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#e4f1f1ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;medical&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#f0dedeff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;scenicspots&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#e2efe5ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;weight&quot;</span>: <span class="string">&quot;4&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#f7c54dff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#fed669ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#8f5a33ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.icon&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;weight&quot;</span>: <span class="string">&quot;2&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#d8d8d8ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffeebbff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#525355ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;weight&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#d8d8d8ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#979c9aff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;railway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;weight&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;railway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#123c52ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;railway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#12223dff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;weight&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#d8d8d8ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffff00&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#979c9aff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;continent&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;continent&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.icon&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;continent&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#333333ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;continent&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;city&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.icon&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;city&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;city&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#454d50ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;city&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;town&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.icon&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;town&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;town&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#454d50ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;town&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;road&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#12223dff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;poilabel&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;districtlabel&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;road&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;road&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;road&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffff00&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;district&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;poilabel&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.icon&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;poilabel&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#2dc4bbff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;poilabel&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffff00&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;manmade&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#12223dff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;districtlabel&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;entertainment&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;shopping&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#12223dff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><img src="/images/%E5%9C%A8echarts%E4%B8%AD%E5%88%A9%E7%94%A8%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE%E7%BB%98%E5%88%B6%E5%9B%BD%E5%A4%96%E5%9C%B0%E5%9B%BE/image-20210511170026972.png" alt="image-20210511170026972"></p><h2 id="自定义绘制层"><a href="#自定义绘制层" class="headerlink" title="自定义绘制层"></a>自定义绘制层</h2><p>在地图中做出类似百度地图那种路线中有绿有黄有红的感觉。代表路段不同的拥堵程度，就需要使用百度地图api中的<a href="https://lbsyun.baidu.com/index.php?title=jspopular3.0/guide/drawlayer">JavaScript API - 自定义绘制层 | 百度地图API SDK (baidu.com)</a>介绍挺详细的，但是还是会有一些问题。所以在这里还是进行简单的介绍一下。</p><p>首先为了确定公路，需要获得公路的坐标。本项目打算画六段路，所以获取了七个坐标。再mymap.js中创建变量。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> allpoints = &#123;</span><br><span class="line">    <span class="string">&#x27;汉堡&#x27;</span>:[</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.959032</span>, <span class="number">53.574087</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.961734</span>, <span class="number">53.577172</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.962316</span>, <span class="number">53.578091</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.964544</span>, <span class="number">53.580444</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.966556</span>, <span class="number">53.582198</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.968137</span>, <span class="number">53.583753</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.970868</span>, <span class="number">53.584396</span>),</span><br><span class="line">    ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中<code>BMap.Point</code>是一个地理坐标点 ，具体的操作可以看百度api对应的文档，<a href="https://lbsyun.baidu.com/cms/jsapi/reference/jsapi_reference.html#a1b0">百度地图JSAPI 2.0类参考 (baidu.com)</a>下面是通过一段线将这七个点连起来。</p><p>由于本项目是在echarts中使用的百度地图api，所以需要通过echarts调用。具体代码如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> state_name=<span class="string">&#x27;汉堡&#x27;</span></span><br><span class="line"><span class="comment">//获得bmap</span></span><br><span class="line"><span class="keyword">var</span> bmap = myChart.getModel().getComponent(<span class="string">&#x27;bmap&#x27;</span>).getBMap();</span><br><span class="line"><span class="comment">//    首先清空覆盖物</span></span><br><span class="line"><span class="keyword">var</span> allOverlay = bmap.getOverlays();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; allOverlay.length -<span class="number">1</span>; i++)&#123;</span><br><span class="line">    bmap.removeOverlay(allOverlay[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//添加折线,并进行位置的修改</span></span><br><span class="line"><span class="comment">//    绿色的折线</span></span><br><span class="line"><span class="keyword">var</span> curve = <span class="keyword">new</span> BMap.Polyline(allPoints[state_name], &#123;<span class="attr">strokeColor</span>:<span class="string">&quot;#1aff00&quot;</span>,<span class="attr">strokeWeight</span>:<span class="number">8</span>, <span class="attr">strokeOpacity</span>:<span class="number">1</span>&#125;);</span><br><span class="line">bmap.addOverlay(curve);</span><br><span class="line"><span class="keyword">var</span> curve_red = <span class="keyword">new</span> BMap.Polyline([allPoints[state_name][<span class="number">3</span>], allPoints[state_name][<span class="number">4</span>]], &#123;<span class="attr">strokeColor</span>:<span class="string">&quot;#ff0000&quot;</span>,<span class="attr">strokeWeight</span>:<span class="number">8</span>, <span class="attr">strokeOpacity</span>:<span class="number">1</span>&#125;);</span><br><span class="line">bmap.addOverlay(curve_red);</span><br><span class="line"><span class="comment">//黄色的折线</span></span><br><span class="line"><span class="keyword">var</span> curve_yellow = <span class="keyword">new</span> BMap.Polyline([ allPoints[state_name][<span class="number">1</span>],allPoints[state_name][<span class="number">2</span>]], &#123;<span class="attr">strokeColor</span>:<span class="string">&quot;#ffb700&quot;</span>,<span class="attr">strokeWeight</span>:<span class="number">8</span>, <span class="attr">strokeOpacity</span>:<span class="number">1</span>&#125;);</span><br><span class="line">bmap.addOverlay(curve_yellow);</span><br><span class="line"><span class="comment">// 绘制中心点</span></span><br><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> BMap.Marker(centers[state_name]);</span><br><span class="line">bmap.addOverlay(p);</span><br></pre></td></tr></table></figure><p>由于主要是对图层进行添加，所以还应<strong>删除bmap中的series的内容</strong>。最后的结果如下图所示。</p><p><img src="/images/%E5%9C%A8echarts%E4%B8%AD%E5%88%A9%E7%94%A8%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE%E7%BB%98%E5%88%B6%E5%9B%BD%E5%A4%96%E5%9C%B0%E5%9B%BE/image-20210511202950352.png" alt="image-20210511202950352"></p><p><code>mymap.js</code>的源码如下。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> chartDom = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;main&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> myChart = echarts.init(chartDom);</span><br><span class="line"><span class="keyword">var</span> option;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> allPoints = &#123;</span><br><span class="line">    <span class="string">&#x27;汉堡&#x27;</span>:[</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.959032</span>, <span class="number">53.574087</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.961734</span>, <span class="number">53.577172</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.962316</span>, <span class="number">53.578091</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.964544</span>, <span class="number">53.580444</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.966556</span>, <span class="number">53.582198</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.968137</span>, <span class="number">53.583753</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.970868</span>, <span class="number">53.584396</span>),</span><br><span class="line">    ],</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">option = &#123;</span><br><span class="line">    tooltip : &#123;</span><br><span class="line">        trigger: <span class="string">&#x27;item&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    bmap: &#123;</span><br><span class="line">        center: [<span class="number">9.967067</span>, <span class="number">53.578978</span>],</span><br><span class="line">        zoom: <span class="number">15</span>,</span><br><span class="line">        roam: <span class="literal">true</span>,</span><br><span class="line">        mapStyle: &#123;</span><br><span class="line">            styleJson: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;land&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#091220ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;water&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#113549ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;green&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#0e1b30ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;building&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;building&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffb3&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;building&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#dadadab3&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subwaystation&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#b15454B2&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;education&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#e4f1f1ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;medical&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#f0dedeff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;scenicspots&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#e2efe5ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;weight&quot;</span>: <span class="number">4</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#f7c54dff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#fed669ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#8f5a33ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.icon&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;weight&quot;</span>: <span class="number">2</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#d8d8d8ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffeebbff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#525355ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;weight&quot;</span>: <span class="number">1</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#d8d8d8ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#979c9aff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;railway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;weight&quot;</span>: <span class="number">1</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;railway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#123c52ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;railway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#12223dff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;weight&quot;</span>: <span class="number">1</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#d8d8d8ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffff00&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#979c9aff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;continent&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;continent&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.icon&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;continent&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#333333ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;continent&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;city&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.icon&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;city&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;city&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#454d50ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;city&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;town&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.icon&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;town&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;town&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#454d50ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;town&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;road&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#12223dff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;poilabel&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;districtlabel&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;road&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;road&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;road&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffff00&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;district&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;poilabel&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.icon&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;poilabel&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#2dc4bbff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;poilabel&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffff00&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;manmade&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#12223dff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;districtlabel&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;entertainment&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;shopping&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#12223dff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    series :[],</span><br><span class="line">&#125;;</span><br><span class="line">option &amp;&amp; myChart.setOption(option);</span><br><span class="line"><span class="keyword">let</span> state_name=<span class="string">&#x27;汉堡&#x27;</span></span><br><span class="line"><span class="comment">//获得bmap</span></span><br><span class="line"><span class="keyword">var</span> bmap = myChart.getModel().getComponent(<span class="string">&#x27;bmap&#x27;</span>).getBMap();</span><br><span class="line"><span class="comment">//    首先清空覆盖物</span></span><br><span class="line"><span class="keyword">var</span> allOverlay = bmap.getOverlays();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; allOverlay.length -<span class="number">1</span>; i++)&#123;</span><br><span class="line">    bmap.removeOverlay(allOverlay[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//添加折线,并进行位置的修改</span></span><br><span class="line"><span class="comment">//    绿色的折线</span></span><br><span class="line"><span class="keyword">var</span> curve = <span class="keyword">new</span> BMap.Polyline(allPoints[state_name], &#123;<span class="attr">strokeColor</span>:<span class="string">&quot;#1aff00&quot;</span>,<span class="attr">strokeWeight</span>:<span class="number">8</span>, <span class="attr">strokeOpacity</span>:<span class="number">1</span>&#125;);</span><br><span class="line">bmap.addOverlay(curve);</span><br><span class="line"><span class="keyword">var</span> curve_red = <span class="keyword">new</span> BMap.Polyline([allPoints[state_name][<span class="number">3</span>], allPoints[state_name][<span class="number">4</span>]], &#123;<span class="attr">strokeColor</span>:<span class="string">&quot;#ff0000&quot;</span>,<span class="attr">strokeWeight</span>:<span class="number">8</span>, <span class="attr">strokeOpacity</span>:<span class="number">1</span>&#125;);</span><br><span class="line">bmap.addOverlay(curve_red);</span><br><span class="line"><span class="comment">//黄色的折线</span></span><br><span class="line"><span class="keyword">var</span> curve_yellow = <span class="keyword">new</span> BMap.Polyline([ allPoints[state_name][<span class="number">1</span>],allPoints[state_name][<span class="number">2</span>]], &#123;<span class="attr">strokeColor</span>:<span class="string">&quot;#ffb700&quot;</span>,<span class="attr">strokeWeight</span>:<span class="number">8</span>, <span class="attr">strokeOpacity</span>:<span class="number">1</span>&#125;);</span><br><span class="line">bmap.addOverlay(curve_yellow);</span><br><span class="line"><span class="comment">// 绘制中心点</span></span><br><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> BMap.Marker(centers[state_name]);</span><br><span class="line">bmap.addOverlay(p);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>前端,echarts,百度地图，添加图层</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>post title with whitespace</title>
    <link href="/2021/04/29/post-title-with-whitespace/"/>
    <url>/2021/04/29/post-title-with-whitespace/</url>
    
    <content type="html"><![CDATA[<p>nihaoansdasj</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/04/28/hello-world/"/>
    <url>/2021/04/28/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
