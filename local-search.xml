<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>微信小程序学习</title>
    <link href="/2023/07/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/"/>
    <url>/2023/07/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="学习使用uniapp-HBuilderX-vue开发一个微信小程序"><a href="#学习使用uniapp-HBuilderX-vue开发一个微信小程序" class="headerlink" title="学习使用uniapp+HBuilderX+vue开发一个微信小程序"></a>学习使用uniapp+HBuilderX+vue开发一个微信小程序</h1><h2 id="相关背景介绍"><a href="#相关背景介绍" class="headerlink" title="相关背景介绍"></a>相关背景介绍</h2><ol><li>uni-app<a href="https://uniapp.dcloud.net.cn/">介绍教程</a></li><li>HBuilderX<a href="https://hx.dcloud.net.cn/">介绍教程</a></li><li><a href="https://www.bilibili.com/video/BV1eT411L7yj">B站视频</a></li></ol><h2 id="在HBuilderX中启动demo"><a href="#在HBuilderX中启动demo" class="headerlink" title="在HBuilderX中启动demo"></a>在HBuilderX中启动demo</h2><h3 id="HbuilderX和微信开发者工具搭配"><a href="#HbuilderX和微信开发者工具搭配" class="headerlink" title="HbuilderX和微信开发者工具搭配"></a>HbuilderX和微信开发者工具搭配</h3><p>出现问题，无法通过HBuilderX打开微信开发者工具</p><p><img src="../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/image-20230707144940783.png" alt="image-20230707144940783"></p><p>解决方案：</p><p>打开【<a href="https://so.csdn.net/so/search?q=%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7&spm=1001.2101.3001.7020">微信开发者工具</a>】</p><p>点击【设置】-【安全设置】-【服务端口】开启即可。</p><h3 id="在使用unnicloud函数的时候，像数据进行增删改查的操作时出错"><a href="#在使用unnicloud函数的时候，像数据进行增删改查的操作时出错" class="headerlink" title="在使用unnicloud函数的时候，像数据进行增删改查的操作时出错"></a>在使用unnicloud函数的时候，像数据进行增删改查的操作时出错</h3><img src="../images/微信小程序学习/image-20230708153803556.png" alt="image-20230708153803556" style="zoom:70%;" /><p><img src="../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/image-20230708153739116.png" alt="image-20230708153739116"></p><p>解决方案：</p><p><img src="../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/image-20230708153843645.png" alt="image-20230708153843645"></p><p>如果添加了这三个表还不行。就在unicloud的控制台端提前建表。</p><h2 id="B站视频的源码"><a href="#B站视频的源码" class="headerlink" title="B站视频的源码"></a>B站视频的源码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>      <span class="hljs-comment">&lt;!-- Vue中使用v-model指令来实现表单元素和数据的双向绑定。监听用户的输入，然后更新数据。 --&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;input&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;content&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;留言&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;publish()&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;mini&quot;</span>&gt;</span>发布<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in list&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&#x27;item._id&#x27;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;box&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span>&#123;&#123;item.content&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">        content: <span class="hljs-string">&#x27;&#x27;</span>,</span><br>        list: [],<br>      &#125;<br>    &#125;,<br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">onLoad</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-comment">// uniCloud.callFunction都是去查找云函数。</span></span><br>      uniCloud.callFunction(&#123;<br><span class="javascript">        <span class="hljs-comment">// name指定使用哪一个cloudfunctions中的云函数</span></span><br><span class="javascript">        name: <span class="hljs-string">&#x27;fun&#x27;</span>,</span><br><span class="javascript">        <span class="hljs-comment">// data是传给云函数的数据</span></span><br>        data: &#123;<br><span class="javascript">          <span class="hljs-comment">// api在函数中用于类似switch的用法</span></span><br><span class="javascript">          api: <span class="hljs-string">&quot;getMessages&quot;</span>,</span><br><span class="javascript">        &#125; <span class="hljs-comment">//then中需要写一个回调函数，res是对调函数的参数，中括号里的是回调函数。</span></span><br><span class="javascript">      &#125;).then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;</span><br><span class="javascript">        <span class="hljs-built_in">this</span>.list = res.result.data;</span><br>      &#125;)<br>    &#125;,<br>    methods: &#123;<br><span class="javascript">      <span class="hljs-function"><span class="hljs-title">publish</span>(<span class="hljs-params"></span>)</span> &#123;</span><br>        uniCloud.callFunction(&#123;<br><span class="javascript">          name: <span class="hljs-string">&#x27;fun&#x27;</span>,</span><br>          data: &#123;<br><span class="javascript">            api: <span class="hljs-string">&#x27;publish&#x27;</span>,</span><br><span class="javascript">            content: <span class="hljs-built_in">this</span>.content,</span><br>          &#125;<br><span class="javascript">        &#125;).then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;</span><br><span class="javascript">          <span class="hljs-built_in">console</span>.log(res.result);</span><br><span class="javascript">          <span class="hljs-built_in">this</span>.list.push(&#123;</span><br>            _id: res.result._id,<br><span class="javascript">            <span class="hljs-comment">// 这地方不能用 res.result.content代替，因为查询语句的返回值是</span></span><br><span class="javascript">            content: <span class="hljs-built_in">this</span>.content,</span><br>          &#125;)<br><span class="javascript">          <span class="hljs-built_in">this</span>.content = <span class="hljs-string">&quot;&quot;</span>;</span><br>        &#125;)<br>      &#125;<br>    &#125;<br>  &#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><br>  .content &#123;<br><span class="css">    <span class="hljs-attribute">display</span>: flex;</span><br><span class="css">    <span class="hljs-attribute">align-items</span>: center;</span><br><span class="css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">40px</span>;</span><br>  &#125;<br><br>  .input &#123;<br><span class="css">    <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ccc</span>;</span><br><span class="css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">6</span>rpx;</span><br><span class="css">    <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;</span><br>  &#125;<br><br>  .box &#123;<br><span class="css">    <span class="hljs-attribute">margin</span>: <span class="hljs-number">40</span>rpx;</span><br><span class="css">    <span class="hljs-attribute">border-bottom</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#ccc</span>;</span><br><span class="css">    <span class="hljs-attribute">padding</span>: <span class="hljs-number">20</span>rpx;</span><br>  &#125;<br><br><br>  .text-area &#123;<br><span class="css">    <span class="hljs-attribute">display</span>: flex;</span><br><span class="css">    <span class="hljs-attribute">justify-content</span>: center;</span><br>  &#125;<br><br>  .title &#123;<br><span class="css">    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">36</span>rpx;</span><br><span class="css">    <span class="hljs-attribute">color</span>: <span class="hljs-number">#8f8f94</span>;</span><br>  &#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="HBuilderX使用小程序UI组件库-Vant-Weapp"><a href="#HBuilderX使用小程序UI组件库-Vant-Weapp" class="headerlink" title="HBuilderX使用小程序UI组件库 Vant Weapp"></a>HBuilderX使用小程序UI组件库 Vant Weapp</h1><p>Vant Weapp<a href="https://youzan.github.io/vant-weapp/#/home">使用手册</a></p><p>如果有不明白的可以看Vant<a href="https://www.w3cschool.cn/vantlesson/">教程</a></p><p>用该组件对上文开发的留言板小程序进行界面优化。具体操作如下</p><h2 id="在HBuilderX中引入Vant-Weapp组件库"><a href="#在HBuilderX中引入Vant-Weapp组件库" class="headerlink" title="在HBuilderX中引入Vant Weapp组件库"></a>在HBuilderX中引入Vant Weapp组件库</h2><h3 id="通过npm安装"><a href="#通过npm安装" class="headerlink" title="通过npm安装"></a>通过npm安装</h3><p><a href="https://blog.csdn.net/Establish_bug/article/details/102792796">参考网站</a></p><p>注意事项：</p><ol><li><p>在我的微信开发者工具中没有找到本地设置中的<strong>使用npm模块</strong>，所以默认使用了npm模块。</p></li><li><p>按照链接的步骤可以完成操作，但是如果使用了自定义的组件，没有办法使用自动代码提示功能。</p></li><li><p>Vant Weapp中没有<code>input</code>输入框的标签，所以使用他们提供的<code>van-field</code>标签</p><p><img src="../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/image-20230709234646558.png" alt="image-20230709234646558"></p><p><img src="../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/image-20230709234724161.png" alt="image-20230709234724161"></p></li></ol><h3 id="如何给vue-vant框架-Field-输入框加一个外边框"><a href="#如何给vue-vant框架-Field-输入框加一个外边框" class="headerlink" title="如何给vue vant框架 Field 输入框加一个外边框"></a>如何给vue vant框架 Field 输入框加一个外边框</h3><p>使用<code>custom-style</code>属性</p><p><img src="../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/image-20230710104626796.png" alt="image-20230710104626796"></p><p><img src="../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/image-20230710104636437.png" alt="image-20230710104636437"></p><p>但是看起来很丑，如何在输入框和按钮之间拉开一些距离呢.</p><p>在使用的过程中发现Vant Weapp组件库并不适合Vue。所以使用<a href="https://www.uviewui.com/"> uView</a>组件。</p><h1 id="HBuilderX使用uni-app生态专用的UI框架uView"><a href="#HBuilderX使用uni-app生态专用的UI框架uView" class="headerlink" title="HBuilderX使用uni-app生态专用的UI框架uView"></a>HBuilderX使用uni-app生态专用的UI框架uView</h1><p>按照官网的教程来，进入快速上手的项目之后微信小程序没有任何的显示。</p><p>快速上手的这个项目就是没有显示，问题不大。把button之类的复制进去就可以了。</p><p>重点就需要在之后注意一下<code>u-action-sheet</code>在之后是如何操作的。</p><h2 id="用到之前开发的yd项目中"><a href="#用到之前开发的yd项目中" class="headerlink" title="用到之前开发的yd项目中"></a>用到之前开发的yd项目中</h2><p>将<code>input</code>标签的内容改为<code>u-field</code>标签。但是uView2组件库中不存在<code>u-field</code>组件，所以使用<code>u-input</code>组件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">u--input</span> <span class="hljs-attr">clearable</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">border</span>=<span class="hljs-string">&quot;bottom&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">u--input</span>&gt;</span><br></code></pre></td></tr></table></figure><p>可以通过Vue.js的语法来实现将uView2组件的属性绑定为动态值，下面将border的值绑定为了动态的值。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">u--input</span> <span class="hljs-attr">clearable</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">:border</span>=<span class="hljs-string">&quot;nptBorder&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">u--input</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-keyword">return</span> &#123;</span><br><span class="javascript">        nptBorder: <span class="hljs-string">&#x27;surround&#x27;</span>,</span><br>      &#125;<br>    &#125;,<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>下面将<code>button</code>改为<code>u-button</code>使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">u-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;publish()&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span>&gt;</span>发布<span class="hljs-tag">&lt;/<span class="hljs-name">u-button</span>&gt;</span><br></code></pre></td></tr></table></figure><p>出现了button的长度太长，直接占满整条view的情况。</p><p><img src="../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/image-20230713093502074.png" alt="image-20230713093502074"></p><p>根据文档原文所说，如果是为了修改按钮与其他元素之间的距离或者宽度等，可以给按钮外面套一个<code>view</code>元素，控制这个<code>view</code>与其他元素的距离或者宽度，即可达到同等效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width:20%;margin:5rpx;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">u-button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;publish()&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span>&gt;</span>发布<span class="hljs-tag">&lt;/<span class="hljs-name">u-button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/image-20230713093905605.png" alt="image-20230713093905605"></p><p>如果想自己改变输入框的样式，可以使用<code>u-input</code>标签中的<code>customStyle</code>属性。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"> <span class="hljs-tag">&lt;<span class="hljs-name">u--input</span> <span class="hljs-attr">:customStyle</span>=<span class="hljs-string">&quot;customInputStyle&quot;</span> <span class="hljs-attr">clearable</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入内容&quot;</span> <span class="hljs-attr">:border</span>=<span class="hljs-string">&quot;nptBorder&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">u--input</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="javascript">    <span class="hljs-function"><span class="hljs-title">data</span>(<span class="hljs-params"></span>)</span> &#123;</span><br><span class="javascript">      <span class="hljs-keyword">return</span> &#123;</span><br>        customInputStyle: &#123;<br><span class="javascript">          backgroundColor: <span class="hljs-string">&#x27;red&#x27;</span>,</span><br><span class="javascript">          color: <span class="hljs-string">&#x27;white&#x27;</span>,</span><br><span class="javascript">          borderRadius: <span class="hljs-string">&#x27;10rpx&#x27;</span></span><br>        &#125;<br>      &#125;<br>    &#125;,<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span> <br></code></pre></td></tr></table></figure><p>其中注意返回的数据和属性都要用驼峰写法，效果如下</p><p><img src="../images/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A0/image-20230713145424710.png" alt="image-20230713145424710"></p><p>下面用uView美化下面的输出列表窗口。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">u-list</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">u-list-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in list&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item._id&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">u-cell</span> <span class="hljs-attr">:title</span>=<span class="hljs-string">&quot;item.content&quot;</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- name是icon的名字，不同的name是不同的icon --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">u-icon</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">&quot;right-icon&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;25&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;minus-circle&quot;</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;del(item._id)&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">u-icon</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">u-cell</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">u-list-item</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">u-list</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="添加新的功能，前端点击之后可以删除对应的cell的引用"><a href="#添加新的功能，前端点击之后可以删除对应的cell的引用" class="headerlink" title="添加新的功能，前端点击之后可以删除对应的cell的引用"></a>添加新的功能，前端点击之后可以删除对应的cell的引用</h2><p>首先是前端的函数，函数传进来的参数是每个<code>item</code>的<code>id</code>，再调用对应的云函数进行删除操作。在vue文件的js代码和之前的相同，调用<code>name</code>是<code>fun</code>的云函数，然后传数据给云函数，<code>api</code>是<code>del</code>，<code>key</code>是之前说的<code>item</code>的<code>id</code>。</p><p>之后是自定义云函数fun，key就是要删除的数据的id，然后根据key获得对应的表项，之后对该表项进行删除。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">if</span> (event.api == <span class="hljs-string">&#x27;del&#x27;</span>) &#123;<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;del&#x27;</span> + event.key);<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> db.collection(<span class="hljs-string">&#x27;message&#x27;</span>).doc(event.key).remove();<br>&#125;<br></code></pre></td></tr></table></figure><p><u>注意：这里我们使用的是nosql语法，其实在uniCloud中已经更新到了使用jql语法，我们下节会介绍如何把nosql改成jql</u></p><p><code>remove()</code>的返回值是 {“affectedDocs”:1,”deleted”:1}。虽然此时在数据库中已经把数据删除了，但是并没有在前端把数据删除。所以还需要在回调函数中对list的内容进行删除。具体代码如下。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js">.then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>    <span class="hljs-built_in">console</span>.log(res.result);<br>    <span class="hljs-built_in">this</span>.list.some(<span class="hljs-function">(<span class="hljs-params">item, i</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (item._id == key) &#123;<br>            <span class="hljs-built_in">this</span>.list.splice(i, <span class="hljs-number">1</span>)<br>            <span class="hljs-comment">// 在数组的some方法中，如果return true，就会立即终止这个数组的后续循环,所以相比较foreach，如果想要终止循环，那么建议使用some</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br>&#125;);<br></code></pre></td></tr></table></figure><h1 id="独立开发一个运动及情绪监测的微信小程序"><a href="#独立开发一个运动及情绪监测的微信小程序" class="headerlink" title="独立开发一个运动及情绪监测的微信小程序"></a>独立开发一个运动及情绪监测的微信小程序</h1><h2 id="功能概述"><a href="#功能概述" class="headerlink" title="功能概述"></a>功能概述</h2><ul><li><strong>用户注册和资料管理</strong>：注册账号并填写个人资料，包括基本信息(昵称、年龄、学校、专业、手机号码)和兴趣爱好等。</li><li><strong>运动监测</strong>：记录运动状态，包括步数、距离、速度、卡路里消耗、运动时间等参数。</li><li><strong>情绪监测</strong>：记录情绪状态。1）情绪标签：使用情绪标签创建标签或关键词，描述情绪体验，例如压力、兴奋、困惑等。2）情绪评分：采用量表评估情绪强度和持续时间。</li><li><strong>心理健康自测****：</strong>提供多种信效度高的心理健康评估量表进行自测，例如焦虑、抑郁、压力等。定期追踪和提醒：允许用户定期进行心理健康自测，并提供定期提醒和通知。通过持续的自测和跟踪，帮助用户了解自己的心理健康状况的变化和趋势。**</li><li><strong>数据可视化：</strong>将运动和情绪数据以图表和统计数据的形式展示给用户，帮助他们更好地了解自己的运动和情绪变化。1）运动日志：使用折线图可以显示运动距离、运动时长等数据随时间的变化。2）情绪日志：根据每日情绪标签、情绪评分生成图表，将情绪变化趋势可视化，例如每天的情绪分布、情绪的高峰和低谷等。情绪状态也可以通过情绪日历表或者色块的方式进行可视化，让用户更清晰地了解自己的情绪变化**</li><li><strong>用户反馈和建议：</strong>用户反馈和改进，通过用户调查或意见反馈功能，了解用户的体验和需求，以改进和优化微信小程序。</li></ul><h2 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h2>]]></content>
    
    
    
    <tags>
      
      <tag>微信小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2022/07/25/nvme_fio/"/>
    <url>/2022/07/25/nvme_fio/</url>
    
    <content type="html"><![CDATA[<p>title: 华为网卡项目<br>date: 2021-12-01 11:30:15<br>tags:华为项目</p><h2 id="NVMe-oF概述"><a href="#NVMe-oF概述" class="headerlink" title="NVMe-oF概述"></a>NVMe-oF概述</h2><p>NVMe-oF全称是：Non-Volatile Memory Express over Fabrics。中文的意思是：基于Fabrics的非易失性存储标准。我将Fabric理解为网络架构，RDMA Fabric就有Infiniband，iWARP，RoCEv1，RoCEv2等多种传输协议。</p><h3 id="NVMe-oF和NVMe的关系"><a href="#NVMe-oF和NVMe的关系" class="headerlink" title="NVMe-oF和NVMe的关系"></a>NVMe-oF和NVMe的关系</h3><p>NVMe是什么：NVMe传输是一种抽象协议层，旨在提供可靠的NVMe命令和数据传输，是有关访问非易失性储存（通常是 SSD 磁盘）的接口标准。本质是上建立了多个计算机与存储设备的通路，提高搬运数据的速度。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211230163244922.png" alt="image-20211230163244922"></p><p>当前数据中心中的存储网络架构通常使用的是存储区域网络 (Storage Area Network, SAN) ，SAN 是一种基于块的存储，利用高速架构将服务器与其逻辑磁盘单元 (Logical Disk Unit, LUN) 相连。当前的SAN通常使用采用FC（Fibre Channel）光纤通道或者Ethernet进行远距离传输。其中SAN网络环境中，因采用存储设备类型的不同又可以分为FC-SAN(采用光纤通道存储产品)和IP-SAN(采用ISCSI存储设备)。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230170745869.png" alt="image-20211230170745869" style="zoom:50%;" /><p><strong>NVMe-oF的目的就是利用现有成熟的Fabric来跑NVMe，实现NVMe标准在PCIe总线上的扩展也就是把本地高速访问的优势暴露给远端应用。</strong>NVMe-oF可以实现ISCISI的功能，甚至可以更好。在长时间内，NVMe-oF和iSCSI还是长期并存的局面。iSCSI目前已经非常成熟，而NVMe-oF则刚刚开始发展，需要不断地完善，并且借鉴iSCSI协议的一些功能，以支持更多的功能。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230170818645.png" alt="image-20211230170818645" style="zoom:50%;" /><h3 id="NVMe-oF"><a href="#NVMe-oF" class="headerlink" title="NVMe-oF"></a>NVMe-oF</h3><p>2016年发布的 NVMe-oF 1.0 规范描述了两种Fabric，光纤通道(Fibre Channel)和远程直接内存访问 (RDMA) 。下图是NVME和各种Fabric的关系。可以看到NVMe-oF是在Fabric之上的。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230171628666.png" alt="image-20211230171628666" style="zoom:50%;" /><p>上图可以更好的展示为，左侧三个灰色框架代表的是NVMe在一个机器内的操作，右边是通过NVMe-oF把NVMe扩展到数据中心中。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230172937194.png" alt="image-20211230172937194" style="zoom:50%;" /><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230193645449.png" alt="image-20211230193645449" style="zoom:67%;" /><p>NVMe-oF的协议栈如下</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230195604296.png" alt="image-20211230195604296" style="zoom:50%;" /><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230201734587.png" alt="image-20211230201734587" style="zoom:50%;" /><p>NVMeoF协议栈访问流程：NVMe控制器端CSCCX，转换成NVMe命令，写完数据后，数据怎么返回去的。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20220725111730264.png" alt="image-20220725111730264"></p><h3 id="NVMe-Transport-Mapping（NVME传输映射）"><a href="#NVMe-Transport-Mapping（NVME传输映射）" class="headerlink" title="NVMe Transport Mapping（NVME传输映射）"></a>NVMe Transport Mapping（NVME传输映射）</h3><p><strong>NVMe over Fabrics 需要底层 NVMe 传输来提供可靠的 NVMe 命令和数据传输。</strong></p><p>在本地 NVMe 实现中，NVMe 命令和响应通过 PCIe 接口映射到主机中的共享内存。然而，fabric 是建立在发送和接收消息的概念之上的，在端之间没有共享内存。NVMe fabric消息传输旨在通过使用包含一个或多个 NVMe 命令或响应的“capsules”将 NVMe 命令和响应封装到基于消息的系统中。 capsules或capsules与数据的组合独立于特定的fabric，并通过所需fabric发送和接收。就是说<strong>NVMe和Fabric之间没有指定的关系，是松耦合的</strong>。 <strong>NVMe 传输是独立于任何物理互连属性的抽象协议层。</strong></p><p> 在NVMe over Fabrics中，整个 NVMe 多队列模型得到维护，使用普通的 NVMe 提交队列(submission queues)和完成队列(completion queues)，但封装在基于消息的传输上。 NVMe I/O 队列对(submission and completion)是为多核 CPU 设计的，这种低延迟的高效设计在 NVMe over Fabrics 中得到维护。</p><p> 下图显示了 NVMe 传输的分类和示例。 NVMe 传输包含内存模型、消息模型或两者的组合。 内存模型是一种通过执行显式内存读写操作在结构节点之间传输命令、响应和数据的模型，而消息模型是一种仅在结构节点之间发送包含命令capsules、响应capsules和数据的消息。 消息/内存模型使用消息和显式内存读写操作的组合在结构节点之间传输命令包、响应包和数据。 数据可以选择性地包含在命令包和响应包中。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230192640428.png" alt="image-20211230192640428" style="zoom:40%;" /><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230185100624.png" alt="image-20211230185100624" style="zoom:50%;" /><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">上面这两个图一个来自OverView（第二个图），一个来自specification(第一个图)，感觉有点冲突。</span><br></pre></td></tr></table></figure><p>在向 NVMe over Fabrics 设备发送复杂消息时，capsules允许将多条小消息作为一条消息发送，从而提高传输效率并减少延迟。 capsules是一个提交队列条目(submission queue entry)或一个完成队列条目(completion queue entry)，结合了一定数量的数据、元数据或 Scatter-Gather Lists (SGLs)。 元素的内容与本地 NVMe 协议相同，但capsules是一种将它们打包在一起以提高效率的方式。下图是capsules的具体架构。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211230190840475.png" alt="image-20211230190840475"></p><h3 id="NVMe"><a href="#NVMe" class="headerlink" title="NVMe"></a>NVMe</h3><p>NVMe是什么：NVMe是一种Host与SSD之间通讯的协议，它在协议栈中隶属高层。</p><p><img src="https://img-blog.csdn.net/20180417100139590" alt="img"></p><p>NVMe制定了Host与SSD之间通讯的命令，以及命令如何执行的。</p><p>NVMe有两种命令，一种叫Admin Command，用以Host管理和控制SSD；另外一种就是I/O Command，用以Host和SSD之间数据的传输。</p><p>NVMe有三种队列：Submission Queue （SQ），Completion Queue（CQ）和Doorbell Register （DB）。 SQ和CQ位于Host的内存中，DB则位于SSD的控制器内部。如下图所示：</p><p><img src="https://img-blog.csdn.net/20180417100922685" alt="img"></p><p>SQ位于Host内存中，Host要发送命令时，先把准备好的命令放在SQ中，然后通知SSD来取；CQ也是位于Host内存中，一个命令执行完成，成功或失败，SSD总会往CQ中写入命令完成状态。DB则是在Host发送命令时，不是直接往SSD中发送命令的，而是把命令准备好放在自己的内存中，Host就是通过写SSD端的DB寄存器来告知SSD命令已经处理完毕，可以前来检阅。流程如下图所示：</p><p><img src="https://img-blog.csdn.net/20180417101200769" alt="img"></p><ol><li>Host写命令到SQ，此时的命令在host的内存中；</li><li>Host写DB，通知NVMe Controller取命令。通过更新在Controller内部的寄存器SQ Tail Doorbell来完成。</li><li>Controller收到通知，于是从SQ中取命令。取走命令之后，需要在Controller内部的SQ Head Pointer寄存器中更新Head所在的位置。NVMe没有规定Command存入队列的执行顺序，Controller可以一次取出多个Command进行批量处理。</li><li>Controller执行命令。执行Read/Wirte Command时，这个过程也会与Host Memory进行数据传递。</li><li>命令执行完成，Controller往CQ中写指令执行结果。此时，Controller需要更新内部的CQ Tail Pointer寄存器。</li><li>Controller发短信通知Host指令完成。Controller通过发送一个中断信息告知Host。</li><li>收到短信，Host处理CQ，查看命令完成状态；</li><li>Host处理完CQ中的命令需要告知controller。Host更新Controller内部的CQ Head Doorbell。</li></ol><p>四个寄存器全部放在Controller内存中。也就是说Controller知道这SQ Tail/Head和CQ Tail/Head的全部信息。</p><p>而Host仅仅知道自己更新的两个信息SQ Tail和CQ Head。Controller把SQ Head和CQ Tail的信息写入Completion报文中，通知给host。</p><p>NVMe 访存路径</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20220725111306065.png" alt="image-20220725111306065"></p><h3 id="NVMe-over-ROCE"><a href="#NVMe-over-ROCE" class="headerlink" title="NVMe over ROCE"></a>NVMe over ROCE</h3><p>NVMe over RoCE 调用关系如下图所示，内核 nvme_rdma 模块相当于胶水层，连接 rdma stack 和 nvme core接口，即 NVMe 队列接口可以对接 RDMA 队列接口，进而调用下层 rdma stack 中 verbs 传输接口。</p><img src="https://pic4.zhimg.com/v2-adaad1b3a14e2fa115fe0472c8b0955f_r.jpg" alt="preview" style="zoom:50%;" /><h4 id="NVMeoF队列结构"><a href="#NVMeoF队列结构" class="headerlink" title="NVMeoF队列结构"></a>NVMeoF队列结构</h4><p>NVMeoF将NVMe队列映射到RDMA队列上。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20220725112852892.png" alt="image-20220725112852892"></p><p>Host端RNIC将NVMe SQE封装成网络命令包，作为RDMA报文内容（payload），通过RDMA传输到target端，Target端的RNIC解包之后，将SQE和数据放入target端主机的内存中，随后Target处理NVMe命令和数据；处理完之后，将NVMe CQE封装成RDMA响应包(Response)，放入RDMA完成队列中，返回给Host。</p><h2 id="FIO工具介绍"><a href="#FIO工具介绍" class="headerlink" title="FIO工具介绍"></a>FIO工具介绍</h2><p>FIO 工具是一款用于测试硬件存储性能的辅助工具，兼具灵活性、可靠性从而从众多性能测试工具中脱颖而出。磁盘的 I/O 是衡量硬件性能的最重要的指标之一，而 FIO 工具通过模拟 I/O负载对存储介质进行压力测试，并将存储介质的 I/O 数据直观的呈现出来。</p><p>f关于io介绍的网站：<a href="https://fio.readthedocs.io/en/latest/fio_doc.html#how-fio-works">https://fio.readthedocs.io/en/latest/fio_doc.html#how-fio-works</a></p><h3 id="fio操作"><a href="#fio操作" class="headerlink" title="fio操作"></a>fio操作</h3><p>让 fio 模拟所需的 I/O 工作负载的第一步是编写一个描述该特定设置的作业文件(job file)。 作业文件中可以定义要模拟的线程或者文件，通过共享参数定义全局部分，也可以定义每一线程的单独参数。运行时，fio 会解析此文件并按照描述设置所有内容。</p><h3 id="fio文件配置介绍"><a href="#fio文件配置介绍" class="headerlink" title="fio文件配置介绍"></a>fio文件配置介绍</h3><ol><li><p>I/O type</p><p>定义发布给文件的I/O模式，读、写、顺序、随机或者是否使用buffer.</p><ul><li><p>direct=bool</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">If value is true, use non-buffered I&#x2F;O. Default: false.</span><br></pre></td></tr></table></figure><p>这个值决定是否使用non-buffered I/O。</p><p>buffered IO指的是在内核和用户程序之间设置了一层缓冲区，用来提高IO读写的效率；</p><p>读取：硬盘—&gt;内核缓冲区—&gt;<strong>用户缓冲区</strong>—&gt;用户程序</p><p>写回：用户程序—&gt;<strong>用户缓冲区</strong>—&gt;内核缓冲区—&gt;硬盘</p></li><li><p>atomic=bool</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">If value is true, attempt to use atomic direct I&#x2F;O. Atomic writes are guaranteed to be stable once acknowledged by the operating system. </span><br></pre></td></tr></table></figure><p>如果值为 true，则尝试使用原子 I/O。原子I/O的写入是稳定的</p></li><li><p>readwrite=str，rw=str</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Type of I&#x2F;O pattern.</span><br><span class="line">read;write;trim;randread;randwrite;readwrite;randrw;trimwrite</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Block size</p><p>发出I/O的块大小，可以是单个值，也可以是个范围</p><ul><li><p>blocksize=int[,int][,int]</p><p>单个值适用于read、write和trim。 可以为read、write和trim指定逗号分隔的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The block size in bytes used for I&#x2F;O units. Default: 4096. A single value applies to reads, writes, and trims. Comma-separated values may be specified for reads, writes, and trims. A value not terminated in a comma applies to subsequent types.</span><br></pre></td></tr></table></figure></li><li><p>blocksize_range=irange[,irange][,irange], bsrange=irange[,irange][,irange]</p><p>I/O 单元的一系列块大小（以字节为单位）。 除非设置了 blocksize_unaligned，否则发出的 I/O 单元将始终是最小大小的倍数。<strong>bsrange=1k-4k,2k-8k.</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A range of block sizes in bytes for I&#x2F;O units. The issued I&#x2F;O unit will always be a multiple of the minimum size, unless blocksize_unaligned is set.</span><br><span class="line"></span><br><span class="line">Comma-separated ranges may be specified for reads, writes, and trims as described in blocksize.</span><br></pre></td></tr></table></figure></li></ul></li><li><p>I/O size</p><p>要读写的数据总量</p><ul><li><p>size=int</p><p>此作业的每个线程的文件 I/O 的总大小。 Fio 将一直运行直到传输了这么多字节，除非运行时受到其他选项的限制（例如runtime，或由 io_size 增加/减少）。</p></li></ul></li><li><p>I/O depth</p><p>如果 I/O 引擎是异步的，希望保持多大的队列深度</p><ul><li><p>iodepth=int</p><p>队列深度，要针对文件保持运行的 I/O 单元数。存储控制器可以处理的未完成I / O请求的数量。即对存储控制器的限制，该存储控制器可以处理I / O请求并将命令发送到磁盘（r / w），并且如果存在超出其处理能力的请求，则丢弃请求。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Number of I&#x2F;O units to keep in flight against the file.</span><br><span class="line">Note that increasing iodepth beyond 1 will not affect synchronous ioengines (except for small degrees when verify_async is in use). Even async engines may impose OS restrictions causing the desired depth not to be achieved. This may happen on Linux when using libaio and not setting direct&#x3D;1, since buffered I&#x2F;O is not async on that OS. Keep an eye on the I&#x2F;O depth distribution in the fio output to verify that the achieved depth is as expected. Default: 1.</span><br></pre></td></tr></table></figure></li><li><p>iodepth_batch_submit=int, iodepth_batch=int</p><p>一次提交多少I/O</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This defines how many pieces of I&#x2F;O to submit at once. It defaults to 1 which means that we submit each I&#x2F;O as soon as it is available, but can be raised to submit bigger batches of I&#x2F;O at the time. If it is set to 0 the iodepth value will be used.</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Job description</p><ul><li><p>numjobs=int</p><p>创建此作业的指定数量的克隆。 每个作业克隆都作为一个独立的线程或进程产生。 可用于设置更多执行相同操作的线程/进程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Create the specified number of clones of this job. Each clone of job is spawned as an independent thread or process. May be used to setup a larger number of threads&#x2F;processes doing the same thing. Each thread is reported separately; to see statistics for all clones as a whole, use group_reporting in conjunction with new_group. See --max-jobs. Default: 1.</span><br></pre></td></tr></table></figure><p>​    </p></li></ul></li></ol><h2 id="问题和解决方案"><a href="#问题和解决方案" class="headerlink" title="问题和解决方案"></a>问题和解决方案</h2><h3 id="RDMA"><a href="#RDMA" class="headerlink" title="RDMA"></a>RDMA</h3><ol><li><p>如果host端的一个qp中有多个请求在排队，网卡可以同时发出多个请求吗，还是只能一个一个发？</p></li><li><p>如果target端srq中一个wqe所指向的空间为4k，一个包大小为1k，那么target端来一个包应该先取一个wqe，然后接下来的3个包都用这个wqe？</p></li><li><p>如果2正确：host端有一个qp，网卡从该qp中同时取了两个命令发出，接收端先后收到了两个来自同一条qp的不同命令，这两个不同命令可以共用同一个wqe吗？</p></li><li><p>QP的一个IO会占用多少WQE，RDMA网卡不解析请求如何获知要多少WQE？</p></li><li><p>SRQ处会出现大IO堵塞小IO的情况</p></li><li><p>单个RDMA单端操作的数据量是否有上界？如果该操作数据量过大（100G），实际情况中是如何处理的？</p><p>MTU：The maximum size of a packet payload (not including headers) that can be sent / received from a port</p><p>A single request packet will result in multiple read response packets if the read length is greater than the PMTU.</p><p>Inbound RDMA Read Queue Depth (IRD)：The maximum number of incoming outstanding RDMA Read Requests that the RDMA-Capable Controller can handle on a particular RDMA-Capable Protocol Stream at the Data Source. For InfiniBand, the equivalent<br>for IRD is the Responder Resources.</p></li><li><p>target端触发RNR之后收到的包应该丢弃还是暂存？如果丢弃的话是后面来的包全部丢弃，还是只丢部分，也就是碰到SRQ空闲时就不丢，只有碰到SRQ满才丢</p></li><li><p>单个命令，I/O单元和packets的关系</p></li></ol><h3 id="NVMe-1"><a href="#NVMe-1" class="headerlink" title="NVMe"></a>NVMe</h3><h3 id="NVMeoF"><a href="#NVMeoF" class="headerlink" title="NVMeoF"></a>NVMeoF</h3><ol><li>Target端收到NVMe Read命令，应用轮询NVMe Submission queue后，是否可以同时进行这两种操作：（1）通知SSD准备数据到buffer中  2）下发RDMA Write命令，让网卡从SSD的Buffer中拖数据</li><li></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>NVMe概述</title>
    <link href="/2022/01/02/NVMe%E6%A6%82%E8%BF%B0/"/>
    <url>/2022/01/02/NVMe%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="NVMe概述"><a href="#NVMe概述" class="headerlink" title="NVMe概述"></a>NVMe概述</h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/12/01/%E5%8D%8E%E4%B8%BA%E7%BD%91%E5%8D%A1%E9%A1%B9%E7%9B%AE/"/>
    <url>/2021/12/01/%E5%8D%8E%E4%B8%BA%E7%BD%91%E5%8D%A1%E9%A1%B9%E7%9B%AE/</url>
    
    <content type="html"><![CDATA[<p>title: 华为网卡项目<br>date: 2021-12-01 11:30:15<br>tags:华为项目</p><h1 id="DPDK和SPDK"><a href="#DPDK和SPDK" class="headerlink" title="DPDK和SPDK"></a>DPDK和SPDK</h1><h2 id="DPDK-Data-Plane-Development-Kit"><a href="#DPDK-Data-Plane-Development-Kit" class="headerlink" title="DPDK(Data Plane Development Kit)"></a>DPDK(Data Plane Development Kit)</h2><p>简单说，DPDK应用程序运行在操作系统的User Space，利用自身提供的数据面库进行收发包处理，绕过了Linux内核态协议栈，以提升报文处理效率。</p><p>DPDK是一组lib库和工具包的集合。最简单的架构描述如下图所示：</p><p><img src="https://pic3.zhimg.com/80/v2-f4b703475096e19c669d6cfc7128311e_1440w.jpg" alt="img"></p><p>DPDK由于做用户态polling mode，需要对线程模型、内存管理等系统级的资源做定制的管理。例如dpdk中通过使用cpu的亲和性对thread和core做绑定，单个thread独享一个cpu core。再例如dpdk所使用的大页内存等等。这些基础资源的管理都是为用户态polling mode服务。</p><h2 id="SPDK（Storage-Performance-Development-Kit）"><a href="#SPDK（Storage-Performance-Development-Kit）" class="headerlink" title="SPDK（Storage Performance Development Kit）"></a>SPDK（Storage Performance Development Kit）</h2><p>关于SPDK的介绍<a href="https://www.cnblogs.com/vlhn/p/7727141.html">https://www.cnblogs.com/vlhn/p/7727141.html</a></p><p>SPDK(存储性能开发套件)为<strong>编写用户态存储应用</strong>提供了一套工具和库函数。</p><p>SPDK的基石是一个运行在用户空间的、采用轮询模式的、异步的、无锁的NVMe驱动。用户空间应用程序可直接访问SSD盘，而且是零拷贝、高度并行地访问SSD盘。</p><p>spdk和dpdk的区别在于，spdk主要针对存储性能的提高，关键是nvme驱动。dpdk主要针对网络性能的提高。核心思想spdk和dpdk大致相同。因此也需要对系统资源做独特的管理，这点和dpdk一样。为了资源复用，spdk在EAL这一层统一采用dpdk的实现。无须再去自己实现一套内存管理、thread模型等底层机制。</p><h1 id="RDMA相关的基础知识"><a href="#RDMA相关的基础知识" class="headerlink" title="RDMA相关的基础知识"></a>RDMA相关的基础知识</h1><p>这里有一篇汇总的博客记录RDMA的相关文档和相关知识<a href="https://blog.csdn.net/bandaoyu/article/details/112861368">https://blog.csdn.net/bandaoyu/article/details/112861368</a></p><p>还有这一篇<a href="https://blog.csdn.net/t1506376703/article/details/106911631/?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-0.opensearchhbase&amp;spm=1001.2101.3001.4242.1">https://blog.csdn.net/t1506376703/article/details/106911631/?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-0.opensearchhbase&amp;spm=1001.2101.3001.4242.1</a></p><h2 id="实现RDMA的技术"><a href="#实现RDMA的技术" class="headerlink" title="实现RDMA的技术"></a>实现RDMA的技术</h2><p>目前，有三种支持RDMA的技术：IB(InfiniBand)、RoCE(RDMA over Converged Ethernet)、以太网iWARP(the Internet Wide Area RDMA Protocol)。这三种技术使用同一API，但它们有着不同的物理层和链路层。</p><p>IB: 原生支持RDMA，它从硬件级别保证可靠传输；</p><p>iWARP: 基于 以太网之上的TCP or SCTP 做 RDMA，利用 TCP or SCTP 达到可靠传输，对网络设备的要求比较少；</p><p>RoCE: 基于以太网做 RDMA，消耗的资源比 iWARP 少，支持的特性比 iWARP 多，需要额外做可靠传输。</p><p>在以太网解决方案中，RoCE相对于iWARP来说有着明显的优势，这些优势体现在延时、吞吐率和 CPU负载。<br><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211207153558432.png" alt="image-20211207153558432" style="zoom:50%;" /></p><h2 id="OFED"><a href="#OFED" class="headerlink" title="OFED"></a>OFED</h2><p>Linux Drivers Mellanox OpenFabrics Enterprise Distribution for Linux (MLNX_OFED)是一个单独的VPI(Virtual Protocol Interconnect，虚拟协议互联)软件栈。是网卡的驱动</p><h2 id="infiniband和Ethernet的区别"><a href="#infiniband和Ethernet的区别" class="headerlink" title="infiniband和Ethernet的区别"></a>infiniband和Ethernet的区别</h2><p>InfiniBand是一种开放标准的高带宽，低时延，高可靠的<a href="https://www.zhihu.com/search?q=%E7%BD%91%E7%BB%9C%E4%BA%92%E8%81%94%E6%8A%80%E6%9C%AF&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:163104439%7D">网络互联技术</a>。</p><p>对于Ethernet毋庸多言，和IP技术构成了目前世界上整个互联网络大厦的基石，所有人与智能设备皆依靠Ethernet实现万物互联，这与其设计初衷就是为了能够实现更好的兼容有关，能让不同的系统可以更好的互连互通，这样使得Ethernet自诞生之初就具有非常强的适应性，经过数十年的发展成为互联网中事实上的标准。</p><p>而InfiniBand，作为标准制定的初衷是为了解决高性能计算场景中突破集群中数据传输瓶颈痛点应运而生的一种互连标准，从制定之初就定位为高端应用，互连互通不是主要矛盾，高性能通信才是主要切入点，所以，相对于<a href="https://www.zhihu.com/search?q=Ethernet%E6%8A%80%E6%9C%AF&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:163104439%7D">Ethernet技术</a>而言，由于定位的差异导致InfiniBand与生俱来就有很多和Ethernet的不同，主要表现在带宽、时延、网络可靠性、和组网方式上。</p><p><strong>InfiniBand就是使用了RDMA技术</strong>。</p><p>实验室的网卡是ConnectX® -5 EN Card，是没有办法进行模式选择的，也就是说没有办法在以太网和IB中间进行选择，只可以使用以太网。而在以太网中如果要跑RDMA的话，需要使用RoCE技术。</p><h2 id="RDMA客户端和服务器端交流的几个方式"><a href="#RDMA客户端和服务器端交流的几个方式" class="headerlink" title="RDMA客户端和服务器端交流的几个方式"></a>RDMA客户端和服务器端交流的几个方式</h2><ol><li><p>send &amp; recieve</p><p>跟TCP/IP的send/recv是类似的，不同的是RDMA是基于消息的数据传输协议（而不是基于字节流的传输协议），所有数据包的组装都在RDMA硬件上完成的，也就是说OSI模型中的下面4层(传输层，网络层，数据链路层，物理层)都在RDMA硬件上完成。</p></li><li><p>read</p><p>RDMA读操作本质上就是Pull操作, 把<a href="https://www.zhihu.com/search?q=%E8%BF%9C%E7%A8%8B%E7%B3%BB%E7%BB%9F%E5%86%85%E5%AD%98&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22article%22,%22sourceId%22:55142557%7D">远程系统内存</a>里的数据拉回到本地系统的内存里。</p></li><li><p>write</p></li></ol><h2 id="RoCE"><a href="#RoCE" class="headerlink" title="RoCE"></a>RoCE</h2><h1 id="基础的对比实验"><a href="#基础的对比实验" class="headerlink" title="基础的对比实验"></a>基础的对比实验</h1><p>在RDMA技术中，由于在RDMA中运用了锁争夺的机制，导致在线程增多的情况下，锁机制的延展性会出现问题。即线程增加会导致系统的吞吐量下降。基础的对照实验就是要体现出上述的问题。即跑出来下图的效果</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211202130806588.png" alt="image-20211202130806588"></p><p>论文中对这一块的描述是</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211209191906546.png" alt="image-20211209191906546"></p><h2 id="基础流程"><a href="#基础流程" class="headerlink" title="基础流程"></a>基础流程</h2><ol><li>安装机器，完成网卡的插入。（√）</li><li>找到直连光纤，完成两个机器的直连，线没有问题的话网卡会亮黄灯。（√）</li><li>安装驱动，设置网卡的静态ip，完成两个机器的连通。</li></ol><p>搭机子，通过交换机进行联通。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211202130940305.png" alt="image-20211202130940305"></p><p>使用驱动检查网卡的性能和使用情况。查看两台机器的连通性。</p><p>按照下图设置实验数据</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211202131719170.png" alt="image-20211202131719170"></p><p>图中cycle的定义如下</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211202131923397.png" alt="image-20211202131923397"></p><p>每个线程发送4KB大小的文件，每个线程和远程机之间创建了1000个连接，每一个cycle代表把一个4kb的数据通过这1000个连接发到远端的主机</p><h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><p>在两台机子上进行操作，每台机子的配置如下</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211202092739555.png" alt="image-20211202092739555"></p><h2 id="装卡"><a href="#装卡" class="headerlink" title="装卡"></a>装卡</h2><p>分别将两个网卡插到对应的两个机子上。然后用光纤和光模块对两个机子的网卡进行连接，网卡会闪黄灯。如果没有闪黄灯的话，一定是光纤或者光模块出现了问题</p><h2 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h2><h3 id="环境检测"><a href="#环境检测" class="headerlink" title="环境检测"></a>环境检测</h3><p>千万注意：要先进行环境的检测，检测你的环境是否安装了IB卡！</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211204100538405.png" alt="image-20211204100538405"></p><h3 id="下载驱动安装包"><a href="#下载驱动安装包" class="headerlink" title="下载驱动安装包"></a>下载驱动安装包</h3><p>驱动的下载网站<a href="https://blog.csdn.net/ljlfather/article/details/102930454">https://blog.csdn.net/ljlfather/article/details/102930454</a></p><p>进入这个网址<a href="https://www.mellanox.com/page/products_dyn?product_family=26&amp;mtag=linux_sw_drivers%EF%BC%8C%E6%89%BE%E5%88%B0%E5%92%8C%E8%87%AA%E5%B7%B1%E7%9A%84%E7%B3%BB%E7%BB%9F%E5%AF%B9%E5%BA%94%E7%9A%84%E9%A9%B1%E5%8A%A8%E8%BF%9B%E8%A1%8C%E4%B8%8B%E8%BD%BD%E3%80%82%E6%AF%94%E5%A6%82%EF%BC%8C%E6%88%91%E5%B0%B1%E5%85%88%E4%B8%8B%E8%BD%BD%E5%88%B0%E4%BA%86mlnx-en-3.3-1.0.0.0.tgz">https://www.mellanox.com/page/products_dyn?product_family=26&amp;mtag=linux_sw_drivers，找到和自己的系统对应的驱动进行下载。比如，我就先下载到了mlnx-en-3.3-1.0.0.0.tgz</a>, 装上后TCP正常工作没问题，RDMA不能用。然后从各种官网的网页里面的各种方法乱试，又找到一个MLNX_OFED_LINUX-3.3-1.0.4.0-ubuntu14.04-x86_64.tgz, 这个才对了。</p><p>本次下载的版本如下图所示</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211204131059622.png" alt="image-20211204131059622"></p><p>之后进入驱动的目录进行安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;mlnxofedinstall --force</span><br></pre></td></tr></table></figure><p>重新加载驱动</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211204101116532.png" alt="image-20211204101116532"></p><p>之后使用命令<code>ibstatus</code>你就可以看到网卡对应的接口的信息了</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211204101209872.png" alt="image-20211204101209872"></p><p>可以发现，这里的link_layer是Ethernet，代表当前的模式是以太网。</p><p>在想把模式改成IB的时候，使用命令<code>mlxconfig -d /dev/mst/mt4119_pciconf0 query</code>查看网卡的基本信息</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211204102717723.png" alt="image-20211204102717723"></p><p>发现网卡的类型是EN，仅支持Ethernet模式。所以如果要在交换机上使用RDMA的话需要安装RoCE。但是本次实验是两个机子直连的，所以直接使用Ethernet模式就可以了。</p><h2 id="测试及驱动使用说明"><a href="#测试及驱动使用说明" class="headerlink" title="测试及驱动使用说明"></a>测试及驱动使用说明</h2><p>两个机子都安装好驱动以后</p><p>一台机子作为服务器端，运行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ib_send_bw -a -c UD -d mlx4_0 -i 1</span><br></pre></td></tr></table></figure><p>另一台机子作为客户端，运行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ib_send_bw -a -c UD -d mlx4_0 -i 1 172.16.0.102</span><br></pre></td></tr></table></figure><p>ib_send命令是测试 RDMA 发送处理确定带宽</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211207144656527.png" alt="image-20211207144656527"></p><p>代表测试成功</p><h3 id="相关命令的使用说明"><a href="#相关命令的使用说明" class="headerlink" title="相关命令的使用说明"></a>相关命令的使用说明</h3><ol><li><p>如果要使用srq，就在命令行的最后加上 <strong>–use-srq</strong></p></li><li><p>ibstatus：查看网卡的基本信息</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211207150754499.png" alt="image-20211207150754499" style="zoom:80%;" /></li><li><p>ib_send_bw：Bandwith and latency test using send transactions.</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211209085626412.png" alt="image-20211209085626412"></p><p>参数说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">ib_send_bw [-p TCP_port][-d device][-i IB_port][-c RC|UC|UD][-m mtu] [-s size][-a][-t tdepth][g][-r rdepth][-n iters][-I size][-b][-V][-e] [-N][-F][IP_address]</span><br><span class="line"></span><br><span class="line">where:</span><br><span class="line"></span><br><span class="line">TCP_port is the TCP port.(本次实验不怎么用到)</span><br><span class="line">device is the InfiniBand device.</span><br><span class="line">IB_port is the InfiniBand port.</span><br><span class="line">mtu is the size of the MTU.</span><br><span class="line">size is the size of the messages.</span><br><span class="line">tdepth is the size of the TX queue.</span><br><span class="line">rdepth is the size of the RX queue.</span><br><span class="line">iters is the number of message exchanges.</span><br><span class="line">IP_address is the IP address of the remote node host</span><br><span class="line"></span><br><span class="line">RC:面向连接的可靠服务</span><br><span class="line">UC:面向连接的不可靠服务</span><br><span class="line">UD:面向数据报的不可靠服务</span><br><span class="line">RD：面向非连接（类似UDP）的可靠服务</span><br><span class="line">面向连接 vs 面向数据报</span><br><span class="line">相同点：两者的通信均包括双方QP对的参与</span><br><span class="line">不同点：面向连接的通信若有N个节点与之通信，本机需要N个QP对;面向数据报的通信可以做到N个节点与之通信，本机仅需一个QP队.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211207161755180.png" alt="image-20211207161755180"></p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211207161827345.png" alt="image-20211207161827345"></p><p>为了体现多端的拥塞，本次实验多是使用的RC</p></li><li></li></ol><h2 id="实验具体配置"><a href="#实验具体配置" class="headerlink" title="实验具体配置"></a>实验具体配置</h2><h4 id="卸载驱动"><a href="#卸载驱动" class="headerlink" title="卸载驱动"></a>卸载驱动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;sbin&#x2F;ofed_uninstall.sh</span><br></pre></td></tr></table></figure><h2 id="配置ip地址"><a href="#配置ip地址" class="headerlink" title="配置ip地址"></a>配置ip地址</h2><h3 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim &#x2F;etc&#x2F;network&#x2F;interfaces</span><br></pre></td></tr></table></figure><p>在文件中添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">auto enp1s0</span><br><span class="line">iface enp1s0 inet static</span><br><span class="line">address 172.16.0.104</span><br><span class="line">netmask 255.255.255.0</span><br><span class="line">broadcast 172.16.0.255</span><br></pre></td></tr></table></figure><p>enp1s0是网卡名称，通过ifconfig查看，address是要给infiniband网卡配置的ip地址。</p><p>重启网络服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service networking restart</span><br></pre></td></tr></table></figure><h3 id="Centos"><a href="#Centos" class="headerlink" title="Centos"></a>Centos</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ib0</span><br></pre></td></tr></table></figure><p>添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">DEVICE&#x3D;ib0</span><br><span class="line">BOOTPROTO&#x3D;static</span><br><span class="line">IPADDR&#x3D;172.16.0.104</span><br><span class="line">NETMASK&#x3D;255.255.255.0</span><br><span class="line">BROADCAST&#x3D;172.16.0.255</span><br><span class="line">NETWORK&#x3D;172.16.0.0</span><br><span class="line">ONBOOT&#x3D;yes</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重启网口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ifdown ib0</span><br><span class="line">sudo ifup ib0</span><br></pre></td></tr></table></figure><h2 id="安装RoCE"><a href="#安装RoCE" class="headerlink" title="安装RoCE"></a>安装RoCE</h2><h2 id="NVMe-oF概述"><a href="#NVMe-oF概述" class="headerlink" title="NVMe-oF概述"></a>NVMe-oF概述</h2><p>NVMe-oF全称是：Non-Volatile Memory Express over Fabrics。中文的意思是：基于Fabrics的非易失性存储标准。我将Fabric理解为网络架构，RDMA Fabric就有Infiniband，iWARP，RoCEv1，RoCEv2等多种传输协议。</p><h3 id="NVMe-oF和NVMe的关系"><a href="#NVMe-oF和NVMe的关系" class="headerlink" title="NVMe-oF和NVMe的关系"></a>NVMe-oF和NVMe的关系</h3><p>NVMe是什么：NVMe传输是一种抽象协议层，旨在提供可靠的NVMe命令和数据传输，是有关访问非易失性储存（通常是 SSD 磁盘）的接口标准。本质是上建立了多个计算机与存储设备的通路，提高搬运数据的速度。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211230163244922.png" alt="image-20211230163244922"></p><p>当前数据中心中的存储网络架构通常使用的是存储区域网络 (Storage Area Network, SAN) ，SAN 是一种基于块的存储，利用高速架构将服务器与其逻辑磁盘单元 (Logical Disk Unit, LUN) 相连。当前的SAN通常使用采用FC（Fibre Channel）光纤通道或者Ethernet进行远距离传输。其中SAN网络环境中，因采用存储设备类型的不同又可以分为FC-SAN(采用光纤通道存储产品)和IP-SAN(采用ISCSI存储设备)。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230170745869.png" alt="image-20211230170745869" style="zoom:50%;" /><p><strong>NVMe-oF的目的就是利用现有成熟的Fabric来跑NVMe，实现NVMe标准在PCIe总线上的扩展也就是把本地高速访问的优势暴露给远端应用。</strong>NVMe-oF可以实现ISCISI的功能，甚至可以更好。在长时间内，NVMe-oF和iSCSI还是长期并存的局面。iSCSI目前已经非常成熟，而NVMe-oF则刚刚开始发展，需要不断地完善，并且借鉴iSCSI协议的一些功能，以支持更多的功能。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230170818645.png" alt="image-20211230170818645" style="zoom:50%;" /><h3 id="NVMe-oF"><a href="#NVMe-oF" class="headerlink" title="NVMe-oF"></a>NVMe-oF</h3><p>2016年发布的 NVMe-oF 1.0 规范描述了两种Fabric，光纤通道(Fibre Channel)和远程直接内存访问 (RDMA) 。下图是NVME和各种Fabric的关系。可以看到NVMe-oF是在Fabric之上的。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230171628666.png" alt="image-20211230171628666" style="zoom:50%;" /><p>上图可以更好的展示为，左侧三个灰色框架代表的是NVMe在一个机器内的操作，右边是通过NVMe-oF把NVMe扩展到数据中心中。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230172937194.png" alt="image-20211230172937194" style="zoom:50%;" /><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230193645449.png" alt="image-20211230193645449" style="zoom:67%;" /><p>NVMe-oF的协议栈如下</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230195604296.png" alt="image-20211230195604296" style="zoom:50%;" /><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230201734587.png" alt="image-20211230201734587" style="zoom:50%;" /><p>NVMeoF协议栈访问流程</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20220725111730264.png" alt="image-20220725111730264"></p><h3 id="NVMe-Transport-Mapping（NVME传输映射）"><a href="#NVMe-Transport-Mapping（NVME传输映射）" class="headerlink" title="NVMe Transport Mapping（NVME传输映射）"></a>NVMe Transport Mapping（NVME传输映射）</h3><p><strong>NVMe over Fabrics 需要底层 NVMe 传输来提供可靠的 NVMe 命令和数据传输。</strong></p><p>在本地 NVMe 实现中，NVMe 命令和响应通过 PCIe 接口映射到主机中的共享内存。然而，fabric 是建立在发送和接收消息的概念之上的，在端之间没有共享内存。NVMe fabric消息传输旨在通过使用包含一个或多个 NVMe 命令或响应的“capsules”将 NVMe 命令和响应封装到基于消息的系统中。 capsules或capsules与数据的组合独立于特定的fabric，并通过所需fabric发送和接收。就是说<strong>NVMe和Fabric之间没有指定的关系，是松耦合的</strong>。 <strong>NVMe 传输是独立于任何物理互连属性的抽象协议层。</strong></p><p> 在NVMe over Fabrics中，整个 NVMe 多队列模型得到维护，使用普通的 NVMe 提交队列(submission queues)和完成队列(completion queues)，但封装在基于消息的传输上。 NVMe I/O 队列对(submission and completion)是为多核 CPU 设计的，这种低延迟的高效设计在 NVMe over Fabrics 中得到维护。</p><p> 下图显示了 NVMe 传输的分类和示例。 NVMe 传输包含内存模型、消息模型或两者的组合。 内存模型是一种通过执行显式内存读写操作在结构节点之间传输命令、响应和数据的模型，而消息模型是一种仅在结构节点之间发送包含命令capsules、响应capsules和数据的消息。 消息/内存模型使用消息和显式内存读写操作的组合在结构节点之间传输命令包、响应包和数据。 数据可以选择性地包含在命令包和响应包中。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230192640428.png" alt="image-20211230192640428" style="zoom:40%;" /><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20211230185100624.png" alt="image-20211230185100624" style="zoom:50%;" /><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">上面这两个图一个来自OverView（第二个图），一个来自specification(第一个图)，感觉有点冲突。</span><br></pre></td></tr></table></figure><p>在向 NVMe over Fabrics 设备发送复杂消息时，capsules允许将多条小消息作为一条消息发送，从而提高传输效率并减少延迟。 capsules是一个提交队列条目(submission queue entry)或一个完成队列条目(completion queue entry)，结合了一定数量的数据、元数据或 Scatter-Gather Lists (SGLs)。 元素的内容与本地 NVMe 协议相同，但capsules是一种将它们打包在一起以提高效率的方式。下图是capsules的具体架构。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20211230190840475.png" alt="image-20211230190840475"></p><h3 id="NVMe"><a href="#NVMe" class="headerlink" title="NVMe"></a>NVMe</h3><p>NVMe是什么：NVMe是一种Host与SSD之间通讯的协议，它在协议栈中隶属高层。</p><p><img src="https://img-blog.csdn.net/20180417100139590" alt="img"></p><p>NVMe制定了Host与SSD之间通讯的命令，以及命令如何执行的。</p><p>NVMe有两种命令，一种叫Admin Command，用以Host管理和控制SSD；另外一种就是I/O Command，用以Host和SSD之间数据的传输。</p><p>NVMe有三种队列：Submission Queue （SQ），Completion Queue（CQ）和Doorbell Register （DB）。 SQ和CQ位于Host的内存中，DB则位于SSD的控制器内部。如下图所示：</p><p><img src="https://img-blog.csdn.net/20180417100922685" alt="img"></p><p>SQ位于Host内存中，Host要发送命令时，先把准备好的命令放在SQ中，然后通知SSD来取；CQ也是位于Host内存中，一个命令执行完成，成功或失败，SSD总会往CQ中写入命令完成状态。DB则是在Host发送命令时，不是直接往SSD中发送命令的，而是把命令准备好放在自己的内存中，Host就是通过写SSD端的DB寄存器来告知SSD命令已经处理完毕，可以前来检阅。流程如下图所示：</p><p><img src="https://img-blog.csdn.net/20180417101200769" alt="img"></p><ol><li>Host写命令到SQ，此时的命令在host的内存中；</li><li>Host写DB，通知NVMe Controller取命令。通过更新在Controller内部的寄存器SQ Tail Doorbell来完成。</li><li>Controller收到通知，于是从SQ中取命令。取走命令之后，需要在Controller内部的SQ Head Pointer寄存器中更新Head所在的位置。NVMe没有规定Command存入队列的执行顺序，Controller可以一次取出多个Command进行批量处理。</li><li>Controller执行命令。执行Read/Wirte Command时，这个过程也会与Host Memory进行数据传递。</li><li>命令执行完成，Controller往CQ中写指令执行结果。此时，Controller需要更新内部的CQ Tail Pointer寄存器。</li><li>Controller发短信通知Host指令完成。Controller通过发送一个中断信息告知Host。</li><li>收到短信，Host处理CQ，查看命令完成状态；</li><li>Host处理完CQ中的命令需要告知controller。Host更新Controller内部的CQ Head Doorbell。</li></ol><p>四个寄存器全部放在Controller内存中。也就是说Controller知道这SQ Tail/Head和CQ Tail/Head的全部信息。</p><p>而Host仅仅知道自己更新的两个信息SQ Tail和CQ Head。Controller把SQ Head和CQ Tail的信息写入Completion报文中，通知给host。</p><p>NVMe 访存路径</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20220725111306065.png" alt="image-20220725111306065"></p><h4 id="NVMe-Controller-Memory-Buffer-控制器内存缓冲区"><a href="#NVMe-Controller-Memory-Buffer-控制器内存缓冲区" class="headerlink" title="NVMe Controller Memory Buffer(控制器内存缓冲区)"></a>NVMe Controller Memory Buffer(控制器内存缓冲区)</h4><p>controller通过将 CAP.CMBS 设置为“1”来指示对 CMB 的支持。 host通过将 CMBMSC.CRE 设置为“1”来表示使用 CMB 的意图。 一旦该位设置为“1”，controller就会通过 CMBLOC 和 CMBSZ 属性指示 CMB 的属性.</p><p>CMB 可用于多种用途。 controller通过在 CMBSZ 属性中设置支持标志来指示内存可用于哪些目的。</p><h3 id="NVMe-over-ROCE"><a href="#NVMe-over-ROCE" class="headerlink" title="NVMe over ROCE"></a>NVMe over ROCE</h3><p>NVMe over RoCE 调用关系如下图所示，内核 nvme_rdma 模块相当于胶水层，连接 rdma stack 和 nvme core接口，即 NVMe 队列接口可以对接 RDMA 队列接口，进而调用下层 rdma stack 中 verbs 传输接口。</p><img src="https://pic4.zhimg.com/v2-adaad1b3a14e2fa115fe0472c8b0955f_r.jpg" alt="preview" style="zoom:50%;" /><h4 id="NVMeoF队列结构"><a href="#NVMeoF队列结构" class="headerlink" title="NVMeoF队列结构"></a>NVMeoF队列结构</h4><p>NVMeoF将NVMe队列映射到RDMA队列上。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20220725112852892.png" alt="image-20220725112852892"></p><p>Host端RNIC将NVMe SQE封装成网络命令包，作为RDMA报文内容（payload），通过RDMA传输到target端，Target端的RNIC解包之后，将SQE和数据放入target端主机的内存中，随后Target处理NVMe命令和数据；处理完之后，将NVMe CQE封装成RDMA响应包(Response)，放入RDMA完成队列中，返回给Host。</p><h2 id="XRC（扩展可靠连接技术）网卡模式"><a href="#XRC（扩展可靠连接技术）网卡模式" class="headerlink" title="XRC（扩展可靠连接技术）网卡模式"></a>XRC（扩展可靠连接技术）网卡模式</h2><p>使用SRQ虽然能够大大减少进程的接收缓冲区数目，但是它仍然需要在每个进程之间都建立连接。</p><p>在多核系统上， 一个节点内往往运行多个进程，这就会使得单个节点上的连接数目成倍增加，内存开销也会成倍增加。为了解决这个问题，扩展可靠连接(Extended Reliable Connection，简称 XRC)技术被引入到了InfiniBand传输服务中。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\华为网卡项目\image-20220122194819302.png" alt="image-20220122194819302" style="zoom:50%;" /><p>允许发送方在发送工作请求里指定远端接收队列。如果使用了SRQ，这意味着消息发送者可以指定消息在达到目的节点后由哪个SRQ来接收，因为SRQ是独立于连接之外能够被多个QP所共享的资源，所以XRC相当于变相地支持了一个本地QP可以向多个远端QP发送消息，也就是说，通过XRC一个进程只需要一条连接或者一个QP即可向远端节点上的所有进程发送消息。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20220122194215743.png" alt="image-20220122194215743"></p><p>XRC 在请求方(requester)的操作与 RC 类似，在响应方(responder)与 RD 类似。由于这种不对称性，XRC 传输服务中的传输对象有一些独特的特征。</p><ol><li>XRC INI QP 与常规 RC QP 类似，但没有响应端</li><li>XRC TGT QP 类似于 RD EEC，但没有请求方</li><li>XRC SRQ 类似于 RD QP，但没有请求方 </li></ol><table><thead><tr><th align="left">名称</th><th>含义</th></tr></thead><tbody><tr><td align="left">XRC</td><td>eXtended Reliable Connected transport service</td></tr><tr><td align="left">XRC INI QP</td><td>XRC Initiator QP。这是 XRC 操作的发起者队列。 XRC INI QP 用于发出 XRC 传出请求，并且没有响应(responder)方。 XRC 传入请求将由 XRC TGT QP 处理</td></tr><tr><td align="left">XRC TGT QP</td><td>XRC Target QP。这是 XRC 操作的响应者。 XRC TGT QP（与 XRC SRQ 一起）用于处理传入的 XRC 请求。 XRC TGT QP 没有请求方。 XRC 传出请求通过 XRC INI QP 发出</td></tr><tr><td align="left">XRC SRQ</td><td>这是为传入的 XRC 请求 post Receive WQE 的Receive Queue。 XRC 请求数据包在扩展标头 (XRCETH) 中携带目标 XRC SRQ 编号，如果需要，将从该编号中获取接收 WQE</td></tr><tr><td align="left">XRC Domain</td><td>用于关联 XRC TGT QP 和 XRC SRQ 的属性。 XRC 数据包只能以与它们的目的地 XRC TGT QP 相同的 XRC Domain中的 XRC SRQ 为目标</td></tr><tr><td align="left">XRCETH</td><td>XRC Extended Transport Header. Present in XRC request packets.</td></tr></tbody></table><h1 id="实验的相关命令和具体参数"><a href="#实验的相关命令和具体参数" class="headerlink" title="实验的相关命令和具体参数"></a>实验的相关命令和具体参数</h1><h2 id="抓包工具"><a href="#抓包工具" class="headerlink" title="抓包工具"></a>抓包工具</h2><h3 id="ibdump"><a href="#ibdump" class="headerlink" title="ibdump"></a>ibdump</h3><h2 id="性能测试工具"><a href="#性能测试工具" class="headerlink" title="性能测试工具"></a>性能测试工具</h2><h3 id="ib-send-bw"><a href="#ib-send-bw" class="headerlink" title="ib_send_bw"></a>ib_send_bw</h3><p>具体内容可以看gitlab网页<a href="https://github.com/linux-rdma/perftest">https://github.com/linux-rdma/perftest</a></p><ol><li><p>服务器端运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ib_send_bw -a -c UD -d mlx5_0 -i 1 -z</span><br></pre></td></tr></table></figure></li><li><p>客户端运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ib_send_bw -a -c UD -d mlx5_0 -i 1 -z 172.16.0.106</span><br></pre></td></tr></table></figure></li></ol><p>重点解释一下<code>-z</code>这个参数是什么意思：Communicate with rdma_cm module to exchange data - use regular QPs</p><h1 id="分流访问NVMe-SSD"><a href="#分流访问NVMe-SSD" class="headerlink" title="分流访问NVMe SSD"></a>分流访问NVMe SSD</h1><h2 id="SPDK-NVMe-oF的介绍"><a href="#SPDK-NVMe-oF的介绍" class="headerlink" title="SPDK NVMe-oF的介绍"></a>SPDK NVMe-oF的介绍</h2><p>NVMe over Fabrics (NVMe-oF) 协议在 RDMA（iWARP、RoCE、InfiniBand™）、光纤通道和 TCP 等网络结构上扩展了 NVM Express* (NVMe) 块协议的并行性和效率。SPDK 提供用户空间 NVMe-oF 的target和initiator，可通过网络扩展 SPDK 堆栈其余部分的软件效率。SPDK NVMe-oF 的target使用 SPDK user-space, polled-mode NVMe driver 向 NVMe 设备提交和完成 I/O 请求，从而减少软件处理开销。 同样，它将连接固定到 CPU 内核以避免同步和缓存抖动，以便这些连接的数据尽可能靠近 CPU 缓存。</p><p>SPDK NVMe-oF target and initiator 使用 Infiniband/RDMA verbs API 来访问支持RDMA的NIC。目前只针对ROCEV2进行了测试。与 SPDK NVMe 驱动程序类似，SPDK 提供了一个user-space, lockless, polled-mode的 NVMe-oF  initiator。host使用initiator建立连接并向 NVMe-oF target内的 NVMe 子系统提交 I/O 请求。NVMe 子系统包含namespace，每个namespace都映射到通过 SPDK 的 bdev 层公开的单个块设备。SPDK 的 bdev 层是块设备抽象层和通用块存储堆栈，在许多操作系统都有类似实现。使用 bdev 接口将存储介质与用于访问存储的前端协议完全解耦。用户可以构建自己的虚拟 bdev，提供复杂的存储服务，并将它们与 SPDK NVMe-oF  target集成，无需额外的代码更改。 NVMe-oF target中可能有许多子系统，每个子系统可能包含许多namespace。子系统和namespace可以通过 JSON-RPC 接口动态配置。</p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ol><li><p>查看nvme ssd具体有哪几个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvme list</span><br></pre></td></tr></table></figure><p>可以查看所有连接到当前系统的nvme设备：名称，序列号，大小，LBA 和 serial。</p><p>使用该命令的话可以在host机器上可以查看到target的ssd（前提是target的ssd挂载到了spdk中）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">通过spdk查看每个硬盘的pcie地址</span></span><br></pre></td></tr></table></figure><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\华为网卡项目\image-20220519154020368.png" alt="image-20220519154020368"></p></li></ol><p>注意spdk驱动和nvme驱动的问题</p><p>配置完target在配置host</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>如果使用modprobe nvme_rdma出错。大概率问题出现在rdma驱动中</p><h2 id="FIO工具介绍"><a href="#FIO工具介绍" class="headerlink" title="FIO工具介绍"></a>FIO工具介绍</h2><p>FIO 工具是一款用于测试硬件存储性能的辅助工具，兼具灵活性、可靠性从而从众多性能测试工具中脱颖而出。磁盘的 I/O 是衡量硬件性能的最重要的指标之一，而 FIO 工具通过模拟 I/O负载对存储介质进行压力测试，并将存储介质的 I/O 数据直观的呈现出来。</p><p>f关于io介绍的网站：<a href="https://fio.readthedocs.io/en/latest/fio_doc.html#how-fio-works">https://fio.readthedocs.io/en/latest/fio_doc.html#how-fio-works</a></p><h3 id="fio操作"><a href="#fio操作" class="headerlink" title="fio操作"></a>fio操作</h3><p>让 fio 模拟所需的 I/O 工作负载的第一步是编写一个描述该特定设置的作业文件(job file)。 作业文件中可以定义要模拟的线程或者文件，通过共享参数定义全局部分，也可以定义每一线程的单独参数。运行时，fio 会解析此文件并按照描述设置所有内容。</p><h3 id="fio文件配置介绍"><a href="#fio文件配置介绍" class="headerlink" title="fio文件配置介绍"></a>fio文件配置介绍</h3><ol><li><p>I/O type</p><p>定义发布给文件的I/O模式，读、写、顺序、随机或者是否使用buffer.</p><ul><li><p>direct=bool</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">If value is true, use non-buffered I&#x2F;O. Default: false.</span><br></pre></td></tr></table></figure><p>这个值决定是否使用non-buffered I/O。</p><p>buffered IO指的是在内核和用户程序之间设置了一层缓冲区，用来提高IO读写的效率；</p><p>读取：硬盘—&gt;内核缓冲区—&gt;<strong>用户缓冲区</strong>—&gt;用户程序</p><p>写回：用户程序—&gt;<strong>用户缓冲区</strong>—&gt;内核缓冲区—&gt;硬盘</p></li><li><p>atomic=bool</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">If value is true, attempt to use atomic direct I&#x2F;O. Atomic writes are guaranteed to be stable once acknowledged by the operating system. </span><br></pre></td></tr></table></figure><p>如果值为 true，则尝试使用原子 I/O。原子I/O的写入是稳定的</p></li><li><p>readwrite=str，rw=str</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Type of I&#x2F;O pattern.</span><br><span class="line">read;write;trim;randread;randwrite;readwrite;randrw;trimwrite</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Block size</p><p>发出I/O的块大小，可以是单个值，也可以是个范围</p><ul><li><p>blocksize=int[,int][,int]</p><p>单个值适用于read、write和trim。 可以为read、write和trim指定逗号分隔的值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The block size in bytes used for I&#x2F;O units. Default: 4096. A single value applies to reads, writes, and trims. Comma-separated values may be specified for reads, writes, and trims. A value not terminated in a comma applies to subsequent types.</span><br></pre></td></tr></table></figure></li><li><p>blocksize_range=irange[,irange][,irange], bsrange=irange[,irange][,irange]</p><p>I/O 单元的一系列块大小（以字节为单位）。 除非设置了 blocksize_unaligned，否则发出的 I/O 单元将始终是最小大小的倍数。<strong>bsrange=1k-4k,2k-8k.</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A range of block sizes in bytes for I&#x2F;O units. The issued I&#x2F;O unit will always be a multiple of the minimum size, unless blocksize_unaligned is set.</span><br><span class="line"></span><br><span class="line">Comma-separated ranges may be specified for reads, writes, and trims as described in blocksize.</span><br></pre></td></tr></table></figure></li></ul></li><li><p>I/O size</p><p>要读写的数据总量</p><ul><li>size=int</li></ul></li><li></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>群晖使用手册</title>
    <link href="/2021/11/22/%E7%BE%A4%E6%99%96%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/"/>
    <url>/2021/11/22/%E7%BE%A4%E6%99%96%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="群晖NAS简单使用说明"><a href="#群晖NAS简单使用说明" class="headerlink" title="群晖NAS简单使用说明"></a>群晖NAS简单使用说明</h1><h2 id="群晖NAS是什么"><a href="#群晖NAS是什么" class="headerlink" title="群晖NAS是什么"></a>群晖NAS是什么</h2><ol><li>你可把它看作是你的私人云盘，具有安全可控，功能可拓展的特点。</li><li>现在你可以把重要的文件放到你的云盘.上，或者分享给你周围的人。</li><li>可以通过网页进行登录。</li><li>属于共同项目组的可以使用群晖中的gitlab进行代码管理</li></ol><h2 id="账号和密码"><a href="#账号和密码" class="headerlink" title="账号和密码"></a>账号和密码</h2><ol><li><p>账号是每个人的首字母小写。初始密码是：111222（建议登陆后进行修改）</p></li><li><p>如果忘记密码可以重新设置。注意查看自己的qq邮箱。群晖的邮箱账号是<strong>PiedPiper - Synology DiskStation</strong></p></li><li><p>内网登录网址：<a href="http://192.168.0.8:5000/">http://192.168.0.8:5000/</a></p></li><li><p>外网登录网址：<a href="http://120.79.170.202:8047/">http://120.79.170.202:8047/</a></p></li><li><p>外网通过域名访问：<a href="http://quickconnect.cn/ForPiedPiper/">http://QuickConnect.cn/ForPiedPiper/</a></p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\群晖使用手册\image-20211122151646208.png" alt="image-20211122151646208" style="zoom:30%;" /></li></ol><h2 id="空间配额与使用"><a href="#空间配额与使用" class="headerlink" title="空间配额与使用"></a>空间配额与使用</h2><ol><li>每个人的使用空间是500GB，. 上传下载单个文件最大10GB。</li><li>个人空间的文件有读写权限。所有者可设置分享文件的读写权限。</li><li>目前NAS系统配置了通讯，下载，备份，协同办公等软件，建议熟悉使用。例如Chat提供通讯功能，Calendar,Note提供日程安排，HyperBackup提供文件备份功能。0ffice提供在线预览，编辑等功能。</li><li>通过网页登陆时，桌面系统的操作方式简单，与平时使用Windows系统类似。例如你选中想要分享的文件，点击右键选择共享，然后设置你要分享的人或群组。</li></ol><h1 id="群晖备份数据说明"><a href="#群晖备份数据说明" class="headerlink" title="群晖备份数据说明"></a>群晖备份数据说明</h1><h2 id="各个文件夹介绍"><a href="#各个文件夹介绍" class="headerlink" title="各个文件夹介绍"></a>各个文件夹介绍</h2><ol><li><p> home： 分配给个人的隐私空间，其他人不能访问</p></li><li><p>homes: 管理员（每一个新开的账号都有管理员权限）可以看到所有人的home个人隐私空间（建议不要查看）</p></li><li><p>共享文件夹：所有人（管理员和非管理员）共享的空间，所有人都可以进行读写</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\群晖使用手册\image-20211122153119510.png" alt="image-20211122153119510"></p></li></ol><h2 id="备份说明"><a href="#备份说明" class="headerlink" title="备份说明"></a>备份说明</h2><ol><li> 共享文件夹 —- data-backup目录下  —- 论文题目</li></ol><p>   <img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\群晖使用手册\clip_image001.png" alt="img"></p><ol start="2"><li><p>备份格式：</p><p>子目录包括：代码，图（fig.1 , fig.2 …）, 论文latex 格式，论文PDF格式</p><p>其中图(（fig.1 , fig.2）要包括： 图的数据， 画图脚本，图</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\群晖使用手册\image-20211122153511798.png" alt="image-20211122153511798"></p></li></ol><h2 id="备份方法"><a href="#备份方法" class="headerlink" title="备份方法"></a>备份方法</h2><ol><li><p>Window 系统备份指定文件夹或文件到群晖</p><p>使用Cloud Station Server 套件， windows系统需要安装Synology Cloud Station Backup-4.3.2-4450， 群文件有，或者在群晖直接下载安装</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\群晖使用手册\clip_image002.jpg" alt="img" style="zoom:80%;" /><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\群晖使用手册\clip_image004.jpg" alt="img" style="zoom:80%;" /><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\群晖使用手册\clip_image006.jpg" alt="img" style="zoom:80%;" /><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\群晖使用手册\clip_image008.jpg" alt="img" style="zoom:80%;" /><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\群晖使用手册\clip_image010.jpg" alt="img" style="zoom:80%;" /></li><li><p>Ubuntu 或者centos 系统备份指定文件夹或文件到群晖</p><p>​    使用Actice Backup for Business套件，选择文件服务器，配置需要备份的服务器信息等</p></li></ol><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\群晖使用手册\image-20211122153858036.png" alt="image-20211122153858036"></p><h1 id="gitlab使用说明"><a href="#gitlab使用说明" class="headerlink" title="gitlab使用说明"></a>gitlab使用说明</h1><h2 id="gitlab简介"><a href="#gitlab简介" class="headerlink" title="gitlab简介"></a>gitlab简介</h2><p>GitLab 是一个用于仓库管理系统的开源项目。使用<a href="http://baike.baidu.com/view/1531489.htm">Git</a>作为代码管理工具，并在此基础上搭建起来的web服务。</p><p>可通过Web界面进行访问公开的或者私人项目。它拥有与Github类似的功能，能够浏览源代码，管理缺陷和注释。可以管理团队对仓库的访问，它非常易于浏览提交过的版本并提供一个文件历史库。团队成员可以利用内置的简单聊天程序(Wall)进行交流。它还提供一个代码片段收集功能可以轻松实现代码复用。</p><h2 id="账号和密码-1"><a href="#账号和密码-1" class="headerlink" title="账号和密码"></a>账号和密码</h2><ol><li><p>内网登录的网址：<a href="http://192.168.0.8:30000/">http://192.168.0.8:30000/</a></p></li><li><p>外网登录网址：<a href="http://120.79.170.202:9001/">http://120.79.170.202:9001/</a></p></li><li><p>每个人的账号都是自己的首字母<strong>大写</strong>，邮箱都是自己的qq邮箱。初始密码是：12345678 。第一次登陆需要自己修改密码。</p></li><li><p>如果忘记自己的密码，需要联系管理员本人，进行密码的修改（目前还没有邮件的功能）</p></li><li><p>管理员账户：root。管理员密码：PiedPiper</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\群晖使用手册\image-20211122194705212.png" alt="image-20211122194705212" style="zoom:50%;" /></li></ol><h2 id="设置ssh-keys登录"><a href="#设置ssh-keys登录" class="headerlink" title="设置ssh keys登录"></a>设置ssh keys登录</h2><p>为了方便和gitlab的交互，建议每个人学会git的操作使用。方便使用<strong>ssh keys</strong>进行登录从而进行代码的push和copy。</p><ol><li><p>点击Preferences，进入个人的设置界面。</p></li><li><p>在左侧的侧边栏中选择SSH Keys选项。</p></li><li><p>在自己的主机中找到自己的ssh文件（没有的话，利用git去生成。见<a href="https://blog.csdn.net/weixin_44291453/article/details/106763561%EF%BC%89">https://blog.csdn.net/weixin_44291453/article/details/106763561）</a></p></li><li><p>打开id_rsa.pub文件，将其中的内容。复制到gitlab界面的key选项的文本框中。此文件的目录（在我的windows中是）</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\群晖使用手册\image-20211122190230008.png" alt="image-20211122190230008"></p></li><li><p>之后就可以远程对自己加入的项目进行git操作了。</p></li><li><p>如果使用内网进行登录，直接使用clone标签下的提示命令就可以。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\群晖使用手册\image-20211122193428521.png" alt="image-20211122193428521"></p></li><li><p>如果使用外网登录，需要修改代码。例子如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone ssh:&#x2F;&#x2F;git@120.79.170.202:9002&#x2F;szb&#x2F;sun_test.git</span><br></pre></td></tr></table></figure><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\群晖使用手册\image-20211122194920668.png" alt="image-20211122194920668" style="zoom:80%;" /><p>每个人的<code>120.79.170.202:9002</code>是不变的，是我们的反向代理的ip地址和端口号。后面的<code>/szb/sun_test.git</code>部分根据每个人情况有所不同。</p></li></ol><h2 id="创建小组和项目"><a href="#创建小组和项目" class="headerlink" title="创建小组和项目"></a>创建小组和项目</h2><p>每个人都有权限创建group和project。并且创建完了还可以邀请同组的成员，进行代码共享。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\群晖使用手册\image-20211122193904131.png" alt="image-20211122193904131"></p>]]></content>
    
    
    
    <tags>
      
      <tag>群晖使用手册</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>周报汇总</title>
    <link href="/2021/10/17/%E5%91%A8%E6%8A%A5%E6%B1%87%E6%80%BB/"/>
    <url>/2021/10/17/%E5%91%A8%E6%8A%A5%E6%B1%87%E6%80%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="20211011-20211017"><a href="#20211011-20211017" class="headerlink" title="20211011-20211017"></a>20211011-20211017</h1><h2 id="本周工作"><a href="#本周工作" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>了解自动组卷系统的总体功能和具体需求。分为教师端和学生端。教师端可以录入题目，知识点分类，对学生的学习情况进行分析，生成试题，生成试卷。学生端能够进行答题和结果校验。</li><li>初步掌握并构建neo4j数据库，初步在服务器构建知识点结构。</li><li>用python实现三个功能（控制台输入输出）：题目录入、知识点录入、根据简单要求随机组题。</li></ol><h2 id="任务进度"><a href="#任务进度" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="Python自动组卷系统"><a href="#Python自动组卷系统" class="headerlink" title="Python自动组卷系统"></a>Python自动组卷系统</h3><ol><li>了解系统大概</li><li>设计并搭建数据库</li><li>python控制台实现基础功能（当前完成这一阶段）</li><li>构建基础UI端：实现录入题目、出题等基础功能</li><li>实现更丰富的功能：学生成绩的分析，更复杂的条件出题</li></ol><h2 id="下周任务工作计划"><a href="#下周任务工作计划" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>阅读并熟悉蒋老师发的文章</li><li>搭建”键值对“工作的环境</li><li>初步熟悉Python前后端工作，学习Django，在Centos服务器搭建python的web程序</li><li>完成Python自动组卷系统的第四阶段</li><li>初步设计学生端的数据库如何和知识题目的数据库结合</li></ol><h1 id="20211018-20211022"><a href="#20211018-20211022" class="headerlink" title="20211018-20211022"></a>20211018-20211022</h1><h2 id="本周工作-1"><a href="#本周工作-1" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>在服务器配置django+uwsgi+nginx的环境</li><li>配置使用pycharm可以远程调试服务器项目的环境</li><li>学习如何在django中调用neo4j数据库内容</li><li>学习django如何实现web项目开发，比如url的使用，html的搭配</li><li>记录搭建环境中不断遇到的问题和解决办法</li><li>阅读“键值对”论文的前两章</li></ol><h2 id="任务进度-1"><a href="#任务进度-1" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="Python自动组卷系统-1"><a href="#Python自动组卷系统-1" class="headerlink" title="Python自动组卷系统"></a>Python自动组卷系统</h3><ol><li>了解系统大概</li><li>设计并搭建数据库</li><li>python控制台实现基础功能</li><li>构建基础UI端：实现录入题目、出题等基础功能（当前处于这一阶段进行中，还在不断摸索）</li><li>实现更丰富的功能：学生成绩的分析，更复杂的条件出题</li></ol><h2 id="下周任务工作计划-1"><a href="#下周任务工作计划-1" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>完成Python自动组卷系统的第四阶段</li><li>阅读完论文</li></ol><h1 id="20211025-20211029"><a href="#20211025-20211029" class="headerlink" title="20211025-20211029"></a>20211025-20211029</h1><h2 id="本周工作-2"><a href="#本周工作-2" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>完成neo4j到echarts的数据转换与显示</li><li>完成neo4j数据库内容在前端的基础显示(只有节点title和边)，搭建教师端的index界面）</li><li>完成从前端向数据库添加、删除、更改知识、题目节点和节点之间的关系</li><li>完成教师端的出卷功能和试卷内容和答案的下载</li><li>与蒋老师讨论后续进展</li><li>index界面构建目录树</li></ol><h2 id="任务进度-2"><a href="#任务进度-2" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="Python自动组卷系统-2"><a href="#Python自动组卷系统-2" class="headerlink" title="Python自动组卷系统"></a>Python自动组卷系统</h3><ol><li>完成前端向服务器添加知识节点的功能</li><li>完成前端向服务器添加题目节点的功能</li><li>完成节点删除和更改的功能（只能对已有节点的属性值进行更改，无法动态增加或者删除某类节点的属性）</li><li>完成出卷的功能</li><li>教师端index界面展示目录树，增加空白属性以备后续使用，增加节点改成下拉框，自动判卷功能（<strong>目前处于此阶段</strong>）</li><li>学生端的主页设计</li><li>学生端的自动出题功能</li><li>学生的知识掌握情况的数据库设计和融入并将学生的知识掌握情况融入教师端的系统中</li><li>教师端和学生端的分开登录的功能</li></ol><h2 id="下周任务工作计划-2"><a href="#下周任务工作计划-2" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>完成上述第五阶段后与蒋老师讨论</li><li>将系统复制到学校的阿里云服务器中</li></ol><h1 id="20211101-20211105"><a href="#20211101-20211105" class="headerlink" title="20211101-20211105"></a>20211101-20211105</h1><h2 id="本周工作-3"><a href="#本周工作-3" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>一周都在感冒，看病</li><li>实现首页目录树的构建以及和结构图的交互</li><li>实现动态添加知识节点，父节点使用下拉框显示</li><li>实现动态添加题目节点，多个父节点也可以使用下拉框显示</li><li>实现项目的迁移，从自己的腾讯云服务器迁移到了学校的阿里云</li><li>实现教师端从所有题目中进行选择从而出卷</li><li>修改<strong>中南大学教师教学发展中心教学学术研究专项基金项目申 请 表</strong></li></ol><h2 id="任务进度-3"><a href="#任务进度-3" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="Python自动组卷系统-3"><a href="#Python自动组卷系统-3" class="headerlink" title="Python自动组卷系统"></a>Python自动组卷系统</h3><ol><li>完成前端向服务器添加知识节点的功能</li><li>完成前端向服务器添加题目节点的功能</li><li>完成节点删除和更改的功能（只能对已有节点的属性值进行更改，无法动态增加或者删除某类节点的属性）</li><li>完成出卷的功能</li><li>教师端index界面展示目录树，增加空白属性以备后续使用，增加节点改成下拉框。</li><li>实现自动出卷，自动判卷功能（<strong>目前处于此阶段</strong>）</li><li>学生端的主页设计</li><li>学生端的自动出题功能</li><li>学生的知识掌握情况的数据库设计和融入并将学生的知识掌握情况融入教师端的系统中</li><li>教师端和学生端的分开登录的功能</li></ol><h2 id="下周任务工作计划-3"><a href="#下周任务工作计划-3" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>与谭勋勇见面并介绍系统（这周由于感冒原因一直没有见面）</li><li>实现自动判卷功能</li><li>设计并搭建学生端主页</li></ol><h1 id="20211108-20211112"><a href="#20211108-20211112" class="headerlink" title="20211108-20211112"></a>20211108-20211112</h1><h2 id="本周工作-4"><a href="#本周工作-4" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>完成<strong>中南大学教师教学发展中心教学学术研究专项基金项目申请表</strong>的修改</li><li>优化系统的出卷预览功能和题目选择功能</li><li>完成平台的自动判卷功能，选择题、填空题和编程题目均可以在后端进行答案比对</li><li>完成对系统知识节点和题目节点插入时的查重功能</li><li>给谭勋勇介绍系统的具体内容，并告诉他应该重点学习python的哪一个方向</li><li>完成群晖的交接任务，实验室成员的账号分配和公网访问</li></ol><h2 id="任务进度-4"><a href="#任务进度-4" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="Python自动组卷系统-4"><a href="#Python自动组卷系统-4" class="headerlink" title="Python自动组卷系统"></a>Python自动组卷系统</h3><ol><li>完成前端向服务器添加知识节点的功能</li><li>完成前端向服务器添加题目节点的功能</li><li>完成节点删除和更改的功能（只能对已有节点的属性值进行更改，无法动态增加或者删除某类节点的属性）</li><li>完成出卷的功能</li><li>教师端index界面展示目录树，增加空白属性以备后续使用，增加节点改成下拉框。</li><li>实现自动出卷，自动判卷功能</li><li>插入真实数据（目前处于此阶段）</li><li>学生的知识掌握情况的数据库设计和融入并将学生的知识掌握情况融入教师端的系统中</li><li>学生端的主页设计</li><li>教师端和学生端的分开登录的功能</li></ol><h2 id="下周任务工作计划-4"><a href="#下周任务工作计划-4" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>在谭勋勇的协助下将搭建真实数据的数据库</li><li>继续在实验数据库中完成学生端的设计</li><li>群晖搭建gitlab</li><li>读完论文</li></ol><h1 id="20211115-2021111219"><a href="#20211115-2021111219" class="headerlink" title="20211115-2021111219"></a>20211115-2021111219</h1><h2 id="本周工作-5"><a href="#本周工作-5" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>读完论文《分布式键值存储系统中延迟优化研究》，正在阅读论文《Gimbal JBOFs》。</li><li>完成知识节点和题目节点属性的设计。</li><li>完成第一章节知识节点的添加</li><li>完成平台学生端的部分搭建，实现教师端和学生端的作业交互</li><li>群晖：完成远程使用ssh登录，搭建群晖本地gitlab，进行账号分配。</li></ol><h2 id="任务进度-5"><a href="#任务进度-5" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="Python自动组卷系统-5"><a href="#Python自动组卷系统-5" class="headerlink" title="Python自动组卷系统"></a>Python自动组卷系统</h3><ol><li>完成前端向服务器添加知识节点、题目节点的功能</li><li>完成节点删除和更改的功能（只能对已有节点的属性值进行更改，无法动态增加或者删除某类节点的属性）</li><li>完成出卷的功能</li><li>教师端index界面展示目录树，增加空白属性以备后续使用，增加节点改成下拉框。</li><li>实现自动出卷，自动判卷功能</li><li>插入真实数据</li><li>学生端的主页设计</li><li>学生节点的设计（目前处于此阶段）</li><li>系统对每次作业所有题目的答题情况进行统计：每个知识点的被掌握程度</li><li>系统对每个学生的学习情况进行统计：学生每次的小测成绩，学生对每个知识点的掌握程度</li><li>教师端和学生端的分开登录的功能</li></ol><h2 id="下周任务工作计划-5"><a href="#下周任务工作计划-5" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>完成群晖gitlab搭建，完成群晖的使用手册</li><li>阅读完论文《Gimbal JBOFs》</li><li>设计平台如何对学生学习状态进行记录，并实现部分功能</li></ol><h1 id="20211122-2021111126"><a href="#20211122-2021111126" class="headerlink" title="20211122-2021111126"></a>20211122-2021111126</h1><h2 id="本周工作-6"><a href="#本周工作-6" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>完成群晖的远程web端登录，群晖内gitlab的配置与账号管理，完成gitlab的远程登录与远程代码管理功能。完成群晖的使用手册</li><li>写教学辅助平台文档，写作方式一直有问题。所以计划开始写毕业论文中的需求分析的部分（开始画图）。</li><li>和谭勋勇沟通，目前已经完成了远程操作服务器的功能但是没有办法跑起来。约好下周二和他见面，帮他看看问题。（由于本科生的假期提前，导致他没有了周末，可能需要减轻给他的工作）</li><li>找到了gimbal论文的视频，进行粗略学习。</li><li>完成教学辅助平台登录端的功能(初版)。</li></ol><h2 id="任务进度-6"><a href="#任务进度-6" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="Python自动组卷系统-6"><a href="#Python自动组卷系统-6" class="headerlink" title="Python自动组卷系统"></a>Python自动组卷系统</h3><ol><li>完成前端向服务器添加知识节点、题目节点的功能</li><li>完成节点删除和更改的功能（只能对已有节点的属性值进行更改，无法动态增加或者删除某类节点的属性）</li><li>完成出卷的功能</li><li>教师端index界面展示目录树，增加空白属性以备后续使用，增加节点改成下拉框。</li><li>实现自动出卷，自动判卷功能</li><li>学生端的主页设计与学生节点的设计</li><li>利用session实现教师端和学生端，以及学生端内部的分开登录的功能（目前处于此阶段）</li><li>系统对每次作业所有题目的答题情况进行统计：每个知识点的被掌握程度</li><li>系统对每个学生的学习情况进行统计：学生每次的小测成绩，学生对每个知识点的掌握程度</li></ol><h2 id="下周任务工作计划-6"><a href="#下周任务工作计划-6" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>熟悉蒋老师发的华为项目的问题二，结合汲发师兄的论文与gimbal的论文进行构思，看看是否有idea</li><li>完成平台的session部分。</li><li>设计出较为完整的平台需求分析文档与清晰明了的图例</li><li>帮助谭勋勇跑通程序并让他看懂代码</li></ol><h1 id="20211129-20211203"><a href="#20211129-20211203" class="headerlink" title="20211129-20211203"></a>20211129-20211203</h1><h2 id="本周工作-7"><a href="#本周工作-7" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>完成毕设任务书</p></li><li><p>了解华为项目，学习网卡的基本知识，安装网卡驱动，正在复现论文中的对比试验部分。</p></li><li><p>完成实验环境的硬件搭建。</p></li><li><p>和谭勋勇沟通，成功再他的电脑中跑通代码。</p></li><li><p>完成教学辅助平台登录端的功能的修改，实现了强制登陆的功能。</p></li><li><p>完成教学辅助平台的功能模块图和数据流图。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\周报汇总\image-20211205232722943.png" alt="image-20211205232722943"></p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\周报汇总\image-20211205232754254.png" alt="image-20211205232754254"></p></li></ol><h2 id="任务进度-7"><a href="#任务进度-7" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="Python自动组卷系统-7"><a href="#Python自动组卷系统-7" class="headerlink" title="Python自动组卷系统"></a>Python自动组卷系统</h3><ol><li>完成前端向服务器添加知识节点、题目节点的功能</li><li>完成节点删除和更改的功能（只能对已有节点的属性值进行更改，无法动态增加或者删除某类节点的属性）</li><li>完成出卷的功能</li><li>教师端index界面展示目录树，增加空白属性以备后续使用，增加节点改成下拉框。</li><li>实现自动出卷，自动判卷功能</li><li>学生端的主页设计与学生节点的设计</li><li>利用session实现教师端和学生端，以及学生端内部的分开登录的功能</li><li>整理需求，绘制流程图和功能图，完成部分毕业论文（目前处于此阶段）</li><li>系统对每次作业所有题目的答题情况进行统计：每个知识点的被掌握程度</li><li>系统对每个学生的学习情况进行统计：学生每次的小测成绩，学生对每个知识点的掌握程度</li></ol><h3 id="华为智能网卡项目（实现论文中的对比试验）"><a href="#华为智能网卡项目（实现论文中的对比试验）" class="headerlink" title="华为智能网卡项目（实现论文中的对比试验）"></a>华为智能网卡项目（实现论文中的对比试验）</h3><ol><li><p>搞懂论文中的对比实验是如何做的</p></li><li><p>找到两台拥有X5网卡的机器</p></li><li><p>安装驱动，将机器连通（目前处于此阶段）</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">由于当前的两个机子一个是Ce<span class="hljs-symbol">ntos6</span>，另一个是Ubu<span class="hljs-symbol">ntu18</span><span class="hljs-number">.04</span>，版本差的太多，所以导致两个机器对应的驱动没有办法很好的实现网卡的对接，所以正在将Ce<span class="hljs-symbol">ntOS6</span>升级为Ce<span class="hljs-symbol">ntOS7</span>，然后安装Ce<span class="hljs-symbol">ntOS7</span>对应的网卡驱动，从而实现和Ubu<span class="hljs-symbol">ntu18</span><span class="hljs-number">.04</span>的相对应<br></code></pre></td></tr></table></figure></li><li><p>配置实验中发包的频率和数量以及流的大小</p></li><li><p>运行实验</p></li><li><p>对两个机器中的吞吐量进行统计</p></li></ol><h2 id="下周任务工作计划-7"><a href="#下周任务工作计划-7" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>继续熟悉蒋老师发的华为项目的问题二，并阅读田荘师兄和蒋老师提供的论文，熟悉实验环境。整理问题</li><li>完成毕设任务计划书</li><li>跑通论文中的对比试验</li><li>着手写毕设论文的需求分析部分</li></ol><h1 id="20211206-20211210"><a href="#20211206-20211210" class="headerlink" title="20211206-20211210"></a>20211206-20211210</h1><h2 id="本周工作-8"><a href="#本周工作-8" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>完成毕设任务书,找到翻译文章</li><li>进行系统的重装，两个机器的网卡驱动安装相同版本，实验环境硬件部分配置成功</li><li>找到了网卡驱动的开发手册、rdma编程的用户使用手册、infiniband的制作标准三个参考手册，方便查阅</li><li>了解rdma的基本知识，跑通了edma编程用户使用手册中的srq的示例。证明环境是没有问题的。</li></ol><h2 id="任务进度-8"><a href="#任务进度-8" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="Python自动组卷系统-8"><a href="#Python自动组卷系统-8" class="headerlink" title="Python自动组卷系统"></a>Python自动组卷系统</h3><ol><li>完成前端向服务器添加知识节点、题目节点的功能</li><li>完成节点删除和更改的功能（只能对已有节点的属性值进行更改，无法动态增加或者删除某类节点的属性）</li><li>完成出卷的功能</li><li>教师端index界面展示目录树，增加空白属性以备后续使用，增加节点改成下拉框。</li><li>实现自动出卷，自动判卷功能</li><li>学生端的主页设计与学生节点的设计</li><li>利用session实现教师端和学生端，以及学生端内部的分开登录的功能</li><li>整理需求，绘制流程图和功能图，完成部分毕业论文（目前处于此阶段）</li><li>系统对每次作业所有题目的答题情况进行统计：每个知识点的被掌握程度</li><li>系统对每个学生的学习情况进行统计：学生每次的小测成绩，学生对每个知识点的掌握程度</li></ol><h3 id="华为智能网卡项目（实现华为项目中的多个applications共享srq）"><a href="#华为智能网卡项目（实现华为项目中的多个applications共享srq）" class="headerlink" title="华为智能网卡项目（实现华为项目中的多个applications共享srq）"></a>华为智能网卡项目（实现华为项目中的多个applications共享srq）</h3><ol><li><p>找到两台拥有X5网卡的机器</p></li><li><p>安装驱动，将机器连通</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">由于当前的两个机子一个是Ce<span class="hljs-symbol">ntos6</span>，另一个是Ubu<span class="hljs-symbol">ntu18</span><span class="hljs-number">.04</span>，版本差的太多，所以导致两个机器对应的驱动没有办法很好的实现网卡的对接，所以正在将Ce<span class="hljs-symbol">ntOS6</span>升级为Ce<span class="hljs-symbol">ntOS7</span>，然后安装Ce<span class="hljs-symbol">ntOS7</span>对应的网卡驱动，从而实现和Ubu<span class="hljs-symbol">ntu18</span><span class="hljs-number">.04</span>的相对应<br></code></pre></td></tr></table></figure></li><li><p>找到示例代码，进行解读（目前处于此阶段）</p></li><li><p>设计实验数据</p></li><li><p>运行实验</p></li><li><p>对两个机器中的吞吐量进行统计（使用ibumbs工具和wireshark进行抓包）</p></li></ol><h2 id="下周任务工作计划-8"><a href="#下周任务工作计划-8" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>继续熟悉蒋老师发的华为项目的问题二</li><li>读懂用户手册中和srq相关的代码</li><li>学习ibumbs（rdma抓包工具）和wireshark如何进行抓包</li><li>对代码进行更新，表达问题二</li></ol><h1 id="20211213-20211217"><a href="#20211213-20211217" class="headerlink" title="20211213-20211217"></a>20211213-20211217</h1><h2 id="本周工作-9"><a href="#本周工作-9" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>安装wireshark，tcpdump等抓包工具并学习</p></li><li><p>学习rdma用户手册中的关于srq和基本操作的代码，并配置基本环境跑通代码。</p></li><li><p>重新回顾华为问题，了解实验目标。通过使用NVMe-oF方法来实现一个机器向另一个机器的ssd写入内容。通过RDMA方法中的ROCEV2传输层协议可以实现NVMe的功能，使RDMA作为NVMe协议的载体。</p><p>减少SRQ的深度，客户端向服务器端读取硬盘内容，创建多个QP向硬盘发起send请求导致SRQ中的WQE供不应求，观察RNR。</p></li><li><p>学习NVMe的相关知识，发现当前实验所用的两台机器的固态硬盘并非是支持NVMe协议的，是SATA硬盘。</p></li><li><p>手动升级tcpdump和libpcap，实现能够对ROCE进行抓包。</p></li></ol><h2 id="任务进度-9"><a href="#任务进度-9" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="华为智能网卡项目"><a href="#华为智能网卡项目" class="headerlink" title="华为智能网卡项目"></a>华为智能网卡项目</h3><ol><li><p>找到两台拥有X5网卡的机器</p></li><li><p>安装驱动，将机器连通</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">由于当前的两个机子一个是Ce<span class="hljs-symbol">ntos6</span>，另一个是Ubu<span class="hljs-symbol">ntu18</span><span class="hljs-number">.04</span>，版本差的太多，所以导致两个机器对应的驱动没有办法很好的实现网卡的对接，所以正在将Ce<span class="hljs-symbol">ntOS6</span>升级为Ce<span class="hljs-symbol">ntOS7</span>，然后安装Ce<span class="hljs-symbol">ntOS7</span>对应的网卡驱动，从而实现和Ubu<span class="hljs-symbol">ntu18</span><span class="hljs-number">.04</span>的相对应<br></code></pre></td></tr></table></figure></li><li><p>安装NVMe的固态硬盘，进行配置，实现NVme的基础功能。</p></li><li><p>找到NVMe的示例代码，进行解读（目前处于此阶段）</p></li><li><p>设计实验数据</p></li><li><p>运行实验</p></li><li><p>对两个机器中的吞吐量进行统计（使用ibumbs工具和wireshark进行抓包）</p></li></ol><h2 id="下周任务工作计划-9"><a href="#下周任务工作计划-9" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>查找并学习NVMe-oF的学习手册</li><li>华为项目的方案设计与实现</li><li>学习RDMA和NVMe</li></ol><h1 id="20211220-20211224"><a href="#20211220-20211224" class="headerlink" title="20211220-20211224"></a>20211220-20211224</h1><h2 id="本周工作-10"><a href="#本周工作-10" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>成功使用wireshark对rdma的发包进行了抓取，包类型是RROCE,代表的是ROCEV2。</li><li>统计实验室机器的固态硬盘类型</li><li>阅读nvme的相关参考文献：nvme是在事务层之上的，属于应用层协议。</li><li>学习NVMe-oF，NVMe-oF也是一种协议，定义在传输层之上，用各种通用的传输层协议来实现NVMe功能。</li><li>选购并安装nvme固态硬盘，看到两台机器能够使用nvme了</li></ol><h2 id="任务进度-10"><a href="#任务进度-10" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="华为智能网卡项目-1"><a href="#华为智能网卡项目-1" class="headerlink" title="华为智能网卡项目"></a>华为智能网卡项目</h3><ol><li><p>找到两台拥有X5网卡的机器</p></li><li><p>安装驱动，将机器连通</p></li><li><p>安装NVMe的固态硬盘，进行配置，实现NVme的基础功能。</p></li><li><p>找到NVMe的示例代码，进行解读（目前处于此阶段）</p></li><li><p>设计实验数据：由主机向NVMe客户端的NVMe-ssd发起写请求。</p></li><li><p>运行实验</p></li><li><p>对两个机器中的吞吐量进行统计（使用ibumbs工具和wireshark进行抓包）</p></li></ol><h2 id="下周任务工作计划-10"><a href="#下周任务工作计划-10" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li><p>学习NVMe和NVMe-oF的学习手册目前找到的有</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\周报汇总\image-20211225234309564.png" alt="image-20211225234309564"></p></li><li><p>华为项目的方案设计与实现</p></li><li><p>两个机器实现NVMe-oF的交互</p></li></ol><h1 id="20211227-20211231"><a href="#20211227-20211231" class="headerlink" title="20211227-20211231"></a>20211227-20211231</h1><h2 id="本周工作-11"><a href="#本周工作-11" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>学习rdma的api使用，读懂rdma用户手册中关于srq的使用代码，并修改代码。</p></li><li><p>学习ib规范手册，了解rnr的工作原理以及在协议中的表示。结合srq代码对使用srq的rdma收发包进行抓包，成功抓取带有rnr的包。但是代码中还有一些问题。</p></li><li><p>阅读nvme-of的相关参考文献，了解nvme-of的基本框架。汇总成文件。</p></li><li><p>学习nvme的命令流程</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\周报汇总\7d6a5c1d05170cf3eebb6801d9765f9.png" alt="7d6a5c1d05170cf3eebb6801d9765f9"></p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\周报汇总\d7cf3ce0584ebd8665a98d2b6ee8c2a.png" alt="d7cf3ce0584ebd8665a98d2b6ee8c2a"></p></li></ol><h2 id="任务进度-11"><a href="#任务进度-11" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="华为智能网卡项目-2"><a href="#华为智能网卡项目-2" class="headerlink" title="华为智能网卡项目"></a>华为智能网卡项目</h3><ol><li><p>找到两台拥有X5网卡的机器</p></li><li><p>安装驱动，将机器连通</p></li><li><p>学习nvme-of的具体工作流程，了解整体的工作细节，协议栈中的每一层都在做什么（目前处于此阶段）</p></li><li><p>思考能够在nvme-of流程中的哪些方面进行优化</p></li></ol><h2 id="下周任务工作计划-11"><a href="#下周任务工作计划-11" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>学习nvme的具体工作流程，命令的具体使用流程以及应用层中的命令操作和源代码</li><li>学习nvme-of的具体工作流程，主要看不同主机之间的nvme老师如何通过roce实现的。</li><li>根据老师的要求看 是否要在两个机器中实现nvme的基础操作还是说继续学习基础知识，搭建理论模型。</li></ol><h1 id="20220103-20220107"><a href="#20220103-20220107" class="headerlink" title="20220103-20220107"></a>20220103-20220107</h1><h2 id="本周工作-12"><a href="#本周工作-12" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>准备机器学习考试。</li><li>初步构思并整理python系统的工作。计划在周一的时候在毕设的文件中进行一份详细的整理。</li><li>对新校实验室的机器进行IP地址查询和校外访问测试，群晖工作中密码的修改</li></ol><h2 id="任务进度-12"><a href="#任务进度-12" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="华为智能网卡项目-3"><a href="#华为智能网卡项目-3" class="headerlink" title="华为智能网卡项目"></a>华为智能网卡项目</h3><ol><li><p>找到两台拥有X5网卡的机器</p></li><li><p>安装驱动，将机器连通</p></li><li><p>学习nvme-of的具体工作流程，了解整体的工作细节，协议栈中的每一层都在做什么（目前处于此阶段）</p></li><li><p>思考能够在nvme-of流程中的哪些方面进行优化</p></li></ol><h2 id="下周任务工作计划-12"><a href="#下周任务工作计划-12" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>完成python系统的整理，开始写毕业论文</li><li>年终总结</li><li>和本科生对接python项目</li></ol><h1 id="20220110-20220114"><a href="#20220110-20220114" class="headerlink" title="20220110-20220114"></a>20220110-20220114</h1><h2 id="本周工作-13"><a href="#本周工作-13" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>和谭勋勇与李阮君校对python系统的工作，目前正在插入前两章的题目</li><li>python系统的目录说明以及项目架构进行文件总结</li><li>参与华为项目，了解之前的工作有错误的地方，sq和ssd是多对一的关系，并不是多对多的</li></ol><h2 id="任务进度-13"><a href="#任务进度-13" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="python教学辅助平台（寒假）"><a href="#python教学辅助平台（寒假）" class="headerlink" title="python教学辅助平台（寒假）"></a>python教学辅助平台（寒假）</h3><ol><li><p>谭勋勇和李阮君熟悉项目，对项目形成大概构思</p></li><li><p>完成对知识点和题库的添加同时能够对项目进行小范围的修改和优化（目前处于此阶段）</p></li><li><p>对项目的剩余功能进行构思和实现</p></li><li><p>平台的测试和优化</p></li></ol><h2 id="下周任务工作计划-13"><a href="#下周任务工作计划-13" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>继续完善关于平台的文档</li><li>年终总结</li><li>继续指导谭勋勇和李阮君</li><li>构思平台中学生的信息和题目是如何对应的</li><li>学习nvme-of，找到相关的视频或者参考资料</li></ol><h1 id="20220117-20220121"><a href="#20220117-20220121" class="headerlink" title="20220117-20220121"></a>20220117-20220121</h1><h2 id="本周工作-14"><a href="#本周工作-14" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>指导谭勋勇和李阮君完成部分的python平台的优化工作</li><li>构思python平台的学习信息存储细节，形成文档</li><li>学习XRC，形成文档</li><li>年终总结报告完成</li></ol><h2 id="任务进度-14"><a href="#任务进度-14" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="python教学辅助平台（寒假）-1"><a href="#python教学辅助平台（寒假）-1" class="headerlink" title="python教学辅助平台（寒假）"></a>python教学辅助平台（寒假）</h3><ol><li><p>谭勋勇和李阮君熟悉项目，对项目形成大概构思</p></li><li><p>完成对知识点和题库的添加同时能够对项目进行小范围的修改和优化</p></li><li><p>对项目的剩余功能进行构思和实现（目前处于此阶段）</p></li><li><p>平台的测试和优化</p></li></ol><h2 id="下周任务工作计划-14"><a href="#下周任务工作计划-14" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>学习nvme-of</li><li>完成华为的项目申请书</li><li>完成python平台的功能</li></ol><h1 id="20220221-20220225"><a href="#20220221-20220225" class="headerlink" title="20220221-20220225"></a>20220221-20220225</h1><h2 id="本周工作-15"><a href="#本周工作-15" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>python平台完成不限时间限制功能</li><li>python平台完成指定作业题目的功能</li><li>python平台完成只告诉学生作业对不对，不告诉正确答案的功能</li><li>优化学生的作业端功能</li></ol><h2 id="任务进度-15"><a href="#任务进度-15" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="python教学辅助平台"><a href="#python教学辅助平台" class="headerlink" title="python教学辅助平台"></a>python教学辅助平台</h3><ol><li><p>添加学生的信息</p></li><li><p>学生添加题库的时候希望可以经过教师端的审核再添加</p></li><li><p>学生自主测试的功能目前还没有办法显示出来</p></li><li><p>对编程题如何判断进行优化</p></li><li><p>平台的测试和优化</p></li></ol><h2 id="下周任务工作计划-15"><a href="#下周任务工作计划-15" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>添加学生信息</li><li>完成学生端自主测试的功能和编程题的判断优化。并让师兄进行测试</li><li>论文翻译</li></ol><h1 id="20220228-20220304"><a href="#20220228-20220304" class="headerlink" title="20220228-20220304"></a>20220228-20220304</h1><h2 id="本周工作-16"><a href="#本周工作-16" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>python平台完成编程题的优化</li><li>完成论文翻译</li><li>写完教改文档的功能模块和总体设计与实现的部分</li><li>完成在学生-题目关系中存储学生答案</li></ol><h2 id="任务进度-16"><a href="#任务进度-16" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="python教学辅助平台（按优先级从上到下）"><a href="#python教学辅助平台（按优先级从上到下）" class="headerlink" title="python教学辅助平台（按优先级从上到下）"></a>python教学辅助平台（按优先级从上到下）</h3><ol><li><p>学生答案的存储（还需要在py中进行存储）</p></li><li><p>生成报表的功能，单次作业学生得分和单次作业的作业题目情况</p></li><li><p>学生可以看到自己的答题情况</p></li><li><p>学生添加题库的时候希望可以经过教师端的审核再添加</p></li><li><p>学生可以再次提交</p></li><li><p>题目内容可以在教师端首页进行查看</p></li></ol><h2 id="下周任务工作计划-16"><a href="#下周任务工作计划-16" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>调研报告</li><li>毕业论文ppt</li><li>继续修改教改文档</li><li>完成任务进度中1-3</li></ol><h1 id="20220307-20220311"><a href="#20220307-20220311" class="headerlink" title="20220307-20220311"></a>20220307-20220311</h1><h2 id="本周工作-17"><a href="#本周工作-17" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>完成调研报告</li><li>修改完成教改文档</li><li>完成毕业论文ppt</li><li>成功布置第二次作业和测试</li><li>完成生成报表的功能</li></ol><h2 id="任务进度-17"><a href="#任务进度-17" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="python教学辅助平台（按优先级从上到下）-1"><a href="#python教学辅助平台（按优先级从上到下）-1" class="headerlink" title="python教学辅助平台（按优先级从上到下）"></a>python教学辅助平台（按优先级从上到下）</h3><ol><li><p>学生答案的存储（还需要在py中进行存储）</p></li><li><p>生成报表的功能，单次作业学生得分和单次作业的作业题目情况</p></li><li><p>学生可以看到自己的答题情况</p></li><li><p>教师可以查看具体的题目有什么</p></li><li><p>学生添加题库的时候希望可以经过教师端的审核再添加</p></li><li><p>学生可以再次提交</p></li><li><p>题目内容可以在教师端首页进行查看</p></li></ol><h2 id="下周任务工作计划-17"><a href="#下周任务工作计划-17" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>完善毕业论文ppt</li><li>继续修改教改文档</li><li>完成任务进度中3-5</li></ol><h1 id="20220314-20220318"><a href="#20220314-20220318" class="headerlink" title="20220314-20220318"></a>20220314-20220318</h1><h2 id="本周工作-18"><a href="#本周工作-18" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>继续完善毕业论文ppt</li><li>布置第三次作业</li><li>和李阮君对齐在线测试功能</li><li>准备组会</li><li>教学改革文档修改</li></ol><h2 id="任务进度-18"><a href="#任务进度-18" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="python教学辅助平台（按优先级从上到下）-2"><a href="#python教学辅助平台（按优先级从上到下）-2" class="headerlink" title="python教学辅助平台（按优先级从上到下）"></a>python教学辅助平台（按优先级从上到下）</h3><ol><li><p>学生答案的存储（还需要在py中进行存储）</p></li><li><p>生成报表的功能，单次作业学生得分和单次作业的作业题目情况</p></li><li><p>开放在线训练平台</p></li><li><p>学生可以看到自己的答题情况</p></li><li><p>教师可以查看具体的题目有什么</p></li><li><p>学生添加题库的时候希望可以经过教师端的审核再添加</p></li><li><p>学生可以再次提交</p></li><li><p>题目内容可以在教师端首页进行查看</p></li></ol><h2 id="下周任务工作计划-18"><a href="#下周任务工作计划-18" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>完善毕业论文ppt</li><li>组会汇报</li><li>计划发布在线训练功能</li><li>第四次作业</li></ol><h1 id="20220321-20220325"><a href="#20220321-20220325" class="headerlink" title="20220321-20220325"></a>20220321-20220325</h1><h2 id="本周工作-19"><a href="#本周工作-19" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>毕业论文完成第一章引言和第二章的相关知识概述</li><li>布置第四次作业</li><li>完成学生分类管理功能</li><li>发布在线训练功能</li><li>搭建nvme over fabric基本环境，测试fio命令</li></ol><h2 id="任务进度-19"><a href="#任务进度-19" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="python教学辅助平台（按优先级从上到下）-3"><a href="#python教学辅助平台（按优先级从上到下）-3" class="headerlink" title="python教学辅助平台（按优先级从上到下）"></a>python教学辅助平台（按优先级从上到下）</h3><ol><li><p>学生端分类管理</p></li><li><p>学生答案的存储（还需要在py中进行存储）</p></li><li><p>生成报表的功能，单次作业学生得分和单次作业的作业题目情况</p></li><li><p>开放在线训练平台（目前处于此阶段）</p></li><li><p>在线训练和作业情况分开记录</p></li><li><p>教师可以查看作业内容和题库内容</p></li><li><p>学生可以看到自己的答题情况</p></li><li><p>学生添加题库的时候希望可以经过教师端的审核再添加</p></li><li><p>学生可以再次提交</p></li><li><p>题目内容可以在教师端首页进行查看</p></li></ol><h2 id="下周任务工作计划-19"><a href="#下周任务工作计划-19" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>完成毕业论文需求分析文档</li><li>吞吐量跑到100Gbps</li><li>第五次作业</li><li>完成5、6、7</li></ol><h1 id="20220328-20220401"><a href="#20220328-20220401" class="headerlink" title="20220328-20220401"></a>20220328-20220401</h1><h2 id="本周工作-20"><a href="#本周工作-20" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>毕业论文完成第三章需求分析，修改第一章的研究现状（完善表格）</li><li>辅助田荘师兄找到网卡带宽无法跑满的问题。</li><li>完成学生分类功能</li><li>整理数据分析需要收集的信息</li></ol><h2 id="任务进度-20"><a href="#任务进度-20" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="python教学辅助平台（按优先级从上到下）-4"><a href="#python教学辅助平台（按优先级从上到下）-4" class="headerlink" title="python教学辅助平台（按优先级从上到下）"></a>python教学辅助平台（按优先级从上到下）</h3><ol><li><p>学生端分类管理</p></li><li><p>学生答案的存储（还需要在py中进行存储）</p></li><li><p>生成报表的功能，单次作业学生得分和单次作业的作业题目情况</p></li><li><p>开放在线训练平台</p></li><li><p>在线训练和作业情况分开记录<strong>（目前处于此阶段）</strong></p></li><li><p>教师可以查看作业内容和题库内容</p></li><li><p>学生可以看到自己的答题情况</p></li><li><p>学生添加题库的时候希望可以经过教师端的审核再添加</p></li><li><p>学生可以再次提交</p></li><li><p>题目内容可以在教师端首页进行查看</p></li></ol><h2 id="下周任务工作计划-20"><a href="#下周任务工作计划-20" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li><p>完善毕业论文PPT</p></li><li><p>和李泽鹏一起整理nvme的具体流程</p></li><li><p>和李阮君讨论系统接下来的功能</p></li></ol><h1 id="20220404-20220408"><a href="#20220404-20220408" class="headerlink" title="20220404-20220408"></a>20220404-20220408</h1><h2 id="本周工作-21"><a href="#本周工作-21" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>教学系统开放二三章的模拟，记录学生的模拟数据</li><li>找到合适机器让网卡跑满100G</li><li>找到发送端和接收端没有办法互换的问题，找到解决办法：使用rdma_cm的相关命令。</li><li>整合nvme over fabric的具体流程</li></ol><h2 id="任务进度-21"><a href="#任务进度-21" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="python教学辅助平台（按优先级从上到下）-5"><a href="#python教学辅助平台（按优先级从上到下）-5" class="headerlink" title="python教学辅助平台（按优先级从上到下）"></a>python教学辅助平台（按优先级从上到下）</h3><ol><li><p>学生端分类管理</p></li><li><p>学生答案的存储（还需要在py中进行存储）</p></li><li><p>生成报表的功能，单次作业学生得分和单次作业的作业题目情况</p></li><li><p>开放在线训练平台</p></li><li><p>在线训练和作业情况分开记录</p></li><li><p>教师可以查看作业内容和题库内容</p></li><li><p>学生可以看到自己的答题情况<strong>（目前处于此阶段）</strong></p></li><li><p>学生添加题库的时候希望可以经过教师端的审核再添加</p></li><li><p>学生可以再次提交</p></li><li><p>题目内容可以在教师端首页进行查看</p></li></ol><h2 id="下周任务工作计划-21"><a href="#下周任务工作计划-21" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>完成毕业论文PPT</li><li>协助田荘师兄在实验平台跑出问题</li><li>继续熟悉nvme over fabric工作</li></ol><h1 id="20220418-20220422"><a href="#20220418-20220422" class="headerlink" title="20220418-20220422"></a>20220418-20220422</h1><h2 id="本周工作-22"><a href="#本周工作-22" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>布置python第八次作业，遇到一点bug，修改</li><li>修改论文框架</li><li>论文写完一二三章的初稿，还剩第四章evaluation。</li></ol><h2 id="任务进度-22"><a href="#任务进度-22" class="headerlink" title="任务进度"></a>任务进度</h2><h3 id="python教学辅助平台论文框架"><a href="#python教学辅助平台论文框架" class="headerlink" title="python教学辅助平台论文框架"></a>python教学辅助平台论文框架</h3><ol><li>论文框架确定：介绍、相关工作、设计与实现、评估、总结</li><li><strong>从不同的角度找相关工作，然后确定哪一个角度更方便立主线</strong>，当前可能主线及其相关工作调研有：<ul><li>知识图谱为特色的Python课程改革：Python课程的改革相关论文，及其总结</li><li>知识图谱为特色的线上教学改革：对线上教学的主流app进行分析，主要分析知识存储方式</li><li>Python课程为特色的知识图谱应用于教学：对知识图谱应用于教学的相关论文进行分析</li><li>平台综合功能为特色的线上教学改革：对线上教学的主流app进行综合分析，从而确定本平台的各种优势</li><li> 单纯介绍平台：相关工作可以说没有专门的平台针对python教学，或直接不涉及相关工作，类似SPCR那篇论文。</li></ul></li><li>论文的介绍、相关工作都需要依据论文的主线</li><li>设计与实现可以参照毕业论文的设计与实现</li></ol><h2 id="下周任务工作计划-22"><a href="#下周任务工作计划-22" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>周一完成论文初稿</li><li>对初稿进行修改</li></ol><h1 id="20220502-20220506"><a href="#20220502-20220506" class="headerlink" title="20220502-20220506"></a>20220502-20220506</h1><h2 id="本周工作-23"><a href="#本周工作-23" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>完成论文</li><li>和胡师兄讨论修改论文细节</li><li>完成毕业论文初稿</li></ol><h2 id="下周任务工作计划-23"><a href="#下周任务工作计划-23" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>完成毕业论文的修改，进行第一次提交</li><li>完成论文修改</li><li>了解田荘师兄实验进展</li></ol><h1 id="20220509-20220513"><a href="#20220509-20220513" class="headerlink" title="20220509-20220513"></a>20220509-20220513</h1><h2 id="本周工作-24"><a href="#本周工作-24" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>修改毕业论文</li><li>总结调研报告的NVMe部分</li><li>和李泽鹏交流，学习FIO</li></ol><h2 id="下周任务工作计划-24"><a href="#下周任务工作计划-24" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>协助邱师兄在实验环境中完成SSD的四个场景</li><li>提交论文的第一次查重</li><li>了解当前实验的进度，熟悉工作和相关工具。</li></ol><h1 id="20220516-20220520"><a href="#20220516-20220520" class="headerlink" title="20220516-20220520"></a>20220516-20220520</h1><h2 id="本周工作-25"><a href="#本周工作-25" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>提交毕业设计文件</li><li>修改调研报告内NVMe的部分和SSD的实验</li><li>学习FIO的具体使用</li></ol><h2 id="下周任务工作计划-25"><a href="#下周任务工作计划-25" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>修改调研报告内的论文总结，SSD实验总结，SPDK部分</li><li>修改算法设计文档</li><li>毕设答辩</li><li>Python教学平台的总结和规划</li></ol><h1 id="20220523-20220527"><a href="#20220523-20220527" class="headerlink" title="20220523-20220527"></a>20220523-20220527</h1><h2 id="本周工作-26"><a href="#本周工作-26" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>完成毕业设计的ppt和论文</li><li>毕业设计答辩</li><li>和师兄讨论调研报告的内容，确定做实验的细节</li><li>修改调完报告的论文分析</li></ol><h2 id="下周任务工作计划-26"><a href="#下周任务工作计划-26" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>完成调研报告SSD瓶颈分析部分。</li><li>关于iosize，iodepth，numjobs三个参数都需要做出一个iops（横轴）和平均延迟（纵轴）的散点图（每个点对应每一个参数的具体值），在这个图中可以找到这三个参数导致SSD拥塞的临界值。</li><li>取前面的临界值左右各两三个点，画出三个参数的延迟随时间变化的折线图（三个图，每个图五六个折线）。</li><li>顺序读、顺序写、随机读、随机写、顺序混合、随机混合，这六个读写方式的折线图。</li><li>优秀毕业论文申请。</li></ol><h1 id="20220704-20220708"><a href="#20220704-20220708" class="headerlink" title="20220704-20220708"></a>20220704-20220708</h1><h2 id="本周工作-27"><a href="#本周工作-27" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>完成Python课程学生的平时分计算</li><li>掌握Gimbal论文的credit和token算法</li><li>更新ssd拥塞控制中的credit和token算法，还有流程图</li><li>和高中生对接</li></ol><h2 id="下周任务工作计划-27"><a href="#下周任务工作计划-27" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>和陈嘉良邱煜佳师兄初步使用disksim完成对ssd相关问题的模拟</li><li>帮助邱煜佳师兄完善方案</li></ol><h2 id="项目：ssd拥塞感知与控制"><a href="#项目：ssd拥塞感知与控制" class="headerlink" title="项目：ssd拥塞感知与控制"></a>项目：ssd拥塞感知与控制</h2><ul><li>问题：和Gimbal要解决的问题类似，都是解决SSD拥塞的感知和控制，对ssd的状态进行掌握，然后对任务的提交进行调整</li><li>特点（和Gimbal的不同）：</li></ul><p>不仅将延时作为拥塞感知的指标（历史的变化），同时使用了队列作为拥塞感知的指标（能够对当前的ssd的排队情况进行掌握）。能够从历史和现在两个角度共同出发对ssd的拥塞进行感知。</p><p>借鉴了Gimbal使用了credit对IO生成速率进行控制，使用动态阈值对IO提交速率进行控制。对算法进行了更新，同时还增加了两个特色：更加注重了IO提交速率控制和IO生成速率控制之间的联系。</p><ul><li>仿真：第一步先能够结合disksim仿真出来和一般nvme over fabric相同的操作，能够对基本的数据进行掌握和分析。第二步在模拟的基本操作中跑出基本的问题（多个initiators访问同一个target的ssd造成拥塞）。第三步在仿真中实现我们基本的算法，跑不同场景（单双端，IO提交速率和生成速率结合的问题），体现出我们和gimbal的不同。第四步在仿真中优化我们的算法。</li></ul><h1 id="20220711-20220715"><a href="#20220711-20220715" class="headerlink" title="20220711-20220715"></a>20220711-20220715</h1><h2 id="本周工作-28"><a href="#本周工作-28" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>和张汭彬对接，带他熟悉python项目，告诉他大概ppt怎么做</li><li>和师兄修改ssd拥塞控制的方案</li><li>补充ns3的架构图中ssd拥塞控制部分</li><li>学习ns3</li></ol><h2 id="下周任务工作计划-28"><a href="#下周任务工作计划-28" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>和陈嘉良一起使用simpy先对IO提交速度控制的部分进行简单模拟</li><li>理清思路，阅读相关文章，看看如何对IO生成速度进行进一步控制，完善方案</li><li>进一步学习ns3仿真程序，尝试完成自己部分</li></ol><h1 id="20220718-20220722"><a href="#20220718-20220722" class="headerlink" title="20220718-20220722"></a>20220718-20220722</h1><h2 id="本周工作-29"><a href="#本周工作-29" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>完成基于ns3框架的ssd拥塞控制模块的设计</li><li>学习SimPy</li><li>在SimPy程序中添加IO提交速度控制部分，简单能够跑起来了。</li><li>熟悉fio的参数和nvmeoF的细节</li></ol><h2 id="下周任务工作计划-29"><a href="#下周任务工作计划-29" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>构思SimPy模拟的场景，进一步区分读写操作，加入disksim。希望能生成部分数据</li><li>理清思路，阅读相关文章，看看如何对IO生成速度进行进一步控制，完善方案</li><li>学习ns3仿真程序，尝试完成自己部分</li></ol><h1 id="20220725-20220729"><a href="#20220725-20220729" class="headerlink" title="20220725-20220729"></a>20220725-20220729</h1><h2 id="本周工作-30"><a href="#本周工作-30" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>熟悉本地NVMe操作流程，将controller在流程中的作用加到了ns3框架图中</li><li>学习NVMe oF的操作流程，找到了介绍read和write操作的ppt和视频。把流程补充到ns3框架中</li><li>在64位服务器上安装DiskSim，学习了一些gcc和Makefile的相关知识之后，解决了项目无法编译的问题，但在运行的时候出现segmentation fault错误</li><li>安装32位虚拟机和DiskSim</li></ol><h2 id="下周任务工作计划-30"><a href="#下周任务工作计划-30" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>争取解决DiskSim无法在64位机器上运行的问题，如果不行，就在虚拟机进行ssd拥塞控制模块的仿真</li><li>继续熟悉NVMe oF的流程</li><li>Python作业分数修改</li><li>完成KAP的Poster材料</li></ol><h1 id="20220905-20220909"><a href="#20220905-20220909" class="headerlink" title="20220905-20220909"></a>20220905-20220909</h1><h2 id="本周工作-31"><a href="#本周工作-31" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>在64位机器上安装了DiskSim,但发现没有办法运行ssd-model模块，发现主要的问题是由于ubuntu版本太高，于是重新租用了ubuntu14.04（64位）机器，成功安装disksim和ssd-model模块。</li><li>成功进行simpy的项目移植，和嘉良沟通后能够在simpy中调用ssd-model模块。</li><li>和师兄沟通后发现gimal论文中的代码逻辑和源码有区别，正在对simpy代码进行修改。</li></ol><h2 id="下周任务工作计划-31"><a href="#下周任务工作计划-31" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>进行Gimbal算法的仿真，对数据进行统计和分析</li><li>和师兄一起构思算法：结合网络拥塞控制的知识，如何在网络环境下进行credit的分配，以及如何在服务器架构下解决credit的本地和远端分配的平衡问题。</li></ol><h1 id="20220913-20220916"><a href="#20220913-20220916" class="headerlink" title="20220913-20220916"></a>20220913-20220916</h1><h2 id="本周工作-32"><a href="#本周工作-32" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>根据gimbal论文地源码修改本地Simpy代码，能够成功运行，并收集相应数据</li><li>根据数据作图，发现gimbal的算法在Simpy代码中并没有起到作用，当submission queue的长度不为零的时候拥塞控制算法不会起到作用。之后把submission queue的长度设为一，发现也没有起作用。</li><li>对Disksim的工作原理进行简单测试，发现可以同时提交多条trace，只要第一条和最后一条trace的时间差足够执行就可以了。trace越密集，平均trace的执行时间可能越久。即可以代表ssd处于拥塞状态。</li></ol><h2 id="下周任务工作计划-32"><a href="#下周任务工作计划-32" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>从Gimbal的视频中找到测量thresh_max和min的办法，对disksim进行测试</li><li>根据c++重新写gimbal的算法，并跑通收集数据和画图</li><li>思考如何把gimbal对命令进入submission queue的控制延伸到对命令进入disksim的控制</li></ol><h2 id="面对的问题"><a href="#面对的问题" class="headerlink" title="面对的问题"></a>面对的问题</h2><ol><li>Gimbal算法主要解决的是服务延迟（在ssd中的执行时间）还是排队延迟（在submission queue中的排队时间）</li><li>如何测得thresh_max和min</li><li>如果gimbal主要解决的是服务延迟，那么SubmissionQueue偶尔为空是gimbal算法起作用的必要条件</li><li>要让submission queue为空，有两种办法：submission queue可以同时提交多个io请求；精准测得thresh的最大最小值，控制请求提交到submission queue的速度，尽量是减少token的生成。</li></ol><h1 id="20220919-20220923"><a href="#20220919-20220923" class="headerlink" title="20220919-20220923"></a>20220919-20220923</h1><h2 id="本周工作-33"><a href="#本周工作-33" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>重新看Gimbal视频，thresh_min通过记录在磁盘空闲时写一个最小io_size获得。max的测量需要在磁盘最大碎片化之后，记录磁盘用单个最大io达到最大带宽之后的单个io延迟。</li><li>和邱煜佳师兄学习gimbal源码中的IO scheduler代码，了解了大概</li><li>和邱煜佳师兄设计并实现Simpy中的虚拟槽和credit，当命令到达target端后，会先到达拥塞控制模块的deffer_list,然后会触发deffer_list中命令尽可能（<code>虚拟槽有空间</code>）进入虚拟槽，再从虚拟槽经过<code>准入函数</code>进入submission queue中。但是代码现在运行到一半就停止了。</li></ol><h2 id="下周任务工作计划-33"><a href="#下周任务工作计划-33" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>调试加入虚拟槽之后的bug，进行Gimbal算法的仿真，对数据进行统计和分析</li><li>测量thresh_max</li><li>完善场景的架构，进行多种场景的测试。</li></ol><h2 id="面对的问题-1"><a href="#面对的问题-1" class="headerlink" title="面对的问题"></a>面对的问题</h2><ol><li>如何测得thresh_max（disksim中io的执行时间是认为规定的，也就是iops基本确定，那么如何判断带宽达到最高）</li><li>调试代码的bug，让程序能生成全部的trace，并在使用gimbal和不使用gimbal进行对比。如果再有问题及时与老师沟通。</li></ol><h1 id="20220926-20220930"><a href="#20220926-20220930" class="headerlink" title="20220926-20220930"></a>20220926-20220930</h1><h2 id="本周工作-34"><a href="#本周工作-34" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>系统加入虚拟槽和credit机制，能够成功跑通</li><li>对数据进行画图，目前发现比较重要的参数有：thresh_max；thresh_min；target_rate_min；SQ长度；。</li><li>对token方案进行测试，发现当target_rate_min=40K；thresh_min=1.0ms；thresh_max=4.5ms；SQ长度试10的时候token方案会起到作用。画出iops，总延迟和服务延迟的折线图，发现使用token的方案更好一点，单效果不是很明显，还在考虑怎么设置参数</li></ol><h2 id="下周任务工作计划-34"><a href="#下周任务工作计划-34" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>写gimbal算法的C++代码，把disksim加入使用。</li><li>找到合适的参数选择方式，选择合适参数，争取调试出更明显的效果：延迟更低，相同数据量的请求更早结束，iops更大。</li><li>完善场景的架构，进行多种场景的测试。</li></ol><h1 id="20221004-20221007"><a href="#20221004-20221007" class="headerlink" title="20221004-20221007"></a>20221004-20221007</h1><h2 id="本周工作-35"><a href="#本周工作-35" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>在NS3中补全了token和credit的代码，还没有测试。</p></li><li><p>测试disksim中的thresh_max和thresh_min的值分别是0.4ms和1.5ms。</p></li><li><p>对thresh_max；thresh_min；target_rate_min设置不同的值，画图比较l延迟带宽随时间的变化。并分析：</p><p>thresh_min主要影响低利用率状态，</p><p>thresh_min调小，低利用率状态减少，在io延迟较低的时候，token增速相对减少，提交的io减少。</p><p>thresh_min调大，低利用率状态增加，在io延迟较低的时候，token增速相对增加，提交的io变多。</p><p>thresh_max主要影响过载状态，</p><p>thresh_max调小，过载状态增加，在io延迟较高的时候，会较早进入过载状态，提交的io减少。</p><p>thresh_max调大，过载状态减少，在io延迟较高的时候，会较晚进入过载状态，提交的io变多。</p><p>target_rate近似代表的是ssd的预期处理速率，当ssd的负载较高时target_rate需要减小，当ssd的负载较低时target_rate需要适当增加</p><p>target_rate_min调小，ssd过载状态之后可能需要经过比较久的时间才能生成足够的token，提交的io减少。</p><p>target_rate_min调大，生成的token的数量会一直比较多，提交的io增多。</p></li><li><p>SQ长度一般是固定的。当SQ的第一个io处于过载状态的时候，因为调速算法不涉及从SQ中出队到disksim的过程，所以SQ中剩余的io也都会处于过载状态，并且ssd的负载会越来越高。</p><p><code>只有当SQ中的io命令个数是0的时候，token调速机制才会起到作用</code>想让token调速及时，那么就需要让SQ中的io数量一直不多，即进入SQ的io减少，且SSD少处于过载状态，SSD多处于拥塞状态。</p><p>可能理想状态下就是想让SQ的长度越小越好？刚好满足每次提交的命令的个数。</p></li></ol><h2 id="下周任务工作计划-35"><a href="#下周任务工作计划-35" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>调试ns3中的拥塞管理模块，跑出使用token和不使用token的对比数据。</li><li>在ns3中补全credit方案</li><li>写中期材料</li></ol><h1 id="20221017-20221021"><a href="#20221017-20221021" class="headerlink" title="20221017-20221021"></a>20221017-20221021</h1><h2 id="本周工作-36"><a href="#本周工作-36" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>测试ns3代码，发现使用内部合成负载的disksim不能随着代码的调用反映ssd的状态</li><li>disksim可以通过两种方式模拟ssd，一个是内部合成负载，一个是外部提供io命令。内部合成负载时用户提供io命令的分布函数，disksim自动根据概率生成io命令。外部提供io命令是用户给定io命令的大小，类型，执行时间等具体信息，dsiksim再去模拟。外部提供io命令有两种方式，一种是通过trace文件集合io命令，统一输入给disksim，另一种是使用stdin，用户可以在控制台输入io命令。</li><li>对stdin方式进行测试，正向解读源码，如果在用户输入完一条io后disksim就会执行这一条io，然后生成对应的延迟，就符合我们对disksim的调用需求。如果是等用户输入完所有的io命令，再统一执行，统计完成信息并输出，就可能需要修改disksim源码，因为拥塞控制算法是需要动态调整io命令提交时间的。</li><li>根据disksim的输出文件反向寻找io命令完成的具体位置，当前已经找到了存放io完成信息的链表，之后查看该链表的建立过程就应该能找到io命令的完成过程，从而进行调用。</li><li>io命令是由多个事件共同组成的，在disksim中事件会驱动时间，还需要找到disksim事件和延迟的关系。</li></ol><h2 id="下周任务工作计划-36"><a href="#下周任务工作计划-36" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>继续从io完成信息的存放链表回溯，找到该链表的建立和增加过程。</li><li>找到disksim执行io命令的方式(统一执行还是逐一执行)</li><li>将disksim嵌入ns3</li></ol><h1 id="20221024-20221028"><a href="#20221024-20221028" class="headerlink" title="20221024-20221028"></a>20221024-20221028</h1><h2 id="本周工作-37"><a href="#本周工作-37" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>找到disksim的提供的官方调用接口<code>disksim_interface.c</code>，和官方调用接口的例子<code>syssim_driver.c</code>。<br>发现例子中的问题：每次发送请求都是等上一个请求全部完成了才发送下一个请求。当上一个请求完全完成的时候，disksim又回到了空载的状态，所以每个命令之间不会互相影响，输出的延迟都一样。</p><ol><li>每来一个IO先调用<code>disksim_interface_request_arrive()</code>用于生成IO事件，并把该事件插入进event链表中。</li><li>之后在<code>arrive</code>这个函数中调用<code>disksim_simulate_event()</code>来执行event链表(<strong>内部事件按disksim时钟排序</strong>)中的第一个事件，<code>disksim_simulate_event()</code>每处理完一个事件会生成相关的下一个事件并插入进event链表中，然后循环调用，直到当前的disksim时钟时间小于event链表中第一个事件对应的时间(代表此时的仿真时间应该被推进)，退出<code>disksim_interface_request_arrive()</code>。</li><li>然后程序通过回调函数<code>syssim_schedule_callback()</code>将自己的时间设置为event链表中第一个事件的时间，之后调用<code>disksim_interface_internal_event()</code>，把自己的时间传给disksim，推动disksim内部的时钟，该函数也是通过调用<code>disksim_simulate_event()</code>来执行event链表中剩下的事件，如果遇到disksim时钟小于event链表中第一个事件对应的时间的问题，会通过之前的回调函数推动disksim的时钟。</li><li>直至上一个IO命令全部完成（即event链表中不再有事件）会通过回调函数打印出延迟，再进行下一个IO的输入，调用<code>disksim_interface_request_arrive()</code>。</li></ol></li><li><p>对例子进行修改，现在就算上一个IO命令没有完成，请求到来依旧可以调用函数<code>disksim_interface_request_arrive()</code>，通过请求到来的时间推动disksim时钟，推动事件的执行。当命令来的更频繁的时候，ssd会发生拥塞，测出的延迟结果符合预期。</p></li></ol><h2 id="当前问题"><a href="#当前问题" class="headerlink" title="当前问题"></a>当前问题</h2><ol><li><p>每有一个IO要从NVMe SQ中取出来执行，系统会调用<code>disksim_interface_request_arrive()</code>函数，这时候disksim才有可能会返回延迟给NVMe Entrance，从而调整SSD拥塞状态。</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs subunit">当1<span class="hljs-string">-10</span>号IO的时间间隔比较短，就有可能造成第10号IO提交的时候第8号和第9号都没有执行完，第11号IO隔很久才来，有可能会返回8，9，10三个IO的延迟，这三个延迟应该怎么返回给NVMe Entrance。<br>11号IO提交的时候,因为返回的延迟是8，9，10号的，所以NVMe Entrance有可能会判定SSD处于拥塞状态，不过只要11号能及时返回延迟信息，就应该没什么问题。<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>-<span class="hljs-number">10</span>号IO的时间间隔比较长，每一个IO的提交都会返回上一个延迟。<span class="hljs-number">11</span>-<span class="hljs-number">15</span>号IO的时间间隔很短，有可能在<span class="hljs-number">15</span>号提交的时候，<span class="hljs-number">11</span>号的延迟还没有返回，那么此时SSD的状态应该是什么，即当没有延迟返回的时候SSD的状态是否需要发生变化。<br></code></pre></td></tr></table></figure><p><strong>token是否能解决上面的问题？</strong></p></li></ol><h2 id="下周任务工作计划-37"><a href="#下周任务工作计划-37" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>把disksim的接口放入ns3中，主要解决回调函数的问题。</li><li>测出gimbal的数据</li></ol><h1 id="20221031-20221104"><a href="#20221031-20221104" class="headerlink" title="20221031-20221104"></a>20221031-20221104</h1><h2 id="本周工作-38"><a href="#本周工作-38" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>将gimbal从ns3代码中脱离，完成了只有gimbal和disksim的架构，并对其进行测试。发现disksim一直处于过载和拥塞避免状态</li><li>对disksim的性能进行测试，发现同时提交多个命令和分开提交多个命令来说，最后一个命令的完成时间都是一样的。gimbal调整的正是命令提交的时间间隔，所以还需要对disksim继续学习。</li></ol><h2 id="下周任务工作计划-38"><a href="#下周任务工作计划-38" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>假设disksim没有问题，看gimbal是否能正确运行</li><li>继续学习并调试disksim</li></ol><h1 id="20221114-20221118"><a href="#20221114-20221118" class="headerlink" title="20221114-20221118"></a>20221114-20221118</h1><h2 id="本周工作-39"><a href="#本周工作-39" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>初步完成io调度和gimbal算法的架构图以及代码解释。</p></li><li><p>调试gimbal+disksim，现在的disksim已经能够触发垃圾回收机制，相比于以固定时间间隔提交，使用gimbal将间隔动态化之后能够达到吞吐量更高、延迟更低的效果。但是由于disksim垃圾回收机制的触发非常频繁导致延迟逐渐累计并非常大，使gimbal在后期调速起不了很大作用。</p></li><li><p>尝试先向disksim写入数据之后再启用gimbal调度算法。由于disksim能执行的命令个数总共只有四千个，并且这个个数会随着命令提交的间隔发生变化。目前在使用了gimbal之后只能对一千到两千个命令起作用，效果不是很明显，还需要继续调gimbal的参数。</p></li><li><p>协助师兄完善io调度的代码，并调试。</p><p>由于nvme-of write和nvme-of read都会先生成rdma send/receive命令进行控制通路的通信，不同的是小数据的nvme-of write会把数据随着rdma控制通路一起传输，然后生成本地的nvme write操作。nvme-of read和大数据的nvme-of write会在initiator和target端生成rdma数据通路进行数据的传输并生成本地对应的nvme命令。</p><p>每一个nvme-of命令都会占用srq中的wqe，在这个nvme-of命令对应的target端的nvme命令没有被放入submission queue之前，srq中对应的wqe一直不会被释放。</p></li></ol><h2 id="下周任务工作计划-39"><a href="#下周任务工作计划-39" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>完善架构图，将架构图中的控制通路和数据通路都描绘出来</li><li>由于gimbal的参数过多，为了方便查看参数的实时变化，将gimbal中的参数变化画出来，方便确定参数。</li><li>写第二期结束的文档</li><li>协助师兄继续完善并调试io调度算法。</li></ol><h1 id="20221121-20221125"><a href="#20221121-20221125" class="headerlink" title="20221121-20221125"></a>20221121-20221125</h1><h2 id="本周工作-40"><a href="#本周工作-40" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>完善nvme操作部分的架构图，并将内容更新到ns架构图中</li><li>将srq算法部分和nvme部分整合。</li><li>调试gimbal+disksim算法的参数，目前能够达到延迟更小但iops比较低的情况。还需继续调参数使效果达到最大化。</li></ol><h2 id="下周任务工作计划-40"><a href="#下周任务工作计划-40" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>完善第二期文档</li><li>调试gimbal+disksim算法的参数，希望能达到iops更大，延迟更低的效果。</li></ol><h1 id="20221205-20221209"><a href="#20221205-20221209" class="headerlink" title="20221205-20221209"></a>20221205-20221209</h1><h2 id="本周工作-41"><a href="#本周工作-41" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>完成项目中的收尾阶段几个图的修改</li><li>准备组会论文</li><li>协助师兄思考gimbal能够改进的地方。</li><li>简单了解MQsim，没有提供用户级的接入仿真系统的接口，并且没有办法实时返回io的延迟。应该是需要对源码进行解析，才可以在我们的场景中使用。</li></ol><h2 id="下周任务工作计划-41"><a href="#下周任务工作计划-41" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>复习课程，准备考试</li><li>重新熟悉gimbal论文和视频。看看是否有更好的办法能够实时反馈ssd的服务能力，并进行量化。</li></ol><h1 id="20221219-20221223"><a href="#20221219-20221223" class="headerlink" title="20221219-20221223"></a>20221219-20221223</h1><h2 id="本周工作-42"><a href="#本周工作-42" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>养病</p></li><li><p>和师兄对接当前的工作，Gimbal的改进方案。</p><p>调节SSD拥塞的目标是：target端能够实时获得SSD的拥塞状态，从而知道SSD此时的服务能力（容量），并把这些能力公平分给给一个host的app。</p><ul><li><p><strong>判断SSD拥塞状态</strong>：在每一个IO完成的时候，gimbal会根据该IO的延迟判断ssd的拥塞状态。用动态阈值的方法来减小因为IO大小、读写模式不同导致的误差，从而更准确地判断此时ssd的拥塞状态。</p></li><li><p><strong>量化SSD服务能力</strong>：在每次SSD拥塞状态判断结束之后，gimbal会根据SSD此时的拥塞状态调整<code>TargetRate</code>。<code>TargetRate</code>是SSD服务能力的一个量化，每当有一个IO想要提交给SSD的时候，都会线用此时的<code>TargetRate</code>计算出令牌数目，并根据令牌桶中的令牌数目（是SSD剩余服务容量的量化）来确定是否能将此IO命令提交到Submission Queue。</p></li><li><p><strong>公平分配</strong>：通过虚拟槽实现</p></li></ul></li><li><p>当前的问题是：SSD具有并行处理IO命令的特性，也就是说存在在某一时刻SSD内部包含多个IO命令的情况。由于<code>TargetRate</code>只是在每个IO完成之后进行更新，所以在有IO提交的时候更新的服务容量并不是实时的。会导致一定的问题。</p><p>​        比如，现在有5个IO命令进入了SSD，1、2、3号命令不会导致SSD拥塞，4、5号命令会导致SSD拥塞。当SSD完成1、2、3命令之后，gimbal按照SSD处于非拥塞状态调大了<code>TargetRate</code>，认为此时SSD有较高的服务能力。但是4、5命令还没有完成，此时SSD处于拥塞状态，但由于没有命令完成gimbal无法实时感知SSD拥塞的状态。所以再有6、7、8号命令想要进入SSD的时候，gimbal按照较高的TargetRate生成了较大的Token（gimbal认为SSD的剩余服务容量还很多），这样就会加剧SSD的拥塞。</p><p><u><strong>所以gimbal应该将SSD内部正在执行但并未完成的IO考虑进来，作为判定SSD服务能力的条件。</strong></u></p></li></ol><h2 id="下周任务工作计划-42"><a href="#下周任务工作计划-42" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>周一离校返乡</li><li>协助师兄完善gimbal的改进方案。</li></ol><h1 id="20221226-20221230"><a href="#20221226-20221230" class="headerlink" title="20221226-20221230"></a>20221226-20221230</h1><h2 id="本周工作-43"><a href="#本周工作-43" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>准备高性能计算考试</li><li>在代码中实现了CMB的工作模式，可以定义每个SSD的CMB的大小。如果client端发起的是不带数据的nvme over fabric write命令，在host端向client端发起rdma read之前会先判断CMB内的空间是否足够存储相应的data，在rdma read结束之后，host会生成本地的nvme write操作把CMB中的数据存储到SSD中。</li><li>在代码中实现了io命令的切割。即大io会被分成多个小io执行。如果client端发起的是不带数据的nvme over fabric write命令，在host端执行完rdma read即该命令对应的所有数据已经存储到了host之后，host会生成多个nvme write命令(小io)，分批把数据写入到SSD中。当所有小io都完成之后，host会向client发起一个nvme over fabric write命令完成的消息。</li></ol><h2 id="下周任务工作计划-43"><a href="#下周任务工作计划-43" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>完成多对一场景</li><li>分别思考DDR场景和CMB场景下有可能出现的问题，完善ppt和问题</li><li>人工智能、算法、论文写作课的期末论文作业</li></ol><h1 id="20230103-20230106"><a href="#20230103-20230106" class="headerlink" title="20230103-20230106"></a>20230103-20230106</h1><h2 id="本周工作-44"><a href="#本周工作-44" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>实现多个client端对应一个SSD的代码</p><p>在2T1，命令全是nvme-of write的场景中复现了因为CMB空间有限而导致的大IO阻塞小IO的问题。对比两个client都发小IO的情况，两个client分别发大IO和小IO的情况中小IO从nvme-of write转换成rdma read的排队时间更长。</p></li><li><p>在跑CMB场景中，发现了有的时候命令跑不完的原因。</p><p>因为CMB有限，只有当CMB空间足够的时候才会提交命令，然后disksim需要提交命令才可以推动命令完成，命令完成后才会释放CMB中的空间。但是在disksim中未完成的命令大小等于CMB的有限空间的时候，就导致不会有新的命令被提交，然后没有命令提交也就没有命令完成，没有命令完成也就不会释放CMB中的空间给其他命令。因此CMB的使用需要和SSD拥塞控制相配合，让SSD拥塞控制模块控制命令提交进disksim的速率。</p></li><li><p>协助师兄整合CMB中出现的问题，和IO调度相关，主要有两个：由于CMB空间有限导致的大IO阻塞小IO的问题；以及由于SSD的服务速率变化引起的大IO阻塞小IO的问题。</p></li></ol><h2 id="下周任务工作计划-44"><a href="#下周任务工作计划-44" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>针对CMB场景中的问题想一下解决方案。并在代码中进行初步实现，跑一点数据。</li><li>周二有驾照考试，周一模拟。</li><li>完成人工智能、论文写作课的期末论文作业</li></ol><h1 id="2022下半年学期总结"><a href="#2022下半年学期总结" class="headerlink" title="2022下半年学期总结"></a>2022下半年学期总结</h1><h2 id="个人总体工作情况"><a href="#个人总体工作情况" class="headerlink" title="个人总体工作情况"></a>个人总体工作情况</h2><ol><li>对Gimbal有了比较清楚的理解。</li><li>参与华为项目，复现Gimbal、SSD拥塞控制部分。</li></ol><h2 id="个人后续工作目标"><a href="#个人后续工作目标" class="headerlink" title="个人后续工作目标"></a>个人后续工作目标</h2><ol><li>寒假目标：明确华为项目中CMB架构中出现的问题，并通过图像和数据体现问题。</li><li>短期目标：完成华为项目，和师兄一起完成CMB的解决方案。</li><li>长期目标：下学期找到自己研究生的一个研究点，有一个大概的研究方向和问题</li></ol><h2 id="收获、问题和建议"><a href="#收获、问题和建议" class="headerlink" title="收获、问题和建议"></a>收获、问题和建议</h2><ol><li>更多的是和师兄讨论不是特别善于和老师交流，更偏向于写代码的工作。</li><li>每次开会总是听一听，不善于做总结和计划。</li><li>和师兄师弟的磨合还不够，有时工作分工不合理，效率偏低。</li><li>缺少科研主动性，有事需要老师和师兄推动。(python平台)</li><li>科研逻辑性相较于之前好了一些，现在知道先去定义问题。</li><li>建议代码量多、多个人合作的工作可以使用github</li></ol><h1 id="20230206-20230210"><a href="#20230206-20230210" class="headerlink" title="20230206-20230210"></a>20230206-20230210</h1><h2 id="本周工作-45"><a href="#本周工作-45" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>为了反映在大小IO混合情况下CMB有限导致的问题，设置统计指标：每个client对CMB的占用情况，每个client的吞吐量变化情况，每个IO的生命周期，target的吞吐量变化。</p></li><li><p>设计流量和实验场景。首先是在混合流量场景下两个client(分别发送不同种类的IO)进行CMB占用和吞吐量变化的对比。其次是将混合流量场景和单一流量场景进行对比。并且保证发送速率相同。</p></li><li><p>讨论在CMB有限，client发送IO大小存在差异的情况下的问题</p><ol><li>公平性：如果IO到达target端之后，是按照先进先出的顺序占用CMB然后按照先进先出的顺序提交到ssd，那么ssd的服务带宽分配应该会和发送端的发送速率保持一致，就不存在公平性问题。</li><li>SSD利用率：因为CMB有限，所以会存在情况导致CMB的剩余空间可以存放小IO但不可以存放大IO，但是只要CMB不为空，SSD就会一直处于运转状态，就不存在SSD利用率降低的情况。</li><li>头阻问题：当CMB空间不足的时候，先来的大IO会阻塞住后来的小IO，小IO需要等大IO提交到CMB之后才可以进行提交。由此就会导致小IO的等待时间变长，生命周期变长。</li></ol></li></ol><h2 id="下周任务工作计划-45"><a href="#下周任务工作计划-45" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>回顾华为讨论内容，找到华为在CMB场景中需要解决的问题。</li><li>将disksim的部分转化为函数，让IO命令能够主动完成，避免命令跑不完的问题</li></ol><h1 id="20230213-20230217"><a href="#20230213-20230217" class="headerlink" title="20230213-20230217"></a>20230213-20230217</h1><h2 id="本周工作-46"><a href="#本周工作-46" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>重新思考CMB有限带来的问题，目前分为了两类：公平性(还没有定义清楚)和大IO阻塞小IO的问题。</p></li><li><p>统计代码中每个参数的物理意义和效果：</p><ol><li><ol><li><p>submitIO的间隔：每一个IO占用CMB之后，都是通过SubmitIO函数提交到disksim，如果该函数的时间间隔变长：</p></li><li><ol><li>能够防止disksim堵塞的问题。</li><li>CMB会被占用，IO更容易在RDMA CQ中等待，即容易出现大IO阻塞小IO的现象</li><li>更有利于大IO模式的服务。即容易出现混合IO场景的吞吐量大于单小IO场景的吞吐量</li></ol></li><li><p>发送速率：</p></li><li><ol><li>发送速率调大有助于IO在RDMA CQ中等待</li></ol></li><li><p>CMB大小：</p></li><li><ol><li>CMB调小容易造成disksim堵塞</li><li>CMB调大的话IO不容易在RDMA CQ中阻塞</li></ol></li><li><p>triggerRDMA的间隔：当target收到了rdma send命令之后，生成rdma cqe，之后通过triggerRDMA函数占用CMB，生成rdma RD/WR操作。</p></li><li><ol><li>该间隔调大有助于IO在RDMA CQ中等待</li></ol></li></ol></li></ol></li><li><p>根据问题设计场景，目前已经跑出来了大IO阻塞小IO的问题。通过使发送端速度不同跑出来了混合IO场景低于单小IO场景吞吐率的问题。</p></li><li><p>准备跑CMB有限和CMB无限的对比试验，以证明大IO阻塞小IO会导致host吞吐率下降，但目前还没有效果。</p></li></ol><h2 id="下周任务工作计划-46"><a href="#下周任务工作计划-46" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>准备应用统计考试</li><li>重新定义公平性，看在CMB有限的情况下是否还存在各个client的公平性问题。</li><li>重新思考每个参数的含义，跑CMB有限和CMB无限的对比试验。</li></ol><h1 id="20230220-20230224"><a href="#20230220-20230224" class="headerlink" title="20230220-20230224"></a>20230220-20230224</h1><h2 id="本周工作-47"><a href="#本周工作-47" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>准备应用统计的考试。</p></li><li><p>定义大IO阻塞小IO之后出现的SSD服务速率下降的问题。用函数代替disksim的服务时间。实现问题的复现。</p></li><li><p>定义大IO阻塞小IO之后出现的小IO等待时间变长的问题。之前的是对比了相同发送速率但是IO大小不同，实验变量控制不够严谨，需重新构思场景。</p></li><li><p>思考还是否存在公平性问题。</p></li></ol><h2 id="下周任务工作计划-47"><a href="#下周任务工作计划-47" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>把MQSim结合Gimbal，验证gimbal的准确性。</li><li>结合MQSim之后跑一下几个问题</li></ol><h1 id="20230227-20230303"><a href="#20230227-20230303" class="headerlink" title="20230227-20230303"></a>20230227-20230303</h1><h2 id="本周工作-48"><a href="#本周工作-48" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>和陈嘉良一起解决MQSim的运行问题，同时完成回调函数的部分</p></li><li><p>python论文修改格式的工作</p></li><li><p>总结python系统接下来需要解决的问题。整理之前的代码和数据库</p></li></ol><h2 id="下周任务工作计划-48"><a href="#下周任务工作计划-48" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>把MQSim结合Gimbal，验证gimbal的准确性。</li><li>python平台在14号机和阿里云都跑一下，看看哪种方案好一点</li><li>整理python平台当前的整体情况和遇到的问题(主要从开发的角度)</li></ol><h1 id="20230306-20230310"><a href="#20230306-20230310" class="headerlink" title="20230306-20230310"></a>20230306-20230310</h1><h2 id="本周工作-49"><a href="#本周工作-49" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>python平台导入这个学期的学生信息，更新python平台到云服务器和实验室的机器</p></li><li><p>把MQSim结合Gimbal，验证gimbal的准确性。发现在数据较多的时候仍没有效果。</p></li><li><p>探索当前MQSim盘的特征：</p><ol><li>同等大小的写IO的延迟要比读IO的延迟低：因为写操作有可能是随机的但是读操作通常是连续的。NVMe SSD通常也有一些高效的缓存技术</li><li>读IO的延迟基本不会随着IO提交时间间隔的变化而变化</li><li>读IO要比写IO的IOPS更高</li><li>在执行写IO命令的时候，500个大小是128KB的IO比5000个大小是128KB的IO更容易体现出<strong>IO提交间隔适当拉大，ssd的吞吐量更高</strong>的特征</li></ol></li></ol><h2 id="下周任务工作计划-49"><a href="#下周任务工作计划-49" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>优化python作业平台，题目提交和成绩计算的代码</li><li>整理ns3项目跑程序的脚本</li><li>调试MQSim+gimbal的效果</li></ol><h1 id="20230313-20230317"><a href="#20230313-20230317" class="headerlink" title="20230313-20230317"></a>20230313-20230317</h1><h2 id="本周工作-50"><a href="#本周工作-50" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>修改python平台代码，导入python第一次作业。和杨嘉睿师弟讨论平台后续发展。</p></li><li><p>完善在mqsim场景下Gimbal的两个问题。</p></li><li><p>整理ns3项目的脚本，目前gimbal的相关参数已经能用脚本实现更改，还差srq的。</p></li></ol><h2 id="下周任务工作计划-50"><a href="#下周任务工作计划-50" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>优化python作业平台，布置第二次作业</li><li>继续整理ns3项目跑程序的脚本</li><li>调试MQSim+gimbal的效果</li></ol><h1 id="20230320-20230324"><a href="#20230320-20230324" class="headerlink" title="20230320-20230324"></a>20230320-20230324</h1><h2 id="本周工作-51"><a href="#本周工作-51" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>优化Python平台，布置第二次作业</li><li>整理华为项目修改参数的脚本，目前已经实现一对一场景内的参数整体修改了。准备和田荘师兄沟通一下接入多对一和可指定地址的项目中。</li><li>调试MQSim+Gimbal场景，跑出来了吞吐量差不多，延迟下降的效果。感觉应该增加盘的理解，当SSD由于拥塞导致吞吐量下降的时候，gimbal能够起到更好的作用。</li></ol><h2 id="下周任务工作计划-51"><a href="#下周任务工作计划-51" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>测试MQSim，找到如何设定盘的大小，什么参数会影响盘的吞吐量，以及如何触发盘的垃圾清理机制</li><li>和田荘师兄沟通，完善脚本</li><li>调试MQSim+gimbal的效果</li></ol><h1 id="20230327-20230331"><a href="#20230327-20230331" class="headerlink" title="20230327-20230331"></a>20230327-20230331</h1><h2 id="本周工作-52"><a href="#本周工作-52" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>测试MQSim中影响盘大小的参数，并测量他们对盘吞吐量的影响</li><li>和田荘师兄沟通，将指定地址的代码合并，完成可调节所有参数的脚本</li><li>初步调试出来了Gimbal的效果，目前还存在的问题就是每一个IO延迟较高，SSD的吞吐量整体较低。</li></ol><h2 id="下周任务工作计划-52"><a href="#下周任务工作计划-52" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>找到合适的MQSim配置，使ssd出现拥塞状态的时候，吞吐量是从最高逐渐降低。延迟处于比较低的状态，能够被gimbal调节。</li></ol><h1 id="20230410-20230415"><a href="#20230410-20230415" class="headerlink" title="20230410-20230415"></a>20230410-20230415</h1><h2 id="本周工作-53"><a href="#本周工作-53" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>修改当前ns3中MQSim使用的代码，将事件的注册放到了上一个I/O提交之后。和MQSim本身中具体的区别就在于BREAK的地方</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\周报汇总\image-20230417000658497.png" alt="image-20230417000658497"></p></li><li><p>控制住MQsim中waiting queue中的I/O个数，五万条I/O能够跑两万多个，触发了400多次GC。相比于之前的一万条命令跑九千多个之后触发10次GC效果较好。</p><ul><li><p>提出假设：在触发GC的时候如果waiting queue和SQ中有较多的I/O，容易使I/O命令不被执行完</p></li><li><p>解决方案：如果使用Gimbal控制住提交到waiting queue中的I/O个数，应该可以同时实现完成所有I/O并且提升SSD吞吐量的效果。但是不使用Gimbal的场景只能在MQsim的原程序中实现。</p></li></ul></li><li><p>发现MQsim可以不依靠外部的I/O输入来推动自己的时钟进行。如果Waiting queue只是MQsim中存放数据的一个队列，其中I/O的个数不会影响SSD的性能，那么可以限制Waiting queue的数量为一，并且通过MQSim中自己推动时钟的机制保证程序不会死锁。</p></li></ol><h2 id="下周任务工作计划-53"><a href="#下周任务工作计划-53" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><p>解决当前问题的思路：</p><ol><li>使用Gimbal的ns3程序和不使用Gimbal的MQsim进行对比。应该可以出现使用Gimbal之后吞吐量提升，延迟下降的效果。</li><li>不使用MQSim中的Waiting Queue，依旧使用现在的架构，在ns3调用Start_Simulation的时候判断SQ的长度，如果满了则不提交。在MQSim完成I/O之后需要对比MQsim的时钟和ns3的时钟，具体思路还需完善。</li><li>不使用MQSim中的Waiting Queue，不使用现在的架构，通过MQSim的事件注册机制，MQsim的时间都是通过事件的注册推动的，在每次事件注册的时候实现和ns3的时钟同步，具体思路还需完善。</li></ol><h1 id="20230504-20230506"><a href="#20230504-20230506" class="headerlink" title="20230504-20230506"></a>20230504-20230506</h1><h2 id="本周工作-54"><a href="#本周工作-54" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>协助师兄做ppt。</li></ol><h2 id="下周任务工作计划-54"><a href="#下周任务工作计划-54" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>在ppt中完善对gimbal算法的描述，用公式表达出来。方便对问题进行定义</li><li>在ppt中线画模拟图，设想对ssd特性探索的结果</li><li>用MQSim仿真，体现SSD特性</li><li>把gimbal和MQSIM结合</li></ol><h1 id="20230522-20230526"><a href="#20230522-20230526" class="headerlink" title="20230522-20230526"></a>20230522-20230526</h1><h2 id="本周工作-55"><a href="#本周工作-55" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>将gimbal算法加入进MQSim中。</p></li><li><p>准备组会论文《<strong>NVMeVirt: A Versatile Software-defined Virtual NVMe Device</strong>》</p></li><li><p>整理PPT大概内容：</p><ol><li><p>Background and Related Work</p><p>先写NVMe协议的具体内容、命令执行的流程。再介绍NVMe SSD、它的特点、触发GC的条件、GC的流程。最后介绍Gimbal，Gimbal论文的目标是什么、Gimbal的架构、对Gimbal论文进行总结优点和可能存在的缺点。</p></li><li><p>Motivation</p><p>先介绍SSD的特性：SSD的状态和负载会影响每个I/O的延迟和SSD的带宽，通过图表示。然后通过画图介绍Gimbal的效果，发现Gimbal仍然有需要提升的空间。再通过对Gimbal变量target_rate和token的变化追踪发现target_rate出现了问题。结合NVMe协议理论分析Gimbal有可能在哪几个地方出现了问题。然后通过画图追踪NVMe协议中SQ内IO个数的变化过程，发现可能是SQ导致的迟滞问题。最后通过控制SQ长度＋Gimbal证明SQ的长度确实会导致迟滞问题。</p></li><li><p>Design</p><p>先介绍Basic Idea，对整个架构继续宁画图介绍。然后介绍算法细节，如何控制outstanding I/O。</p></li><li><p>Evaluation</p><p>首先介绍实验环境，再介绍延迟的提升，再介绍带宽的提升</p></li><li><p>Conclusion</p></li></ol></li></ol><h2 id="下周任务工作计划-55"><a href="#下周任务工作计划-55" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>准备组会</li><li>细节PPT内容，开始做实验</li></ol><h1 id="20230529-20230602"><a href="#20230529-20230602" class="headerlink" title="20230529-20230602"></a>20230529-20230602</h1><h2 id="本周工作-56"><a href="#本周工作-56" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>准备组会论文《<strong>NVMeVirt: A Versatile Software-defined Virtual NVMe Device</strong>》</p></li><li><p>整理PPT motivation中描述TargetRate滞后问题的实验</p><p>在之后延迟上升之后，targetRate也降到了cpl_rate，但是由于SQ中本身有I/O，所以存在滞后性。</p></li></ol><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\周报汇总\image-20230604235608459.png" alt="image-20230604235608459"></p><h2 id="下周任务工作计划-56"><a href="#下周任务工作计划-56" class="headerlink" title="下周任务工作计划"></a>下周任务工作计划</h2><ol><li>准备组会</li><li>继续做实验。</li></ol><h1 id="20230703-20230707"><a href="#20230703-20230707" class="headerlink" title="20230703-20230707"></a>20230703-20230707</h1><h2 id="本周工作-57"><a href="#本周工作-57" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>准备教学大纲</p></li><li><p>分析读写混合场景。</p></li></ol><h2 id="工作进度"><a href="#工作进度" class="headerlink" title="工作进度"></a>工作进度</h2><p>目前发现的两个问题分别是减速滞后和加速慢。且都是在没有垃圾回收的情况下。</p><h3 id="减速滞后"><a href="#减速滞后" class="headerlink" title="减速滞后"></a>减速滞后</h3><p><img src="../images/%E5%91%A8%E6%8A%A5%E6%B1%87%E6%80%BB/image-20230709150109380.png" alt="image-20230709150109380"></p><ul><li>现象：当从大IO转变为小IO的时候，SSD的吞吐量下降了但是TargetRate并没有下降。outstandingIO增加</li><li>影响：加深SSD的拥塞，导致之后IO的延迟上升。</li><li>原因：更新cpl_rate的阈值很高，小IO没有办法很快累积到这个阈值的值。所以即使SSD处于了过载状态TargetRate的值依旧很大。<strong>这个现象只存在于大IO转变为小IO的情况</strong></li><li>解决思路：<ol><li>将cpl_rate更新的阈值调小</li><li>更改cpl_rate的更新方式，采用更精准和更灵活的cpl_rate更新方式</li></ol></li></ul><h3 id="加速慢"><a href="#加速慢" class="headerlink" title="加速慢"></a>加速慢</h3><p><img src="../images/%E5%91%A8%E6%8A%A5%E6%B1%87%E6%80%BB/image-20230709152945674.png" alt="image-20230709152945674"></p><ul><li>现象：当注入流的速率从小变大的时候，TargetRate增速很慢，SSD的吞吐量也就很慢。</li><li>影响：SSD会丢吞吐率。</li><li>原因：当IO的延迟高于thresh_min，小于thresh_cur的时候，SSD会被gimbal识别为拥塞避免状态，TargetRate增加一个IO大小。加速太慢。<ul><li>低利用率状态识别的不合理(thresh_min设置的不合理)：thresh_min按论文指导设置为单个4KB读IO的延迟。但是通过降低每个IO之间的间隔增加发送速率，当SSD吞吐量最大，每个IO延迟最低的时候，不同大小的IO会有不同的延迟。所以如果按照指导值就会有即使没有被识别为低利用率状态但是SSD的吞吐量还是很低的情况。</li><li>拥塞避免状态TargetRate增速过慢。每次TargetRate增加一个IOSize，这个值太小了。</li></ul></li><li>解决思路：<ul><li>优化状态识别的算法</li><li>优化TargetRate的增速算法</li></ul></li></ul><h1 id="20230710-20230714"><a href="#20230710-20230714" class="headerlink" title="20230710-20230714"></a>20230710-20230714</h1><h2 id="本周工作-58"><a href="#本周工作-58" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>Python考试判卷</li><li>补充论文background中和gimbal相关的部分</li><li>和师兄讨论初步的方案</li><li>发现在读写转换的场景中target_rate的滞后调节不是很明显</li></ol><h2 id="下周工作计划"><a href="#下周工作计划" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><ol><li>继续写论文</li><li>完善方案，补充实验</li></ol><h1 id="20230904-20230908"><a href="#20230904-20230908" class="headerlink" title="20230904-20230908"></a>20230904-20230908</h1><h2 id="本周工作-59"><a href="#本周工作-59" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>Python考试B卷</li><li>更新完PSCC论文第4章设计部分。论文剩下第五章实验结果分析和参考文献。</li><li>整理Understanding Host Interconnect Congestion论文细节。文章主要研究的是：从NIC到CPU/DRAM的速率小于网络端到NIC的速率。导致了NIC中缓冲区被填满，出现丢包和包延迟增大的问题。</li></ol><h2 id="下周工作计划-1"><a href="#下周工作计划-1" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><ol><li>完成PSCC论文参考文献部分，协助师兄修改论文。</li><li>整理RS的PPT和论文。找到一个能尽快上手的地方。</li><li>整理完Understanding Host Interconnect Congestion论文细节</li></ol><h1 id="20230918-20230922"><a href="#20230918-20230922" class="headerlink" title="20230918-20230922"></a>20230918-20230922</h1><h2 id="本周工作-60"><a href="#本周工作-60" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>读<strong>Towards User-Defined SLA in Cloud Flash Storage</strong>这篇文章</li><li>读RS的研究生毕业论文</li><li>调查分布式数据库相关内容。</li></ol><h2 id="工作内容"><a href="#工作内容" class="headerlink" title="工作内容"></a>工作内容</h2><p>整理当前的三个方向(一个是RS，两个是舒然老师提到的)</p><ol><li><p>RS方向</p><p>RS主要由两部分组成：分布式调节 <em>TOS</em> 模块，接收端驱动发送机制。</p><p>TOS可以看作是每个服务器的服务阈值，由于服务器性能不断变化，所以TOS值需要设置为动态的。</p><p>通过服务器端返回的TOS和OSK比较大小来判断是否将键值操作调度给服务器。注意：<strong>这对于客户端来说是一个被动的过程</strong>。如果该服务器还能服务，就在客户端的公共队列中寻找对应的键值操作调度给服务器。所以这相当于是基于接收端服务器键值响应的调度。</p><ul><li>高并发突发流场景下，如果客户端时主动地选择服务器，热点服务器的操作会被集中调度给下一个服务器，所以热点转移了，并没有被解决。而RS中客户端是根据服务器的反馈信息被动发送键值操作，能解决这个问题。</li></ul><p>ceph的github里面有结合nvme-of使用的版本。</p><p>如果要用cassandra，还需要自己配置和修改cassandra的代码，实现nvme-of的效果。</p></li><li><p>SLA方向</p><p>本文提供了Regulator，用户自定义SLA，云开发商据此提供服务。Regulator将SLA转换为了SLA曲线(能反映吞吐量和延迟的需求)。并将不同用户的SLA曲线组合，提高flash利用率，同时保证用户的SLA。</p></li><li><p>流混合方向</p><p>不同类型的I/O流混合能不能达到更好的效果。比如说400MBps的带宽，如何分给不同类型的I/O(随机/顺序 读/写)能够达到更好地效果(加起来的带宽超过400MBps)。</p></li></ol><h2 id="下周工作计划-2"><a href="#下周工作计划-2" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><ol><li>重新思考RS的问题定义</li><li>再理解SLA这篇文章</li></ol><h1 id="20231009-20231013"><a href="#20231009-20231013" class="headerlink" title="20231009-20231013"></a>20231009-20231013</h1><h2 id="本周工作-61"><a href="#本周工作-61" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>调研分布式存储工作，目前的优化大多数都是数据存储的优化，关于数据读取的副本选择优化不多</li><li>调研ceph工作<ol><li>ceph能够通过Crimson结合SPDK实现NVMe-oF的开发</li><li>ceph目前的读操作都是从主OSD进行的，当前开发了Read balance确保每个设备获得公平的主 OSD 份额</li><li>ceph的每个服务器使用BlueStore作为存储后端，通过RocksDB管理元数据</li></ol></li></ol><h2 id="下周工作计划-3"><a href="#下周工作计划-3" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><ol><li>确定可以着手的题目<ol><li>在分布式存储系统(ceph等)中结合nvme-oF做副本选择算法(还需要调研分布式存储系统如何结合副本进行读操作的，是否和键值存储中一样，可能需要看ceph源码)</li><li>在分布式存储系统中是否存在多个客户端的公平性问题。如果结合了nvme-oF，那么nvme-oF中的公平性问题和分布式存储系统中的公平i性问题是否是同一个</li></ol></li></ol><h1 id="20231016-20231020"><a href="#20231016-20231020" class="headerlink" title="20231016-20231020"></a>20231016-20231020</h1><h2 id="本周工作-62"><a href="#本周工作-62" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>调研分布式存储和分布式键值存储工作，当前的问题有</p><ol><li>分布式存储系统(例如ceph)集成了nvme-oF的操作，但做的都是系统相关的写同步和存储分配的问题。做读操作副本选择的问题较少。<strong>预测源码应该没有对读操作进行解耦，实现副本选择算法实际操作可能会比较困难</strong></li><li>分布式键值存储数据库(Cassandra)有对副本选择算法的集成，但是并没有结合nvme-oF。</li></ol></li><li><p>LEED论文是一个分布式键值存储数据库，基于SPDK实现，集成了nvme-oF操作。主要解决的是SmartNIC的特性问题，还没有仔细看是否涉及副本选择算法。</p></li><li><p>调研nvme SSD的公平性问题</p><ol><li>部分论文是对Linux内核中的I/O调度器进行优化</li><li>部分论文是优化的块设备驱动</li></ol></li></ol><h2 id="下周工作计划-4"><a href="#下周工作计划-4" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><ol><li>总结NVMe SSD的公平性问题，总结Linux文件系统的框架和分布式框架以及nvme-oF框架，每个论文的方法都是如何部署的，部署在哪一层。</li><li>读LEED论文</li></ol><h1 id="20231023-20231027"><a href="#20231023-20231027" class="headerlink" title="20231023-20231027"></a>20231023-20231027</h1><h2 id="本周工作-63"><a href="#本周工作-63" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>调研nvme SSD的公平性问题，主要有三个</p><ol><li>读写公平。写操作延迟高，会影响读操作</li><li>租户之间的公平。根据租户的权重分配带宽</li><li>垃圾回收的公平。垃圾回收发生的时候，如何在租户之间分配SSD性能</li></ol></li><li><p>调研SSD方法部署</p><ol><li>Linux内核的I/O调度器中</li><li>主机端的存储设备驱动中</li><li>用户端的软件设计</li></ol></li><li><p>初步熟悉Linux内核存储架构</p></li></ol><h2 id="下周工作计划-5"><a href="#下周工作计划-5" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><ol><li>总结公平性文章。当前的公平性问题大多是只是涉及到一台机器的场景。</li><li>找到可以入手的公平性问题。感觉当前结合nvme-oF的设计很少，</li></ol><h1 id="20231030-20231103"><a href="#20231030-20231103" class="headerlink" title="20231030-20231103"></a>20231030-20231103</h1><h2 id="本周工作-64"><a href="#本周工作-64" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>调研公平性问题并汇报</li></ol><h2 id="下周工作计划-6"><a href="#下周工作计划-6" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><ol><li>总结R2B，LPNS，和SLA三篇租户隔离，提供用户性能保障的文章</li><li>调研目前研究关于多租户性能保障的研究：IOPS保障，延迟保障</li></ol><h1 id="20231106-20231110"><a href="#20231106-20231110" class="headerlink" title="20231106-20231110"></a>20231106-20231110</h1><h2 id="本周工作-65"><a href="#本周工作-65" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>调研性能保障的四篇文章：LPNS、R2B、UserSLA、Justitia</p></li><li><p>对如何提供租户的性能保障有初步了解</p><ol><li>根据租户不同的需求定义SLA</li><li>根据不同需求的SLA定义I/O类型</li><li>对不同类型的I/O提供性能保障</li></ol></li><li><p>当前初步想法</p><ol><li>根据用户不同的延迟SLA需求提供不同优先级的I/O</li><li>基于spdk访问SSD的路径，在用户层进行I/O优先级调度。</li></ol></li></ol><h2 id="下周工作计划-7"><a href="#下周工作计划-7" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><ol><li>调研Aequitas这篇文章，其中关于优先级升降的方法或许能借鉴</li><li>总结每篇文章是如何定义SLA的，用户需要输入的参数是什么，文章是如何对不同需求的I/O进行分类的</li><li>完善ppt，介绍每篇文章，形成可汇报内容</li></ol><h1 id="20231113-20231117"><a href="#20231113-20231117" class="headerlink" title="20231113-20231117"></a>20231113-20231117</h1><h2 id="本周工作-66"><a href="#本周工作-66" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p><strong>当前的motivation</strong>：由于当前云提供商分配SSD方式的限制，往往会根据用户的SLA过多配置SSD资源，造成资源的浪费。当前在一个SSD上进行租户隔离的方法只涉及一个方面的SLA（延迟或者带宽），如何在用户即提出延迟SLA和吞吐量SLA的时候继续宁性能隔离。</p></li><li><p><strong>用到的方法</strong>：</p><ol><li>结合租户的带宽SLA和延迟SLA，**<u>初步</u>**判断该租户能否与其他租户一起共享SSD</li><li>共享SSD之后，使用探测的方式或者直接服务，来判断该SSD是否能服务所有的租户。</li><li>根据不同用户的SLA设置优先级，使用调度算法，实现租户隔离，并根据租户移除算法(可能方案：当一个租户经常处于某种特定优先级的时候，就证明SSD服务能力不足了)，选择合适的租户移动到别的SSD，或者扩大该SSD容量</li></ol></li><li><p>目前还存在的问题</p><ol><li>租户是如何定义带宽SLA和延迟SLA的</li><li>如何初步判断该租户能够共享SSD</li><li>是否要区分读写操作的不同以及是否结合SSD中写操作很容易影响读操作的特性</li><li>如何结合SSD垃圾回收的性能</li></ol></li></ol><h2 id="下周工作计划-8"><a href="#下周工作计划-8" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><ol><li>准备组会</li><li>准备开题ppt</li></ol><h1 id="20231127-20231201"><a href="#20231127-20231201" class="headerlink" title="20231127-20231201"></a>20231127-20231201</h1><h2 id="本周工作-67"><a href="#本周工作-67" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>看D2FQ和Aequitas论文方法</p><ol><li><p>D2FQ是一种利用NVMe加权轮询(WRR)仲裁的公平排队I/O调度程序。</p><p>用虚拟时间来调整每个租户的优先级，更偏重租户之间的加权公平</p></li><li><p>Aequitas一个发送方驱动的准入控制方案，通过新的QoS降级机制并使用WFQ来保证rpc级别的网络延迟slo</p><p>在RPC级别利用租户的延迟反馈信息，根据租户的SLO进行动态优先级调度</p></li></ol></li><li><p>整理ppt中的问题定义部分</p><ol><li>用数学符号表示问题</li><li>重新画架构图，完善输入输出</li></ol></li></ol><h2 id="下周工作计划-9"><a href="#下周工作计划-9" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><ol><li>继续完善ppt</li><li>思考问题定义中还有哪些挑战</li><li>思考我们的优先级调度方法能否结合D2FQ或者Aequitas的思想</li></ol><h1 id="20231204-20231208"><a href="#20231204-20231208" class="headerlink" title="20231204-20231208"></a>20231204-20231208</h1><h2 id="本周工作-68"><a href="#本周工作-68" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>整理开题PPT</p><ol><li>大概整理框架，构思了初步的方案和设计</li><li>目前还差代码的具体框架</li></ol></li><li><p>12月19日早晨8:30在信息楼416 集中开题答辩</p><ol><li>排序第三，开题组长鲁鸣鸣老师，副组长覃立波老师和郁松老师</li></ol></li><li><p>12月15日之前在系统提交开题报告</p></li></ol><h2 id="下周工作计划-10"><a href="#下周工作计划-10" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><ol><li>完善ppt中的代码架构</li><li>看看网络演算的部分能不能利用</li><li>写开题报告</li></ol><h1 id="20231211-20231215"><a href="#20231211-20231215" class="headerlink" title="20231211-20231215"></a>20231211-20231215</h1><h2 id="本周工作-69"><a href="#本周工作-69" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>完成开题PPT<ol><li>完善性能保障的方案，将延迟和带宽分开处理。</li></ol></li><li>完成开题报告</li></ol><h2 id="下周工作计划-11"><a href="#下周工作计划-11" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><ol><li>开题汇报</li><li>完善资源分配中如何选择合适的租户进行资源再分配的方案</li><li>开始实验</li></ol><h1 id="20231218-20231222"><a href="#20231218-20231222" class="headerlink" title="20231218-20231222"></a>20231218-20231222</h1><h2 id="本周工作-70"><a href="#本周工作-70" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>开题答辩</li><li>完成开题报告</li><li>主要思考性能保障的思路<ol><li>同时满足带宽SLO和延迟SLO：先满足延迟SLO，再逐渐满足带宽SLO</li><li>通过判断在一段时间内的延迟SLO和带宽SLO的满足情况来对租户的存储资源进行粗粒度的反馈调节。</li><li>通过集中减少一个租户的存储资源(不满足SLO)来满足更多租户的SLO</li></ol></li></ol><h2 id="下周工作计划-12"><a href="#下周工作计划-12" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><ol><li>开始实验或者仿真(但是MQSim又不能真正的模拟盘的性能)，在实验中验证方案。</li><li>思考如何选择合适的租户减少他的存储资源</li></ol><h1 id="20231225-20231229"><a href="#20231225-20231229" class="headerlink" title="20231225-20231229"></a>20231225-20231229</h1><h2 id="本周工作-71"><a href="#本周工作-71" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>陪家里人在长沙逛了一下</p></li><li><p>结合实例描述问题</p><ol><li>性能保障的问题1：不考虑SLO时，有限的资源会按照到达速率分配给租户，随着租户的增多，每个租户的性能都没有办法得到保障</li><li>性能保障的问题2：延迟敏感型租户和带宽敏感型租户共享SSD的时候，会出现延迟敏感型租户的延迟SLO无法满足的情况</li><li>资源分配的问题：云厂商给每一个租户配置一个盘的方法会造成存储资源浪费。Regulator静态配置的方法无法很好适应租户请求和SSD性能发生的变化</li></ol></li><li><p>性能保障的方案思路</p><ol><li>先满足延迟SLO，再满足带宽SLO</li><li>通过调整并发IO的个数平衡租户的服务延迟和SSD吞吐量</li><li>通过调整租户的优先级来给不同租户分配SSD带宽同时保障租户的排队延迟</li><li>思考能否利用网络演算描述清楚延迟SLO和服务延迟、排队延迟、租户优先级的关系</li></ol></li></ol><h2 id="下周工作计划-13"><a href="#下周工作计划-13" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><ol><li><p>开始仿真，在仿真中体现问题和验证方案。</p></li><li><p>结合问题完善方案的细节</p></li></ol><h1 id="20240102-20240105"><a href="#20240102-20240105" class="headerlink" title="20240102-20240105"></a>20240102-20240105</h1><h2 id="本周工作-72"><a href="#本周工作-72" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>性能保障的motivation：延迟敏感型租户(延迟SLO更严格，带宽SLO不严格)和带宽敏感型租户(延迟SLO不严格，带宽SLO严格)共享SSD的时候，会出现延迟敏感型租户的延迟SLO无法满足的情况。<ol><li>当前遇到的问题是理想状态无法确定。简单的问题场景，理想状态很容易达到，方案很简单。复杂的问题场景，理想状态难确定，满足延迟SLO就无法满足带宽SLO。</li></ol></li><li>可以用网络演算的方式指导方案设计中的参数变化<ol><li>网络演算主要用于计算排队延迟，服务曲线和到达曲线的水平距离，就是该请求的排队延迟。</li><li>每个队列都有自己的服务曲线和到达曲线。服务曲线斜率之和等于SSD的处理速率(和SSD的请求并发程度相关，所以也决定服务延迟)。</li><li>每个队列按照队列的权重分配SSD处理速率，得到自己队列的服务曲线。</li><li>根据队列中的租户计算该队列的到达曲线(这里有一个问题：是每个租户一个到达曲线还是一个队列一个到达曲线)</li><li>根据服务曲线和到达曲线可以预测每个租户的请求排队延迟。期望是让该值加服务延迟满足每个租户的延迟SLO</li></ol></li></ol><h2 id="下周工作计划-14"><a href="#下周工作计划-14" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><ol><li>整理在延迟敏感型租户和带宽敏感型租户共享SSD情境下，理想分配存储资源遇到的问题和解决方法。</li><li>结合问题完善方案的细节</li></ol><h1 id="20240108-20240112"><a href="#20240108-20240112" class="headerlink" title="20240108-20240112"></a>20240108-20240112</h1><h2 id="本周工作-73"><a href="#本周工作-73" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>完善方案和例子</p><ol><li>使用NVMe中WRR机制提供的队列(H、M、L)进行租户的调度</li><li>先根据租户的带宽SLO来选择合适的队列：带宽SLO更高的租户进入H队列，带宽SLO低的租户进入M队列。L队列服务不需要满足SLO的租户</li><li>根据租户的延迟SLO满足情况来调整所在队列的权重：当某一个队列中所有租户的延迟SLO和带宽SLO都被满足，降低该队列的权重。如果该租户的延迟SLO没有被满足，增加权重。如果存在租户的带宽SLO没有满足但是延迟SLO满足了，权重不变。<br>未解决问题：如果一个队列中有多个租户，多个租户之间的SLO满足情况出现了冲突(有的需要权重增加，有的需要权重降低)，该队列的权重如何变化？是否要给租户换队列。</li><li>在何时以及通过什么样的方式选择合适的租户进入L队列<ol><li>对延迟SLO严格的租户分配的带宽要满足该租户的到达速率，对带宽SLO严格的租户分配的带宽需要满足该租户的带宽SLO。</li><li>何时：当延迟SLO严格的租户的到达速率之和 加 带宽SLO严格的租户的带宽SLO之和大于SSD能提供的带宽的时候，就要选择合适的租户进入L队列了</li></ol></li></ol></li><li><p>总结该研究内容和Aequitas以及D2FQ的关系</p><ol><li><p>D2FQ</p><ol><li>D2FQ在一段时间内通过给租户分配不同权重的队列，实现租户之间的吞吐量权重公平。并通过改变队列的权重在公平和低权重队列的尾延迟之间实现权衡。(为什么不给租户固定队列，然后只通过改变队列的权重实现公平呢)</li><li>我们的目标是实现SLO的公平。在存储资源足够的情况下固定了租户的权重，通过更改每个队列的权重实现租户的SLO。(如果没有满足带宽SLO，排队延迟会增加，队列的权重会增加。)</li></ol></li><li><p>Aeuqitas</p><ol><li>Aequitas在网络资源不够用的时候通过给RPC降级来实现在有限的网络资源中最大化满足RPC的延迟SLO。每个QoS类(队列)维护了一个准入概率，当一个RPC初始化的时候，需要通过它对应的QoS类的准入概率来判断该RPC是进入该队列还是直接降级。如果该队列中完成的RPC满足了其延迟SLO，就增加准入概率，否则就减少。准入概率的初始值和增加幅度与该QoS类的延迟SLO相关</li><li>我们的目标是在资源够用的时候公平使用资源，资源不够用再去选择合适的降级。Aequitas的方法只适用于RPC很多，网络资源不够用的情况。</li></ol></li></ol></li></ol><h2 id="下周工作计划-15"><a href="#下周工作计划-15" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><ol><li>完善在何时以及通过什么样的方式选择合适的租户进入L队列的方案</li><li>思考多个租户的情况下应该如何分配队列以及满足SLO</li></ol><h1 id="20240115-20240119"><a href="#20240115-20240119" class="headerlink" title="20240115-20240119"></a>20240115-20240119</h1><h2 id="本周工作-74"><a href="#本周工作-74" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>结合Aequitas和D2FQ思考方案的设计原则<ol><li>D2FQ在一段时间内通过给租户分配不同权重的队列，实现租户之间的吞吐量权重公平。并通过改变队列的权重在公平和低权重队列的尾延迟之间实现权衡。</li><li>Aequitas通过在网络资源出现瓶颈的时候根据延迟SLO和延迟SLO满足情况对租户进行降级来满足更多租户的延迟SLO</li><li>方案原则<ul><li>通过控制IO并发程度来控制IO的服务延迟。保障服务延迟小于延迟SLO</li><li>根据 (到达速率-带宽SLO)/延迟SLO的计算值来预测该租户的排队延迟，给租户分类。</li><li>优先保障排队延迟严格租户的延迟SLO，然后保障租户的带宽SLO</li><li>当存储资源出现瓶颈的时候选择SLO最宽松，且SLO满足情况最少的租户进行降级</li></ul></li></ol></li><li>完善方案的细节：具体的调整公式</li><li>在MQSim中整理代码框架<ol><li>在每个流创建的时候需要在scheduler中注册。</li><li>每个流的请求不再放进waiting queue，而是放到scheduler的WFQ中。</li><li>从scheduler的WFQ中取出命令提交</li></ol></li></ol><h2 id="下周工作计划-16"><a href="#下周工作计划-16" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><ol><li>完善仿真代码和方案的细节</li><li>初步完成一个仿真结果</li></ol><h1 id="20240122-20240126"><a href="#20240122-20240126" class="headerlink" title="20240122-20240126"></a>20240122-20240126</h1><h2 id="本周工作-75"><a href="#本周工作-75" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li>按照论文思路重新整理ppt框架，包括Introduction、Background and Related Work、Motivation、Design部分<ol><li>Background and Related work 介绍云存储平台的存储介质(NVMe)以及租户如何使用云存储平台；SLO保障中在内核的IO调度策略、延迟SLO保障以及带宽SLO保障；网络演算定理</li><li>Motivation介绍SSD的性能是不断变化的、等待延迟和服务延迟的关系、吞吐量和服务延迟在IO并发度上是矛盾的、随着租户数目增多，租户SLO都无法满足。</li><li>Design介绍方法，先介绍overview，再介绍每个参数含义，再介绍方法细节</li></ol></li></ol><h2 id="下周工作计划-17"><a href="#下周工作计划-17" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><ol><li>完善ppt的细节内容</li><li>完善仿真代码</li></ol><h1 id="20240227-20240301"><a href="#20240227-20240301" class="headerlink" title="20240227-20240301"></a>20240227-20240301</h1><h2 id="本周工作-76"><a href="#本周工作-76" class="headerlink" title="本周工作"></a>本周工作</h2><ol><li><p>重新整理PPT架构</p><ol><li><p>背景和相关工作部分</p><ol><li>当前云存储的计价方式，用户关心吞吐量和延迟这两个指标，但计价方式做不到。因为现在基于NVMe SSD的云存储服务器不能提供稳定的吞吐量和延迟</li><li>NVMe 存储：NVMe特征，提供高吞吐和低延迟，在不同状态下体现不同的性能。基于NVMe的Linux内核存储栈流程</li><li>相关工作是如何在Linux内核存储栈中保障延迟和吞吐量的</li></ol></li><li><p>动机</p><ol><li>由于SSD的存储资源有限，当不进行调度的时候，存储资源按照租户的流量到达速率分配，随着租户数量增加，可能会出现SLO无法满足的情况</li><li>吞吐量SLO和延迟SLO的关系(在SSD服务速率固定的情况下是否是竞争的，还没想好)。如果SSD速率固定，如果租户想增加吞吐量，就会增加发送速率，那么排队延迟就可能会增加。</li><li>租户的到达速率不会严格按照吞吐量SLO，所以如果只按照吞吐量SLO分配资源给租户会导致延迟SLO上升</li></ol></li><li><p>基本想法</p><ol><li>在租户数量增多，存储资源不够用的时候，需要选择合适的租户降级。</li><li>根据是否容易破坏延迟SLO的情况，对租户进行H和M的分类。</li><li>在租户发送速率发生变化的时候，对H和M的权重进行动态调整。调度租户的请求，满足所有租户的SLO</li></ol></li></ol></li></ol><h2 id="下周工作计划-18"><a href="#下周工作计划-18" class="headerlink" title="下周工作计划"></a>下周工作计划</h2><ol><li>完善ppt的细节内容</li><li>思考在只考虑排队延迟的情况下吞吐量SLO和延迟SLO的关系。</li><li>以及这两者和租户到达速率的关系</li><li>思考如何在方案中更好地体现对吞吐量SLO的保障</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>周报</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自动组卷系统</title>
    <link href="/2021/10/11/%E8%87%AA%E5%8A%A8%E7%BB%84%E5%8D%B7%E7%B3%BB%E7%BB%9F/"/>
    <url>/2021/10/11/%E8%87%AA%E5%8A%A8%E7%BB%84%E5%8D%B7%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="自动组卷系统"><a href="#自动组卷系统" class="headerlink" title="自动组卷系统"></a>自动组卷系统</h1><h2 id="系统使用手册"><a href="#系统使用手册" class="headerlink" title="系统使用手册"></a>系统使用手册</h2><h3 id="数据库说明"><a href="#数据库说明" class="headerlink" title="数据库说明"></a>数据库说明</h3><p>数据库使用的是neo4j-3.3.3版本，由于服务器最开始安装的是jdk8，而高版本的neo4j需要使用的是jdk11或者jdk12，所以项目使用了低版本的neo4j数据库。</p><p>数据库对任意的ip地址都是可以访问的，数据库的访问网址是<code>http://1.15.187.75:7474/</code>访问界面如下</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\自动组卷系统\image-20211013092136019.png" alt="image-20211013092136019" style="zoom:30%;" /><p>在命令行中输入命令<code>match(n) return n;</code>可以看到当前数据库的基本图网络。</p><h4 id="图网络结构说明"><a href="#图网络结构说明" class="headerlink" title="图网络结构说明"></a>图网络结构说明</h4><p>整体框架中所有的节点分为两类，一类是层节点，一类是题目节点。分层的基本结构如下图所示。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\自动组卷系统\image-20211013102423350.png" alt="image-20211013102423350" style="zoom:50%;" /><p>可以看到层节点总共有四种类型。分别是<img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\自动组卷系统\image-20211013102404814.png" alt="image-20211013102404814" style="zoom:50%;" />。每个高层节点对低层节点的关系都是<strong>include</strong>.每类层节点的介绍如下(从高到低)。</p><ol><li><p><u>Class节点</u>：该节点只有一个，是Python课程。具体属性有：**”Title”:(课程的名称)** 和 **”Teacher”: (授课老师)**。</p></li><li><p><u>Theme节点</u>：是课程中的每一讲，是根据课程的pdf文件的名称进行命名的。具体属性有：**”Title”: (该讲的名称)、”Difficulty”: (该讲难易度)、”Importance”: (该讲应当掌握的重要程度)**。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\自动组卷系统\image-20211012140033427.png" alt="image-20211012140033427" style="zoom:50%;" /></li><li><p><u>Knowledge节点</u>：是每一讲中的每一节，根据每一讲文件中的目录进行命名的。具体属性有：**”Title”: (该知识的名称)<strong>、</strong>“Difficulty”: (该知识难易度)<strong>、</strong>“Importance”: (该知识应当掌握的重要程度)**。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\自动组卷系统\image-20211012143235855.png" alt="image-20211012143235855" style="zoom:50%;" /></li><li><p><u>Point节点</u>：是每一节中的每一个具体知识点。具体属性有：**”Title”: (该知识点的名称)<strong>、</strong>“Difficulty”: (该知识点难易度)<strong>、</strong>“Importance”: (该知识点应当掌握的重要程度)**。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\自动组卷系统\image-20211013143847081.png" alt="image-20211013143847081" style="zoom:20%;" /></li></ol><p>除了层节点还有题目节点，题目节点的类型是<strong>Test</strong>.</p><p>Test就是题目本身，一个test可以和多个Point相关，一个Point也可以和多个Test相关。具体属性有：**”Type”：（该习题的习题类型）、”Content”: (该习题的具体内容)、”Difficulty”: (该题目难易度)、”Answer”:(该题目的答案)、”Importance”: (该题目的重要程度)**。每一个Test对Point节点的关系是relate。</p><h3 id="系统操作"><a href="#系统操作" class="headerlink" title="系统操作"></a>系统操作</h3><h4 id="服务器说明"><a href="#服务器说明" class="headerlink" title="服务器说明"></a>服务器说明</h4><p>服务器的ip地址是：1.15.187.75，账号是root，密码是zjzty@1123@.</p><p>项目的地址是:/usr/local/python_projects/python_web/PythonClass/</p><p>nginx的地址是：/usr/local/nginx</p><p>anaconda的地址是：/root/anaconda3</p><h4 id="项目说明"><a href="#项目说明" class="headerlink" title="项目说明"></a>项目说明</h4><p>项目的启动方式有两种</p><ol><li>直接在项目的根目录中使用  <code>python manage.py runserver 0.0.0.0:80</code></li><li>在本机的pycharm中进行django项目的配置，之后直接启动项目，效果和1的类似</li><li>先使用命令<code>python manage.py runserver</code>，再启动nginx，再启动uwsgi，之后可以进行访问</li></ol><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\自动组卷系统\image-20211025014218913.png" alt="image-20211025014218913" style="zoom:30%;" /><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><h3 id="项目需求"><a href="#项目需求" class="headerlink" title="项目需求"></a>项目需求</h3><ol><li>管理员可以将题库上传</li><li>题库按照知识点进行分类</li><li>系统自动根据知识点随机出题</li><li>学生端完成题目，系统自动进行判卷</li></ol><h3 id="项目架构"><a href="#项目架构" class="headerlink" title="项目架构"></a>项目架构</h3><ol><li>使用neo4j作为数据库</li><li>前端使用浏览器</li></ol><h2 id="平台设计"><a href="#平台设计" class="headerlink" title="平台设计"></a>平台设计</h2><p>平台主要有三个模块，分别是登录模块、教师模块、学生模块。</p><h3 id="登录模块"><a href="#登录模块" class="headerlink" title="登录模块"></a>登录模块</h3><p>登录模块主要是负责在登录的时候把教师和学生进行区分，即在neo4j数据库中存储有学生类型的节点和教师类型的节点，节点的属性都包含用户名和密码。通过登录模块把每个学生和老师分开，平台的UI操作也会不一样。同样当用户输入任何网址的时候都需要先登录。</p><h3 id="教师模块"><a href="#教师模块" class="headerlink" title="教师模块"></a>教师模块</h3><p>需要多个教师节点，每个教师节点对应不同的学生。</p><p>教师节点会存储教师登录的用户名和密码。所以教师节点的属性有：登陆账号和登陆密码。班级，（有的知识多个老师讲了没有）</p><p>教师模块能够实现知识图谱的构建与题库的录入。还可以进行作业和考试试卷的布置。主要就是有权限。</p><h3 id="学生模块"><a href="#学生模块" class="headerlink" title="学生模块"></a>学生模块</h3><p>学生节点的属性有：</p><ol><li>学号（登录的账号）</li><li>登录密码</li><li>姓名</li><li>班级</li><li>性别</li></ol><p>每一个学生节点和Test类型的节点都是有一条边（LEARN）联系的，属性有：</p><ol><li>该生做这个题目做了多少次</li><li>该生做对了这个题目多少次</li></ol><h3 id="学生模块和教师模块的结合"><a href="#学生模块和教师模块的结合" class="headerlink" title="学生模块和教师模块的结合"></a>学生模块和教师模块的结合</h3><h4 id="作业模块"><a href="#作业模块" class="headerlink" title="作业模块"></a>作业模块</h4><p>教师可以通过教师端布置作业。选择想要考察的知识点和其对应的题目数目。平台进行记录，保存到一个json文件中，包含知识点名称和其对应的出题数目。学生端在完成本次作业的时候，平台会对此json文件进行读取，再随机出题。</p><p>本次作业的结果会以csv文件的格式保存表格的属性有：题目名称、题目内容、出题次数、答错次数。同样本次的结果也会对题目节点的属性进行更新。</p><p>每个学生都会维护一个表格（名称是：“姓名_学号_班级”），用来记录自己的学习情况，每一行是一个题目。每当有一个题目节点被添加进来了，该表格就会多一行。属性有：完成次数、答对次数、答错次数、第几次作业答对、第几次作业答错。</p><p>方便教师对每个学生单独的学习信息进行统计分析。</p><h2 id="中期推进"><a href="#中期推进" class="headerlink" title="中期推进"></a>中期推进</h2><h3 id="安装neo4j"><a href="#安装neo4j" class="headerlink" title="安装neo4j"></a>安装neo4j</h3><p>按照<a href="https://www.cnblogs.com/Hackerman/p/12555365.html">centos 安装neo4j图形数据库 - Hackerman - 博客园 (cnblogs.com)</a>这篇文章进行安装，可以最终得到如下结果。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\自动组卷系统\image-20211011155000074.png" alt="image-20211011155000074"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br></pre></td><td class="code"><pre><span class="line">#*****************************************************************</span><br><span class="line"># Neo4j configuration</span><br><span class="line">#</span><br><span class="line"># For more details and a complete list of settings, please see</span><br><span class="line"># https:&#x2F;&#x2F;neo4j.com&#x2F;docs&#x2F;operations-manual&#x2F;current&#x2F;reference&#x2F;configuration-settings&#x2F;</span><br><span class="line">#*****************************************************************</span><br><span class="line"></span><br><span class="line"># The name of the database to mount</span><br><span class="line">#要装载的数据库的名称，默认就是graph.db</span><br><span class="line">dbms.active_database&#x3D;graph.db</span><br><span class="line"></span><br><span class="line"># Paths of directories in the installation.</span><br><span class="line">#安装中目录的路径，默认使用当前安装Neo4j的目录</span><br><span class="line">#dbms.directories.data&#x3D;data</span><br><span class="line">#dbms.directories.plugins&#x3D;plugins</span><br><span class="line">#dbms.directories.certificates&#x3D;certificates</span><br><span class="line">#dbms.directories.logs&#x3D;logs</span><br><span class="line">#dbms.directories.lib&#x3D;lib</span><br><span class="line">#dbms.directories.run&#x3D;run</span><br><span class="line"></span><br><span class="line"># This setting constrains all &#96;LOAD CSV&#96; import files to be under the &#96;import&#96; directory. Remove or comment it out to</span><br><span class="line"># allow files to be loaded from anywhere in the filesystem; this introduces possible security problems. See the</span><br><span class="line"># &#96;LOAD CSV&#96; section of the manual for details.</span><br><span class="line">#导入数据的CSV数据文件的默认存放目录</span><br><span class="line">dbms.directories.import&#x3D;import</span><br><span class="line"></span><br><span class="line"># Whether requests to Neo4j are authenticated.</span><br><span class="line"># To disable authentication, uncomment this line</span><br><span class="line">#对Neo4j的请求是否经过身份验证。</span><br><span class="line">dbms.security.auth_enabled&#x3D;true</span><br><span class="line"></span><br><span class="line"># Enable this to be able to upgrade a store from an older version.</span><br><span class="line"># 是否能够从旧版本升级存储</span><br><span class="line">#dbms.allow_upgrade&#x3D;true</span><br><span class="line"></span><br><span class="line"># Java Heap Size: by default the Java heap size is dynamically</span><br><span class="line"># calculated based on available system resources.</span><br><span class="line"># Uncomment these lines to set specific initial and maximum</span><br><span class="line"># heap size.</span><br><span class="line">#Java堆大小：默认情况下，Java堆大小是基于可用系统资源动态计算的。</span><br><span class="line">#未注释这些行以设置特定的初始和最大堆大小。</span><br><span class="line">#可自己设置初始堆大小和最大堆大小值，具体值需要根据自己系统及数据量大小而定</span><br><span class="line">#dbms.memory.heap.initial_size&#x3D;512m</span><br><span class="line">#dbms.memory.heap.max_size&#x3D;512m</span><br><span class="line"></span><br><span class="line"># The amount of memory to use for mapping the store files, in bytes (or</span><br><span class="line"># kilobytes with the &#39;k&#39; suffix, megabytes with &#39;m&#39; and gigabytes with &#39;g&#39;).</span><br><span class="line"># If Neo4j is running on a dedicated server, then it is generally recommended</span><br><span class="line"># to leave about 2-4 gigabytes for the operating system, give the JVM enough</span><br><span class="line"># heap to hold all your transaction state and query context, and then leave the</span><br><span class="line"># rest for the page cache.</span><br><span class="line"># The default page cache memory assumes the machine is dedicated to running</span><br><span class="line"># Neo4j, and is heuristically set to 50% of RAM minus the max Java heap size.</span><br><span class="line">#用于映射存储文件的内存量，也就是缓存，单位可以是k&#x2F;m&#x2F;g。</span><br><span class="line">#如果Neo4j运行在专用服务器上，则通常建议为了给操作系统留下大约2-4gb的空间，</span><br><span class="line">#给JVM足够的空间堆以保存所有事务状态和查询上下文，然后在页面缓存中休息。</span><br><span class="line">#建议设置为RAM的50%减去最大Java堆大小。</span><br><span class="line">#dbms.memory.pagecache.size&#x3D;10g</span><br><span class="line"></span><br><span class="line">#*****************************************************************</span><br><span class="line"># Network connector configuration</span><br><span class="line">#*****************************************************************</span><br><span class="line"></span><br><span class="line"># With default configuration Neo4j only accepts local connections.</span><br><span class="line"># To accept non-local connections, uncomment this line:</span><br><span class="line"># 默认配置下，Neo4j只接受本地连接。要接受非本地连接，请取消注释此行：</span><br><span class="line">dbms.connectors.default_listen_address&#x3D;0.0.0.0</span><br><span class="line"></span><br><span class="line"># You can also choose a specific network interface, and configure a non-default</span><br><span class="line"># port for each connector, by setting their individual listen_address.</span><br><span class="line"></span><br><span class="line"># The address at which this server can be reached by its clients. This may be the server&#39;s IP address or DNS name, or</span><br><span class="line"># it may be the address of a reverse proxy which sits in front of the server. This setting may be overridden for</span><br><span class="line"># individual connectors below.</span><br><span class="line">#您还可以选择一个特定的网络接口，并为每个连接器配置一个非默认端口，方法是设置它们各自的侦听地址。</span><br><span class="line">#客户端可以访问此服务器的地址。这可能是服务器的IP地址或DNS名称，也可能是位于服务器前面的反向代理的地址。</span><br><span class="line">#对于下面的单独连接器，此设置可能被重写</span><br><span class="line">#默认是本地地址</span><br><span class="line">dbms.connectors.default_advertised_address&#x3D;localhost</span><br><span class="line"></span><br><span class="line"># You can also choose a specific advertised hostname or IP address, and</span><br><span class="line"># configure an advertised port for each connector, by setting their</span><br><span class="line"># individual advertised_address.</span><br><span class="line"></span><br><span class="line"># Bolt connector</span><br><span class="line"># Bolt 连接开启</span><br><span class="line">dbms.connector.bolt.enabled&#x3D;true</span><br><span class="line">#dbms.connector.bolt.tls_level&#x3D;OPTIONAL</span><br><span class="line">#Bolt端口号</span><br><span class="line">dbms.connector.bolt.listen_address&#x3D;:7687</span><br><span class="line"></span><br><span class="line"># HTTP Connector. There must be exactly one HTTP connector.</span><br><span class="line">#HTTP连接</span><br><span class="line">dbms.connector.http.enabled&#x3D;true</span><br><span class="line">#HTTP连接端口号</span><br><span class="line">dbms.connector.http.listen_address&#x3D;:7474</span><br><span class="line"></span><br><span class="line"># HTTPS Connector. There can be zero or one HTTPS connectors.</span><br><span class="line">#HTTPs连接</span><br><span class="line">dbms.connector.https.enabled&#x3D;true</span><br><span class="line">#HTTPS端口</span><br><span class="line">dbms.connector.https.listen_address&#x3D;:7473</span><br><span class="line"></span><br><span class="line"># Number of Neo4j worker threads.</span><br><span class="line">#运行线程数</span><br><span class="line">#dbms.threads.worker_count&#x3D;</span><br><span class="line"></span><br><span class="line">#*****************************************************************</span><br><span class="line"># SSL system configuration</span><br><span class="line">#*****************************************************************</span><br><span class="line"></span><br><span class="line"># Names of the SSL policies to be used for the respective components.</span><br><span class="line"></span><br><span class="line"># The legacy policy is a special policy which is not defined in</span><br><span class="line"># the policy configuration section, but rather derives from</span><br><span class="line"># dbms.directories.certificates and associated files</span><br><span class="line"># (by default: neo4j.key and neo4j.cert). Its use will be deprecated.</span><br><span class="line"></span><br><span class="line"># The policies to be used for connectors.</span><br><span class="line">#</span><br><span class="line"># N.B: Note that a connector must be configured to support&#x2F;require</span><br><span class="line">#      SSL&#x2F;TLS for the policy to actually be utilized.</span><br><span class="line">#</span><br><span class="line"># see: dbms.connector.*.tls_level</span><br><span class="line"></span><br><span class="line">#bolt.ssl_policy&#x3D;legacy</span><br><span class="line">#https.ssl_policy&#x3D;legacy</span><br><span class="line"></span><br><span class="line">#*****************************************************************</span><br><span class="line"># SSL policy configuration SSL策略配置</span><br><span class="line">#*****************************************************************</span><br><span class="line"></span><br><span class="line"># Each policy is configured under a separate namespace, e.g.</span><br><span class="line">#    dbms.ssl.policy.&lt;policyname&gt;.*</span><br><span class="line">#</span><br><span class="line"># The example settings below are for a new policy named &#39;default&#39;.</span><br><span class="line"></span><br><span class="line"># The base directory for cryptographic objects. Each policy will by</span><br><span class="line"># default look for its associated objects (keys, certificates, ...)</span><br><span class="line"># under the base directory.</span><br><span class="line">#</span><br><span class="line"># Every such setting can be overriden using a full path to</span><br><span class="line"># the respective object, but every policy will by default look</span><br><span class="line"># for cryptographic objects in its base location.</span><br><span class="line">#</span><br><span class="line"># Mandatory setting 强制设置</span><br><span class="line"></span><br><span class="line">#dbms.ssl.policy.default.base_directory&#x3D;certificates&#x2F;default</span><br><span class="line"></span><br><span class="line"># Allows the generation of a fresh private key and a self-signed</span><br><span class="line"># certificate if none are found in the expected locations. It is</span><br><span class="line"># recommended to turn this off again after keys have been generated.</span><br><span class="line">#</span><br><span class="line"># Keys should in general be generated and distributed offline</span><br><span class="line"># by a trusted certificate authority (CA) and not by utilizing</span><br><span class="line"># this mode.</span><br><span class="line">#密钥通常应该由受信任的证书颁发机构（CA）脱机生成和分发，而不是使用此模式。</span><br><span class="line">#是否允许生成秘钥</span><br><span class="line"></span><br><span class="line">#dbms.ssl.policy.default.allow_key_generation&#x3D;false</span><br><span class="line"></span><br><span class="line"># Enabling this makes it so that this policy ignores the contents</span><br><span class="line"># of the trusted_dir and simply resorts to trusting everything.</span><br><span class="line">#</span><br><span class="line"># Use of this mode is discouraged. It would offer encryption but no security.</span><br><span class="line"># 不鼓励使用此模式。它将提供加密，但没有安全性。</span><br><span class="line"># 是否信任所有</span><br><span class="line"></span><br><span class="line">#dbms.ssl.policy.default.trust_all&#x3D;false</span><br><span class="line"></span><br><span class="line"># The private key for the default SSL policy. By default a file</span><br><span class="line"># named private.key is expected under the base directory of the policy.</span><br><span class="line"># It is mandatory that a key can be found or generated.</span><br><span class="line"></span><br><span class="line">#dbms.ssl.policy.default.private_key&#x3D;</span><br><span class="line"></span><br><span class="line"># The private key for the default SSL policy. By default a file</span><br><span class="line"># named public.crt is expected under the base directory of the policy.</span><br><span class="line"># It is mandatory that a certificate can be found or generated.</span><br><span class="line"></span><br><span class="line">#dbms.ssl.policy.default.public_certificate&#x3D;</span><br><span class="line"></span><br><span class="line"># The certificates of trusted parties. By default a directory named</span><br><span class="line"># &#39;trusted&#39; is expected under the base directory of the policy. It is</span><br><span class="line"># mandatory to create the directory so that it exists, because it cannot</span><br><span class="line"># be auto-created (for security purposes).</span><br><span class="line">#</span><br><span class="line"># To enforce client authentication client_auth must be set to &#39;require&#39;!</span><br><span class="line"></span><br><span class="line">#dbms.ssl.policy.default.trusted_dir&#x3D;</span><br><span class="line"></span><br><span class="line"># Client authentication setting. Values: none, optional, require</span><br><span class="line"># The default is to require client authentication.</span><br><span class="line">#</span><br><span class="line"># Servers are always authenticated unless explicitly overridden</span><br><span class="line"># using the trust_all setting. In a mutual authentication setup this</span><br><span class="line"># should be kept at the default of require and trusted certificates</span><br><span class="line"># must be installed in the trusted_dir.</span><br><span class="line"></span><br><span class="line">#dbms.ssl.policy.default.client_auth&#x3D;require</span><br><span class="line"></span><br><span class="line"># A comma-separated list of allowed TLS versions.</span><br><span class="line"># By default TLSv1, TLSv1.1 and TLSv1.2 are allowed.</span><br><span class="line"></span><br><span class="line">#dbms.ssl.policy.default.tls_versions&#x3D;</span><br><span class="line"></span><br><span class="line"># A comma-separated list of allowed ciphers.</span><br><span class="line"># The default ciphers are the defaults of the JVM platform.</span><br><span class="line"></span><br><span class="line">#dbms.ssl.policy.default.ciphers&#x3D;</span><br><span class="line"></span><br><span class="line">#*****************************************************************</span><br><span class="line"># Logging configuration 日志配置</span><br><span class="line">#*****************************************************************</span><br><span class="line"></span><br><span class="line"># To enable HTTP logging, uncomment this line</span><br><span class="line">#是否启用HTTP日志记录</span><br><span class="line">#dbms.logs.http.enabled&#x3D;true</span><br><span class="line"></span><br><span class="line"># Number of HTTP logs to keep.</span><br><span class="line">#保留日志文件数</span><br><span class="line">#dbms.logs.http.rotation.keep_number&#x3D;5</span><br><span class="line"></span><br><span class="line"># Size of each HTTP log that is kept.</span><br><span class="line">#日志文件大小</span><br><span class="line">#dbms.logs.http.rotation.size&#x3D;20m</span><br><span class="line"></span><br><span class="line"># To enable GC Logging, uncomment this line</span><br><span class="line"># 启用GC日志记录</span><br><span class="line">#dbms.logs.gc.enabled&#x3D;true</span><br><span class="line"></span><br><span class="line"># GC Logging Options</span><br><span class="line">#日志记录选项，详情见下地址</span><br><span class="line"># see http:&#x2F;&#x2F;docs.oracle.com&#x2F;cd&#x2F;E19957-01&#x2F;819-0084-10&#x2F;pt_tuningjava.html#wp57013 for more information.</span><br><span class="line">#dbms.logs.gc.options&#x3D;-XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCApplicationStoppedTime -XX:+PrintPromotionFailure -XX:+PrintTenuringDistribution</span><br><span class="line"></span><br><span class="line"># Number of GC logs to keep.</span><br><span class="line">#GC日志保留数</span><br><span class="line">#dbms.logs.gc.rotation.keep_number&#x3D;5</span><br><span class="line"></span><br><span class="line"># Size of each GC log that is kept.</span><br><span class="line">#GC日志文件大小</span><br><span class="line">#dbms.logs.gc.rotation.size&#x3D;20m</span><br><span class="line"></span><br><span class="line"># Size threshold for rotation of the debug log. If set to zero then no rotation will occur. Accepts a binary suffix &quot;k&quot;,</span><br><span class="line"># &quot;m&quot; or &quot;g&quot;.</span><br><span class="line">#调试日志阈值大小</span><br><span class="line">#dbms.logs.debug.rotation.size&#x3D;20m</span><br><span class="line"></span><br><span class="line"># Maximum number of history files for the internal log.</span><br><span class="line">#最多保留日志文件数</span><br><span class="line">#dbms.logs.debug.rotation.keep_number&#x3D;7</span><br><span class="line"></span><br><span class="line">#*****************************************************************</span><br><span class="line"># Miscellaneous configuration 其他配置</span><br><span class="line">#*****************************************************************</span><br><span class="line"></span><br><span class="line"># Enable this to specify a parser other than the default one.</span><br><span class="line">#cypher 版本</span><br><span class="line">#cypher.default_language_version&#x3D;3.0</span><br><span class="line"></span><br><span class="line"># Determines if Cypher will allow using file URLs when loading data using</span><br><span class="line"># &#96;LOAD CSV&#96;. Setting this value to &#96;false&#96; will cause Neo4j to fail &#96;LOAD CSV&#96;</span><br><span class="line"># clauses that load data from the file system.</span><br><span class="line">#是否允许Cypher在Load CSV时引用互联网上的地址</span><br><span class="line">#dbms.security.allow_csv_import_from_file_urls&#x3D;true</span><br><span class="line"></span><br><span class="line"># Retention policy for transaction logs needed to perform recovery and backups.</span><br><span class="line">#执行恢复和备份所需的事务日志的保留策略</span><br><span class="line">dbms.tx_log.rotation.retention_policy&#x3D;1 days</span><br><span class="line"></span><br><span class="line"># Enable a remote shell server which Neo4j Shell clients can log in to.</span><br><span class="line">#是否允许shell远程连接</span><br><span class="line">dbms.shell.enabled&#x3D;true</span><br><span class="line"># The network interface IP the shell will listen on (use 0.0.0.0 for all interfaces).</span><br><span class="line">#shell连接地址（用 0.0.0.0 表示所有地址都可连接）</span><br><span class="line">#127.0.0.1</span><br><span class="line">dbms.shell.host&#x3D;0.0.0.0</span><br><span class="line"># The port the shell will listen on, default is 1337.</span><br><span class="line">#Shell连接端口号</span><br><span class="line">dbms.shell.port&#x3D;1337</span><br><span class="line"></span><br><span class="line"># Only allow read operations from this Neo4j instance. This mode still requires</span><br><span class="line"># write access to the directory for lock purposes.</span><br><span class="line">#dbms.read_only&#x3D;false</span><br><span class="line"></span><br><span class="line"># Comma separated list of JAX-RS packages containing JAX-RS resources, one</span><br><span class="line"># package name for each mountpoint. The listed package names will be loaded</span><br><span class="line"># under the mountpoints specified. Uncomment this line to mount the</span><br><span class="line"># org.neo4j.examples.server.unmanaged.HelloWorldResource.java from</span><br><span class="line"># neo4j-server-examples under &#x2F;examples&#x2F;unmanaged, resulting in a final URL of</span><br><span class="line"># http:&#x2F;&#x2F;localhost:7474&#x2F;examples&#x2F;unmanaged&#x2F;helloworld&#x2F;&#123;nodeId&#125;</span><br><span class="line">#dbms.unmanaged_extension_classes&#x3D;org.neo4j.examples.server.unmanaged&#x3D;&#x2F;examples&#x2F;unmanaged</span><br><span class="line"></span><br><span class="line">#********************************************************************</span><br><span class="line"># JVM Parameters JVM参数配置</span><br><span class="line">#********************************************************************</span><br><span class="line"></span><br><span class="line"># G1GC generally strikes a good balance between throughput and tail</span><br><span class="line"># latency, without too much tuning.</span><br><span class="line">dbms.jvm.additional&#x3D;-XX:+UseG1GC</span><br><span class="line"></span><br><span class="line"># Have common exceptions keep producing stack traces, so they can be</span><br><span class="line"># debugged regardless of how often logs are rotated.</span><br><span class="line">dbms.jvm.additional&#x3D;-XX:-OmitStackTraceInFastThrow</span><br><span class="line"></span><br><span class="line"># Make sure that &#96;initmemory&#96; is not only allocated, but committed to</span><br><span class="line"># the process, before starting the database. This reduces memory</span><br><span class="line"># fragmentation, increasing the effectiveness of transparent huge</span><br><span class="line"># pages. It also reduces the possibility of seeing performance drop</span><br><span class="line"># due to heap-growing GC events, where a decrease in available page</span><br><span class="line"># cache leads to an increase in mean IO response time.</span><br><span class="line"># Try reducing the heap memory, if this flag degrades performance.</span><br><span class="line">dbms.jvm.additional&#x3D;-XX:+AlwaysPreTouch</span><br><span class="line"></span><br><span class="line"># Trust that non-static final fields are really final.</span><br><span class="line"># This allows more optimizations and improves overall performance.</span><br><span class="line"># NOTE: Disable this if you use embedded mode, or have extensions or dependencies that may use reflection or</span><br><span class="line"># serialization to change the value of final fields!</span><br><span class="line">dbms.jvm.additional&#x3D;-XX:+UnlockExperimentalVMOptions</span><br><span class="line">dbms.jvm.additional&#x3D;-XX:+TrustFinalNonStaticFields</span><br><span class="line"></span><br><span class="line"># Disable explicit garbage collection, which is occasionally invoked by the JDK itself.</span><br><span class="line">dbms.jvm.additional&#x3D;-XX:+DisableExplicitGC</span><br><span class="line"></span><br><span class="line"># Remote JMX monitoring, uncomment and adjust the following lines as needed. Absolute paths to jmx.access and</span><br><span class="line"># jmx.password files are required.</span><br><span class="line"># Also make sure to update the jmx.access and jmx.password files with appropriate permission roles and passwords,</span><br><span class="line"># the shipped configuration contains only a read only role called &#39;monitor&#39; with password &#39;Neo4j&#39;.</span><br><span class="line"># For more details, see: http:&#x2F;&#x2F;download.oracle.com&#x2F;javase&#x2F;8&#x2F;docs&#x2F;technotes&#x2F;guides&#x2F;management&#x2F;agent.html</span><br><span class="line"># On Unix based systems the jmx.password file needs to be owned by the user that will run the server,</span><br><span class="line"># and have permissions set to 0600.</span><br><span class="line"># For details on setting these file permissions on Windows see:</span><br><span class="line">#     http:&#x2F;&#x2F;docs.oracle.com&#x2F;javase&#x2F;8&#x2F;docs&#x2F;technotes&#x2F;guides&#x2F;management&#x2F;security-windows.html</span><br><span class="line">#dbms.jvm.additional&#x3D;-Dcom.sun.management.jmxremote.port&#x3D;3637</span><br><span class="line">#dbms.jvm.additional&#x3D;-Dcom.sun.management.jmxremote.authenticate&#x3D;true</span><br><span class="line">#dbms.jvm.additional&#x3D;-Dcom.sun.management.jmxremote.ssl&#x3D;false</span><br><span class="line">#dbms.jvm.additional&#x3D;-Dcom.sun.management.jmxremote.password.file&#x3D;&#x2F;absolute&#x2F;path&#x2F;to&#x2F;conf&#x2F;jmx.password</span><br><span class="line">#dbms.jvm.additional&#x3D;-Dcom.sun.management.jmxremote.access.file&#x3D;&#x2F;absolute&#x2F;path&#x2F;to&#x2F;conf&#x2F;jmx.access</span><br><span class="line"></span><br><span class="line"># Some systems cannot discover host name automatically, and need this line configured:</span><br><span class="line">#dbms.jvm.additional&#x3D;-Djava.rmi.server.hostname&#x3D;$THE_NEO4J_SERVER_HOSTNAME</span><br><span class="line"></span><br><span class="line"># Expand Diffie Hellman (DH) key size from default 1024 to 2048 for DH-RSA cipher suites used in server TLS handshakes.</span><br><span class="line"># This is to protect the server from any potential passive eavesdropping.</span><br><span class="line">dbms.jvm.additional&#x3D;-Djdk.tls.ephemeralDHKeySize&#x3D;2048</span><br><span class="line"></span><br><span class="line"># This mitigates a DDoS vector.</span><br><span class="line">dbms.jvm.additional&#x3D;-Djdk.tls.rejectClientInitiatedRenegotiation&#x3D;true</span><br><span class="line"></span><br><span class="line">#********************************************************************</span><br><span class="line"># Wrapper Windows NT&#x2F;2000&#x2F;XP Service Properties</span><br><span class="line">#********************************************************************</span><br><span class="line"># WARNING - Do not modify any of these properties when an application</span><br><span class="line">#  using this configuration file has been installed as a service.</span><br><span class="line">#  Please uninstall the service before modifying this section.  The</span><br><span class="line">#  service can then be reinstalled.</span><br><span class="line"></span><br><span class="line"># Name of the service</span><br><span class="line">dbms.windows_service_name&#x3D;neo4j</span><br><span class="line"></span><br><span class="line">#********************************************************************</span><br><span class="line"># Other Neo4j system properties</span><br><span class="line">#********************************************************************</span><br><span class="line">dbms.jvm.additional&#x3D;-Dunsupported.dbms.udc.source&#x3D;tarball</span><br></pre></td></tr></table></figure><p>neo4j的配置文件的具体详情，可能之后会用到。</p><h3 id="使用java连接neo4j"><a href="#使用java连接neo4j" class="headerlink" title="使用java连接neo4j"></a>使用java连接neo4j</h3><p>首先做的是一个小的java的程序，在idea中，使用了maven添加依赖。在<code>pom.xml</code>文件中加入如下语句。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.neo4j.driver<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>neo4j-java-driver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>因为安装的neo4j的版本是3.3.3.1，所以使用的是1.5.0版本的api。之后在java中完成了一个简单连接数据库并写入节点的操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.neo4j.driver.v1.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.neo4j.driver.v1.Values.parameters;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldExample</span> <span class="keyword">implements</span> <span class="title">AutoCloseable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Driver driver;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HelloWorldExample</span><span class="params">( String uri, String user, String password )</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        driver = GraphDatabase.driver( uri, AuthTokens.basic( user, password ) );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        driver.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printGreeting</span><span class="params">( <span class="keyword">final</span> String message )</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> ( Session session = driver.session() )</span><br><span class="line">        &#123;</span><br><span class="line">            String greeting = session.writeTransaction( <span class="keyword">new</span> TransactionWork&lt;String&gt;()</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">( Transaction tx )</span></span></span><br><span class="line"><span class="function">                </span>&#123;</span><br><span class="line">                    StatementResult result = tx.run( <span class="string">&quot;CREATE (a:Greeting) &quot;</span> +</span><br><span class="line">                                    <span class="string">&quot;SET a.message = $message &quot;</span> +</span><br><span class="line">                                    <span class="string">&quot;RETURN a.message + &#x27;, from node &#x27; + id(a)&quot;</span>,</span><br><span class="line">                            parameters( <span class="string">&quot;message&quot;</span>, message ) );</span><br><span class="line">                    <span class="keyword">return</span> result.single().get( <span class="number">0</span> ).asString();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; );</span><br><span class="line">            System.out.println( greeting );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">( String... args )</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> ( HelloWorldExample greeter = <span class="keyword">new</span> HelloWorldExample( <span class="string">&quot;bolt://1.15.187.75:7687&quot;</span>, <span class="string">&quot;neo4j&quot;</span>, <span class="string">&quot;szb123123&quot;</span> ) )</span><br><span class="line">        &#123;</span><br><span class="line">            greeter.printGreeting( <span class="string">&quot;hello, world&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>找到了Neo4j的开发者文档<a href="https://neo4j.com/docs/developer-manual/current/index.html">The Neo4j Developer Manual v3.4</a>可以学习和查阅。</p><p>如下显示一个连接的生命周期</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DriverLifecycleExample</span> <span class="keyword">implements</span> <span class="title">AutoCloseable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Driver driver;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DriverLifecycleExample</span><span class="params">( String uri, String user, String password )</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        driver = GraphDatabase.driver( uri, AuthTokens.basic( user, password ) );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        driver.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="创建图网络"><a href="#创建图网络" class="headerlink" title="创建图网络"></a>创建图网络</h3><p>由于是最开始的基础部分，所以只是手动添加试题。按照老师的课件将所有python的知识分成21讲。如下所示。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\自动组卷系统\image-20211012140033427.png" alt="image-20211012140033427"></p><p>因为只是一个初步的程序，所以只对第一讲的内容做具体分析。</p><p>因为是图数据库，所以对每个节点进行不同的定义。将课程名称<strong>Python数据处理编程</strong>设置为第一个节点。该节点只有一个，节点属性如下（当前比较简单，之后可以再加）。节点的类型是Class，该节点叫做Python。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;properties&quot;</span>:</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;Title&quot;</span>:(课程的名称)</span><br><span class="line">    <span class="string">&quot;Teacher&quot;</span>: (授课老师)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Python节点的子节点的类型都是Theme，代表的是每一讲。第一讲的名字叫做Grammar。每个theme节点都有统一的节点属性，属性内容如下。其中Difficulty,</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;properties&quot;</span>:</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;Title&quot;</span>: (该讲的名称)</span><br><span class="line">    <span class="string">&quot;Difficulty&quot;</span>: (该讲难易度)</span><br><span class="line">    <span class="string">&quot;Importance&quot;</span>: (该讲应当掌握的重要程度)</span><br><span class="line">    <span class="string">&quot;Mastery&quot;</span>:(学生的掌握程度)</span><br><span class="line">    <span class="string">&quot;Weights&quot;</span>:(培养计划中所占的权重)</span><br><span class="line">    <span class="string">&quot;Teached&quot;</span>:(是否已经讲解)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Theme类型的子节点的类型都是Knowledge，也就是知识类型。第一讲所包含的知识点如下图。</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\自动组卷系统\image-20211012143235855.png" alt="image-20211012143235855"></p><p>Knowledge节点的属性内容如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;properties&quot;</span>:</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;Title&quot;</span>: (该讲的名称)</span><br><span class="line">    <span class="string">&quot;Difficulty&quot;</span>: (该讲难易度)</span><br><span class="line">    <span class="string">&quot;Importance&quot;</span>: (该讲应当掌握的重要程度)</span><br><span class="line">    <span class="string">&quot;Mastery&quot;</span>:(学生的掌握程度)</span><br><span class="line">    <span class="string">&quot;Weights&quot;</span>:(培养计划中所占的权重)</span><br><span class="line">    <span class="string">&quot;Teached&quot;</span>:(是否已经讲解)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Knowledge类型节点的子节点的类型都是Point，就是小的知识点了。例如<code>Python内置函数</code>的知识点就包括<code>类型转换与类型判断</code>等。</p><p>Point节点的属性内容如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;properties&quot;</span>:</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;Title&quot;</span>: (该讲的名称)</span><br><span class="line">    <span class="string">&quot;Difficulty&quot;</span>: (该讲难易度)</span><br><span class="line">    <span class="string">&quot;Importance&quot;</span>: (该讲应当掌握的重要程度)</span><br><span class="line">    <span class="string">&quot;Mastery&quot;</span>:(学生的掌握程度)</span><br><span class="line">    <span class="string">&quot;Weights&quot;</span>:(培养计划中所占的权重)</span><br><span class="line">    <span class="string">&quot;Teached&quot;</span>:(是否已经讲解)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Point节点的子节点的类型都是Test，代表练习题。</p><p>Test节点的属性内容如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;properties&quot;</span>:</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;Type&quot;</span>：（该习题的习题类型）</span><br><span class="line">    <span class="string">&quot;Difficulty&quot;</span>: (该题目难易度)</span><br><span class="line">    <span class="string">&quot;Importance&quot;</span>: (该题目的重要程度)</span><br><span class="line">    <span class="string">&quot;HomeworkTimes&quot;</span>:(在作业中出现过几次)</span><br><span class="line">    <span class="string">&quot;WrongTimes&quot;</span>:(在作业中被做错的次数)</span><br><span class="line">    <span class="string">&quot;ExamTimes&quot;</span>:(在前几年的考试中总共出现的次数)</span><br><span class="line">    <span class="string">&quot;Teached&quot;</span>:(是否已经讲解)</span><br><span class="line">    <span class="string">&quot;Content&quot;</span>: (该习题的具体内容)</span><br><span class="line">    <span class="string">&quot;Answer&quot;</span>:(该题目的答案)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建各个节点的代码如下。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Create (Python:Class &#123;title:&#x27;Python数据处理编程&#x27;, Teacher:&#x27;蒋万春&#x27;&#125;)</span><br><span class="line">CREATE (Grammar:Theme &#123;title:&#x27;Python语法基础&#x27;,Difficulty:2,importance:5&#125;)</span><br><span class="line">Create (InFunction:Knowledge &#123;title:&#x27;Python内置函数&#x27;,Difficulty:2,importance:5&#125;)</span><br><span class="line">Create (TypeChangeJudge:Point &#123;title:&#x27;类型转换与判断&#x27;,Difficulty:2,importance:5&#125;)</span><br><span class="line">Create (Test1:Test &#123;title:&#x27;test1&#x27;,type:1,Dificulty:2,Content:&#x27;bin(555)的答案是\nA.0b1000101011\tB.100101011\tC.0b1000101010\tD.1000101010&#x27;&#125;)</span><br><span class="line"><span class="keyword">Create</span> (Python)<span class="operator">-</span>[:include]<span class="operator">-</span><span class="operator">&gt;</span>(Grammar)<span class="operator">-</span>[:include]<span class="operator">-</span><span class="operator">&gt;</span>(InFunction)<span class="operator">-</span>[:include]<span class="operator">-</span><span class="operator">&gt;</span>(TypeChangeJudge)</span><br><span class="line">Create (n:Knowledge &#123;title:&#x27;运算符与表达式&#x27;,Difficulty:3,importance:4&#125;)</span><br><span class="line">Create (p:Point &#123;title:&#x27;算数运算符&#x27;,Difficulty:3,importance:4&#125;)</span><br><span class="line">Create (t:Test &#123;title:&#x27;test2&#x27;,type:2,Dificulty:2,Content:&#x27;3**2的答案是&#x27;&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>之后创建各个节点之间的连接</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">match (k:Knowledge&#123;title:&quot;运算符与表达式&quot;&#125;),(t:Theme&#123;title:&quot;Python语法基础&quot;&#125;) create (t)-[:include]-&gt;(k)</span><br><span class="line">match (t:Test&#123;title:&quot;test2&quot;&#125;),(p:Point&#123;title:&quot;算数运算符&quot;&#125;),(k:Knowledge&#123;title:&quot;运算符与表达式&quot;&#125;) create (k)-[:include]-&gt;(p)-[:include]-&gt;(t);</span><br></pre></td></tr></table></figure><p>搭建的基本的图结构如下图所示。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\自动组卷系统\image-20211012154800153.png" alt="image-20211012154800153" style="zoom:50%;" /><h3 id="使用python连接neo4j数据库"><a href="#使用python连接neo4j数据库" class="headerlink" title="使用python连接neo4j数据库"></a>使用python连接neo4j数据库</h3><p>首先是搭建环境，使用的neo4j的版本是3.3.3所以需要使用较低版本的各种python的库。</p><p>安装的python的版本是3.7.经过多次调试，使用如下命令安装neo4j的相关包是可以成功的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install py2neo&#x3D;&#x3D;4.3</span><br><span class="line">pip install neo4j-driver&#x3D;&#x3D;1.5.3</span><br></pre></td></tr></table></figure><p>重点使用py2neo包对图数据库的内容进行查找和操作。测试代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> py2neo <span class="keyword">import</span> Graph,Node,Relationship</span><br><span class="line">graph = Graph(<span class="string">&quot;http://localhost:7474&quot;</span>,auth=(<span class="string">&quot;neo4j&quot;</span>,<span class="string">&quot;password&quot;</span>))</span><br><span class="line">a = Node(<span class="string">&quot;Person&quot;</span>, name=<span class="string">&quot;Alice&quot;</span>)</span><br><span class="line">b = Node(<span class="string">&quot;Person&quot;</span>, name=<span class="string">&quot;Bob&quot;</span>)</span><br><span class="line">ab = Relationship(a, <span class="string">&quot;KNOWS&quot;</span>, b)</span><br><span class="line">graph.create(ab)</span><br></pre></td></tr></table></figure><p>出现如下结果则证明环境已经安装完成。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\自动组卷系统\image-20211013130646335.png" alt="image-20211013130646335" style="zoom:50%;" /><h3 id="python进行控制台系统设计"><a href="#python进行控制台系统设计" class="headerlink" title="python进行控制台系统设计"></a>python进行控制台系统设计</h3><h4 id="功能模块"><a href="#功能模块" class="headerlink" title="功能模块"></a>功能模块</h4><ol><li>插入层节点</li><li>插入题目</li><li>出卷</li><li>退出</li></ol><h4 id="插入层节点设计"><a href="#插入层节点设计" class="headerlink" title="插入层节点设计"></a>插入层节点设计</h4><p>因为Class节点只有一个，所以就手动创建了，之后系统只需要创建Theme、Knowledge、Point这三种层节点。在创建层节点的同时需要同时创建该层节点和上一个层节点的连接。</p><h3 id="Django的相关知识"><a href="#Django的相关知识" class="headerlink" title="Django的相关知识"></a>Django的相关知识</h3><h4 id="项目的urls-py和app内的urls-py的区别"><a href="#项目的urls-py和app内的urls-py的区别" class="headerlink" title="项目的urls.py和app内的urls.py的区别"></a>项目的urls.py和app内的urls.py的区别</h4><p>在一个项目中，通常不会只有一个app，如果把所有的 app 的 views 中的视图都放在 urls.py 中进行映射，会让代码显得非常乱。因此 django 给我们提供了一个方法，可以在 app 内部包含自己的 url 匹配规则，而在项目的 urls.py 中再统一包含这个 app 的 urls 。使用这个技术需要借助 include 函数。</p><p><strong>应用中的urls.py文件</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> demo <span class="keyword">import</span> views</span><br><span class="line"> </span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r&#x27;^receive/&#x27;</span>, views.receive),</span><br><span class="line"> </span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><strong>项目中的urls.py文件</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url, include</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"> </span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r&#x27;^admin/&#x27;</span>, admin.site.urls),</span><br><span class="line">    <span class="comment"># 自动同步的demo</span></span><br><span class="line">    url(<span class="string">r&#x27;^demo/&#x27;</span>, include(<span class="string">&#x27;demo.urls&#x27;</span>)),</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="django的url匹配问题"><a href="#django的url匹配问题" class="headerlink" title="django的url匹配问题"></a>django的url匹配问题</h4><p><a href="https://www.cnblogs.com/JiangLe/p/9197874.html">https://www.cnblogs.com/JiangLe/p/9197874.html</a> 和<a href="https://blog.csdn.net/J_wb49/article/details/103055521%E8%BF%99%E4%B8%A4%E7%AF%87%E6%96%87%E7%AB%A0%E4%BB%8B%E7%BB%8D%E4%BA%86%E5%A6%82%E4%BD%95%E9%98%B2%E6%AD%A2%E5%9C%A8%E5%A4%9A%E4%B8%AAapp%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9B%B8%E5%90%8C%E5%91%BD%E5%90%8D%E7%9A%84html%E6%96%87%E4%BB%B6%E7%9A%84%E9%97%AE%E9%A2%98%E3%80%82">https://blog.csdn.net/J_wb49/article/details/103055521这两篇文章介绍了如何防止在多个app中出现相同命名的html文件的问题。</a></p><h4 id="如何设置django的日志系统进行调试"><a href="#如何设置django的日志系统进行调试" class="headerlink" title="如何设置django的日志系统进行调试"></a>如何设置django的日志系统进行调试</h4><p>在<code>settings.py</code>文件中加入如下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> django.utils.log</span><br><span class="line"><span class="keyword">import</span> logging.handlers</span><br><span class="line"><span class="comment"># 添加日志的打印项</span></span><br><span class="line">log_path = os.path.join(BASE_DIR, <span class="string">&quot;logs&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(log_path):</span><br><span class="line">    os.makedirs(<span class="string">&quot;logs&quot;</span>)</span><br><span class="line"></span><br><span class="line">LOGGING = &#123;</span><br><span class="line">    <span class="string">&#x27;version&#x27;</span>: <span class="number">1</span>,  <span class="comment"># 保留字</span></span><br><span class="line">    <span class="string">&#x27;disable_existing_loggers&#x27;</span>: <span class="literal">False</span>,  <span class="comment"># 禁用已经存在的logger实例</span></span><br><span class="line">    <span class="comment"># 日志文件的格式</span></span><br><span class="line">    <span class="string">&#x27;formatters&#x27;</span>: &#123;</span><br><span class="line">        <span class="comment"># 详细的日志格式</span></span><br><span class="line">        <span class="string">&#x27;standard&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;format&#x27;</span>: <span class="string">&#x27;[%(asctime)s][%(threadName)s:%(thread)d][task_id:%(name)s][%(filename)s:%(lineno)d]&#x27;</span></span><br><span class="line">                      <span class="string">&#x27;[%(levelname)s][%(message)s]&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment"># 简单的日志格式</span></span><br><span class="line">        <span class="string">&#x27;simple&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;format&#x27;</span>: <span class="string">&#x27;[%(levelname)s][%(asctime)s][%(filename)s:%(lineno)d]%(message)s&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment"># 定义一个特殊的日志格式</span></span><br><span class="line">        <span class="string">&#x27;collect&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;format&#x27;</span>: <span class="string">&#x27;%(message)s&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment"># 过滤器</span></span><br><span class="line">    <span class="string">&#x27;filters&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;require_debug_true&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;()&#x27;</span>: <span class="string">&#x27;django.utils.log.RequireDebugTrue&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment"># 处理器</span></span><br><span class="line">    <span class="string">&#x27;handlers&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;console&#x27;</span>: &#123;     <span class="comment"># 在终端打印</span></span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;DEBUG&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;filters&#x27;</span>: [<span class="string">&#x27;require_debug_true&#x27;</span>],  <span class="comment"># 只有在Django debug为True时才在屏幕打印日志</span></span><br><span class="line">            <span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;logging.StreamHandler&#x27;</span>,  <span class="comment">#</span></span><br><span class="line">            <span class="string">&#x27;formatter&#x27;</span>: <span class="string">&#x27;simple&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;default&#x27;</span>: &#123;    <span class="comment"># 默认的</span></span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;INFO&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;logging.handlers.RotatingFileHandler&#x27;</span>,  <span class="comment"># 保存到文件，自动切</span></span><br><span class="line">            <span class="string">&#x27;filename&#x27;</span>: os.path.join(BASE_DIR+<span class="string">&#x27;/logs/&#x27;</span>, <span class="string">&quot;all.log&quot;</span>),  <span class="comment"># 日志文件</span></span><br><span class="line">            <span class="string">&#x27;maxBytes&#x27;</span>: <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">50</span>,                    <span class="comment"># 日志大小 50M</span></span><br><span class="line">            <span class="string">&#x27;backupCount&#x27;</span>: <span class="number">3</span>,                                <span class="comment"># 最多备份几个</span></span><br><span class="line">            <span class="string">&#x27;formatter&#x27;</span>: <span class="string">&#x27;standard&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;encoding&#x27;</span>: <span class="string">&#x27;utf-8&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;error&#x27;</span>: &#123;   <span class="comment"># 专门用来记错误日志</span></span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;ERROR&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;logging.handlers.RotatingFileHandler&#x27;</span>,  <span class="comment"># 保存到文件，自动切</span></span><br><span class="line">            <span class="string">&#x27;filename&#x27;</span>: os.path.join(BASE_DIR+<span class="string">&#x27;/logs/&#x27;</span>, <span class="string">&quot;error.log&quot;</span>),  <span class="comment"># 日志文件</span></span><br><span class="line">            <span class="string">&#x27;maxBytes&#x27;</span>: <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">50</span>,  <span class="comment"># 日志大小 50M</span></span><br><span class="line">            <span class="string">&#x27;backupCount&#x27;</span>: <span class="number">5</span>,</span><br><span class="line">            <span class="string">&#x27;formatter&#x27;</span>: <span class="string">&#x27;standard&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;encoding&#x27;</span>: <span class="string">&#x27;utf-8&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;collect&#x27;</span>: &#123;   <span class="comment"># 专门定义一个收集特定信息的日志</span></span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;INFO&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;class&#x27;</span>: <span class="string">&#x27;logging.handlers.RotatingFileHandler&#x27;</span>,  <span class="comment"># 保存到文件，自动切</span></span><br><span class="line">            <span class="string">&#x27;filename&#x27;</span>: os.path.join(BASE_DIR+<span class="string">&#x27;/logs/&#x27;</span>, <span class="string">&quot;collect.log&quot;</span>),</span><br><span class="line">            <span class="string">&#x27;maxBytes&#x27;</span>: <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">50</span>,  <span class="comment"># 日志大小 50M</span></span><br><span class="line">            <span class="string">&#x27;backupCount&#x27;</span>: <span class="number">5</span>,</span><br><span class="line">            <span class="string">&#x27;formatter&#x27;</span>: <span class="string">&#x27;collect&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;encoding&#x27;</span>: <span class="string">&quot;utf-8&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;scprits_handler&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>:<span class="string">&#x27;DEBUG&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;class&#x27;</span>:<span class="string">&#x27;logging.handlers.RotatingFileHandler&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;filename&#x27;</span>: os.path.join(BASE_DIR+<span class="string">&#x27;/logs/&#x27;</span>, <span class="string">&quot;script.log&quot;</span>),</span><br><span class="line">            <span class="string">&#x27;maxBytes&#x27;</span>: <span class="number">1024</span>*<span class="number">1024</span>*<span class="number">5</span>,</span><br><span class="line">            <span class="string">&#x27;backupCount&#x27;</span>: <span class="number">5</span>,</span><br><span class="line">            <span class="string">&#x27;formatter&#x27;</span>:<span class="string">&#x27;standard&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;loggers&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;django&#x27;</span>: &#123;             <span class="comment"># 默认的logger应用如下配置</span></span><br><span class="line">            <span class="string">&#x27;handlers&#x27;</span>: [<span class="string">&#x27;default&#x27;</span>, <span class="string">&#x27;console&#x27;</span>, <span class="string">&#x27;error&#x27;</span>],  <span class="comment"># 上线之后可以把&#x27;console&#x27;移除</span></span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;DEBUG&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;propagate&#x27;</span>: <span class="literal">True</span>,  <span class="comment"># 向不向更高级别的logger传递</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;collect&#x27;</span>: &#123;      <span class="comment"># 名为 &#x27;collect&#x27;的logger还单独处理</span></span><br><span class="line">            <span class="string">&#x27;handlers&#x27;</span>: [<span class="string">&#x27;console&#x27;</span>, <span class="string">&#x27;collect&#x27;</span>],</span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;INFO&#x27;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;scripts&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;handlers&#x27;</span>: [<span class="string">&#x27;scprits_handler&#x27;</span>],</span><br><span class="line">            <span class="string">&#x27;level&#x27;</span>: <span class="string">&#x27;INFO&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;propagate&#x27;</span>: <span class="literal">False</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后再在需要使用的地方加入如下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line">logger = logging.getLogger(<span class="string">&#x27;django&#x27;</span>)</span><br><span class="line">logger.info(xxxx)</span><br></pre></td></tr></table></figure><p>就可以在文件中看到你想要看到的调试结果了。</p><h3 id="如何在pycharm中远程调试服务器的django项目"><a href="#如何在pycharm中远程调试服务器的django项目" class="headerlink" title="如何在pycharm中远程调试服务器的django项目"></a>如何在pycharm中远程调试服务器的django项目</h3><h3 id="使用Django-Uwsgi-nginx搭建前后端平台"><a href="#使用Django-Uwsgi-nginx搭建前后端平台" class="headerlink" title="使用Django+Uwsgi+nginx搭建前后端平台"></a>使用Django+Uwsgi+nginx搭建前后端平台</h3><p><a href="https://github.com/jiangnanboy/movie_knowledge_graph_app">jiangnanboy/movie_knowledge_graph_app: 电影知识图谱，主要包括实体识别、实体查询、关系查询以及智能问答等。movie knowledge graph(Entity identification, graph display, and intelligent question and answer) (github.com)</a>作为主要前端参考的github项目。</p><p><a href="https://neo4j-examples.github.io/paradise-papers-django/%E6%98%AF%E6%95%B4%E4%BD%93%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%8F%82%E8%80%83">https://neo4j-examples.github.io/paradise-papers-django/是整体项目的参考</a></p><h4 id="在django项目中连接到服务器的neo4j数据库"><a href="#在django项目中连接到服务器的neo4j数据库" class="headerlink" title="在django项目中连接到服务器的neo4j数据库"></a>在django项目中连接到服务器的neo4j数据库</h4><p>在<code>settings.py</code>文件中引入了<code>neomodel</code>文件，用于直接在django中连接neo4j数据库。在文件中加入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config.DATABASE_URL = <span class="string">&#x27;bolt://neo4j:neo4j@1.15.187.75:7687&#x27;</span></span><br></pre></td></tr></table></figure><p>关于neomodel包的使用见<a href="https://juejin.cn/post/6844904005060165646%E8%BF%99%E7%AF%87%E6%96%87%E7%AB%A0">https://juejin.cn/post/6844904005060165646这篇文章</a></p><h4 id="配置django的static文件"><a href="#配置django的static文件" class="headerlink" title="配置django的static文件"></a>配置django的static文件</h4><p>首先就遇到了一个问题，如何在nginx+django中搭建管理静态文件的环境。这个问题整整调了三个小时。</p><p>问题描述：在django中用 <code>python manage.py runserver 0.0.0.0:80</code>命令可以成功显示静态文件，但是使用nginx之后就不可以了。</p><p>解决办法：</p><ol><li><p>配置nginx的配置文件：这里需要注意这是django项目目录下的static文件，最后要加上一个“/”</p><p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source_posts\images\自动组卷系统\image-20211020165009512.png" alt="image-20211020165009512"></p></li><li><p>在项目中的<code>urls.py</code>中添加如下代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.staticfiles.views <span class="keyword">import</span> serve</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> re_path</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">return_static</span>(<span class="params">request, path, insecure=<span class="literal">True</span>, **kwargs</span>):</span></span><br><span class="line">  <span class="keyword">return</span> serve(request, path, insecure, **kwargs)</span><br><span class="line"> </span><br><span class="line">urlpatterns = [</span><br><span class="line">  ...</span><br><span class="line">  re_path(<span class="string">r&#x27;^static/(?P&lt;path&gt;.*)$&#x27;</span>, return_static, name=<span class="string">&#x27;static&#x27;</span>), <span class="comment"># 添加这行</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>修改setting.py中的有关static_url中的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">STATIC_URL = <span class="string">&#x27;/static/&#x27;</span></span><br><span class="line"></span><br><span class="line">STATICFILES_DIRS = [</span><br><span class="line">    os.path.join(BASE_DIR, <span class="string">&quot;static&quot;</span>),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">STATIC_ROOT = os.path.join(BASE_DIR, <span class="string">&#x27;collect_static/&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ol><h4 id="设置models"><a href="#设置models" class="headerlink" title="设置models"></a>设置models</h4><p>首先在app中新建一个models的文件夹，然后在models中创建所需要的类。</p><p>models是django所用到的数据类型，需要对每个节点的类型都设置一个单独的model。models文件夹的内容如下。</p><img src="D:\Sun1999\MyHexoBlogs\myblogs\source\_posts\images\自动组卷系统\image-20211026220958331.png" alt="image-20211026220958331" style="zoom:50%;" /><p>里面把neo4j数据库中的所有类型的节点都变成以python类的形式存在，方便直接进行节点的调用。为了在首页进行显示的时候区分Class节点和其他类型的知识节点，所以每个节点内都设置了<code>attributes</code>属性，用于区分两者的区别<code>Point.py</code>的具体内容如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> neomodel <span class="keyword">import</span> (</span><br><span class="line">    StringProperty,</span><br><span class="line">    StructuredNode,</span><br><span class="line">    RelationshipFrom,</span><br><span class="line">    IntegerProperty,</span><br><span class="line">    RelationshipTo,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .nodeutils <span class="keyword">import</span> NodeUtils</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span>(<span class="params">StructuredNode, NodeUtils</span>):</span></span><br><span class="line">    <span class="built_in">type</span> = <span class="string">&#x27;Point&#x27;</span></span><br><span class="line">    title = StringProperty()</span><br><span class="line">    Difficulty = IntegerProperty()</span><br><span class="line">    Importance = IntegerProperty()</span><br><span class="line">    <span class="built_in">id</span>= IntegerProperty(index=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># 下面这两个属性用于生成关系</span></span><br><span class="line">    <span class="comment"># knowledges = RelationshipFrom(&#x27;.Knowledge.Knowledge&#x27;, &#x27;include&#x27;)</span></span><br><span class="line">    tests = RelationshipTo(<span class="string">&#x27;.Test.Test&#x27;</span>, <span class="string">&#x27;relate&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># serialize可以以字典的形式返回数据</span></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">serialize</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="string">&#x27;node_properties&#x27;</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;type&#x27;</span> : self.<span class="built_in">type</span>,</span><br><span class="line">                <span class="string">&#x27;title&#x27;</span>: self.title,</span><br><span class="line">                <span class="string">&#x27;id&#x27;</span>: self.<span class="built_in">id</span>,</span><br><span class="line">                <span class="string">&#x27;attributes&#x27;</span>:&#123;</span><br><span class="line">                    <span class="string">&#x27;Difficulty&#x27;</span>: self.Difficulty,</span><br><span class="line">                    <span class="string">&#x27;Importance&#x27;</span>: self.Importance,</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">#以字典的形式返回所有和该节点连接的节点</span></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">serialize_connections</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&#x27;nodes_type&#x27;</span>: <span class="string">&#x27;Test&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;nodes_related&#x27;</span>: self.serialize_relationships(self.tests.<span class="built_in">all</span>()),</span><br><span class="line">            &#125;,</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure><p>在djano的项目中，setting设置连接了neo4j数据库之后，在代码中直接调用这个类就可以直接连接neo4j数据库了。</p><h2 id="真实使用中的问题"><a href="#真实使用中的问题" class="headerlink" title="真实使用中的问题"></a>真实使用中的问题</h2><h3 id="常用命令集合"><a href="#常用命令集合" class="headerlink" title="常用命令集合"></a>常用命令集合</h3><ol><li><p>部分学生由于选课的问题并没有被导入教务系统的名单，需要手动导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE(n:Student &#123;name:&#39;虞昊泽&#39;, gender:1,username:&#39;8204201928&#39;,password:&#39;8204201928&#39;,study_class:&quot;计算机2002&quot;,test_num:0,test_right_num:0&#125;)</span><br></pre></td></tr></table></figure></li><li><p>删除某个学生的相关的边</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">match (n)-[r]-&gt;(m)</span><br><span class="line">where n.name&#x3D;&quot;李扬&quot;</span><br><span class="line">delete r</span><br><span class="line">return n</span><br></pre></td></tr></table></figure></li><li></li></ol><h3 id="部分题目的答案录入出错"><a href="#部分题目的答案录入出错" class="headerlink" title="部分题目的答案录入出错"></a>部分题目的答案录入出错</h3><p>在第一次作业中，有三道题的答案录入出错</p><h3 id="编程题没有办法分开编译错误和程序错误（能不能跑起来和跑起来之后答案对不对）"><a href="#编程题没有办法分开编译错误和程序错误（能不能跑起来和跑起来之后答案对不对）" class="headerlink" title="编程题没有办法分开编译错误和程序错误（能不能跑起来和跑起来之后答案对不对）"></a>编程题没有办法分开编译错误和程序错误（能不能跑起来和跑起来之后答案对不对）</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>算法笔记</title>
    <link href="/2021/05/20/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/05/20/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>本人目前大三在读，为了对考研的机试做好准备，特此写博客对算法进行总结。本博客主要是根据《算法笔记》这本书进行复习。并且作者已经有了C语言的一定基础。</p><h1 id="算法笔记-第一章"><a href="#算法笔记-第一章" class="headerlink" title="算法笔记-第一章"></a>算法笔记-第一章</h1><p>算法笔记第一章主要就是介绍了本书使用的题目来源分别是<a href="https://www.patest.cn/">PAT 计算机程序设计能力考试 (patest.cn)</a>和<a href="https://www.codeup.cn/">酷哒学习平台 (codeup.cn)</a>并介绍了主要使用的语言是C和C++。</p><p>好像目前codeup没有办法使用了，所以找到了<a href="http://codeup.hustoj.com/">华中科技大学的题目备份网站</a>在里面可以进行算法笔记相关题目的练习。</p><p>由于本人有一定的C语言基础，所以对第二章就不做过多的介绍了</p><h1 id="算法笔记-第三章：入门模拟"><a href="#算法笔记-第三章：入门模拟" class="headerlink" title="算法笔记-第三章：入门模拟"></a>算法笔记-第三章：入门模拟</h1><p>入门模拟主要用来熟悉一下编辑环境还有两个网站的风格，所以还是决定试一试。</p><h2 id="简单模拟"><a href="#简单模拟" class="headerlink" title="简单模拟"></a>简单模拟</h2><p>两个简单的模拟熟悉一下风格</p><blockquote><p><strong><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805325918486528">1001 害死人不偿命的(3n+1)猜想</a></strong></p><p>卡拉兹(Callatz)猜想：</p><p>对任何一个正整数 <em>n</em>，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把 (3<em>n</em>+1) 砍掉一半。这样一直反复砍下去，最后一定在某一步得到 <em>n</em>=1。卡拉兹在 1950 年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证 (3<em>n</em>+1)，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展……</p><p>我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过 1000 的正整数 <em>n</em>，简单地数一下，需要多少步（砍几下）才能得到 <em>n</em>=1？</p><h3 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h3><p>每个测试输入包含 1 个测试用例，即给出正整数 <em>n</em> 的值。</p><h3 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出从 <em>n</em> 计算到 1 需要的步数。</p><h3 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure></blockquote><p>首先就Visual Studio的环境就配置了挺久的，重点是记得一定要在项目的源文件里创建cpp文件，不要乱搞。</p><p><img src="/images/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/image-20210520104750931.png" alt="image-20210520104750931"></p><p>并且在Visual Studio2019中，使用scanf可能回出现问题，所以需要在文件首行加上<code>#define _CRT_SECURE_NO_WARNINGS</code></p><p>具体代码如下。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//#include &lt;cstdio&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="comment">//读入输入的数据</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="comment">//轮次记录</span></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; n != <span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">n = n / <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">n = (<span class="number">3</span> * n + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, i);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805289432236032">1032 挖掘机技术哪家强</a>*</p><p>为了用事实说明挖掘机技术到底哪家强，PAT 组织了一场挖掘机技能大赛。现请你根据比赛结果统计出技术最强的那个学校。</p><h3 id="输入格式：-1"><a href="#输入格式：-1" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在第 1 行给出不超过 105 的正整数 <em>N</em>，即参赛人数。随后 <em>N</em> 行，每行给出一位参赛者的信息和成绩，包括其所代表的学校的编号（从 1 开始连续编号）、及其比赛成绩（百分制），中间以空格分隔。</p><h3 id="输出格式：-1"><a href="#输出格式：-1" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中给出总得分最高的学校的编号、及其总分，中间以空格分隔。题目保证答案唯一，没有并列。</p><h3 id="输入样例：-1"><a href="#输入样例：-1" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">3 65</span><br><span class="line">2 80</span><br><span class="line">1 100</span><br><span class="line">2 70</span><br><span class="line">3 40</span><br><span class="line">3 0</span><br></pre></td></tr></table></figure><h3 id="输出样例：-1"><a href="#输出样例：-1" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 150</span><br></pre></td></tr></table></figure></blockquote><p>解决代码如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="comment">//记录所有得分的数组</span></span><br><span class="line"><span class="keyword">int</span> S[<span class="number">100010</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="comment">//记录最高得分</span></span><br><span class="line"><span class="keyword">int</span> max_score = <span class="number">-1</span>;</span><br><span class="line"><span class="comment">//记录最高的单位</span></span><br><span class="line"><span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//输入的行数</span></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="comment">//记录目前输入</span></span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> t_score = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line"><span class="keyword">while</span> (N != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;t, &amp;t_score);</span><br><span class="line">S[t] = S[t] + t_score;</span><br><span class="line"><span class="keyword">if</span> (S[t] &gt; max_score)</span><br><span class="line">&#123;</span><br><span class="line">max = t;</span><br><span class="line">max_score = S[t];</span><br><span class="line">&#125;</span><br><span class="line">N--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>,max, S[max]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><p>通常查找较多元素的时候使用二分法，下面例题用于训练二分法查找。由于书中的例子是遍历查找的，所以将下面的例子换成了PAT中的二分查找的例子</p><blockquote><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805432256675840"><strong>1048 Find Coins</strong></a><br>Eva loves to collect coins from all over the universe, including some other planets like Mars. One day she visited a universal shopping mall which could accept all kinds of coins as payments. However, there was a special requirement of the payment: for each bill, she could only use exactly two coins to pay the exact amount. Since she has as many as 105 coins with her, she definitely needs your help. You are supposed to tell her, for any given amount of money, whether or not she can find two coins to pay for it.</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>Each input file contains one test case. For each case, the first line contains 2 positive numbers: <em>N</em> (≤$10^5$, the total number of coins) and <em>M</em> (≤$10^3$, the amount of money Eva has to pay). The second line contains <em>N</em> face values of the coins, which are all positive numbers no more than 500. All the numbers in a line are separated by a space.</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>For each test case, print in one line the two face values $V_1$ and $V_2$ (separated by a space) such that  $V_1$ + $V_2$ =M and  $V_1$ ≤$V_2$. If such a solution is not unique, output the one with the smallest  $V_1$ . If there is no solution, output <code>No Solution</code> instead.</p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">8 15</span><br><span class="line">1 2 8 7 2 4 11 15</span><br></pre></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 11</span><br></pre></td></tr></table></figure></blockquote><p>此题目就是给出n个硬币面额，还有一个目标金额m，如果n个硬币面额中存在两个n1 + n2 = m，则输出n1最小的n1、n2组合。如果不存在则输出No Solution。</p><blockquote><h3 id="二分法"><a href="#二分法" class="headerlink" title="二分法"></a>二分法</h3><p>先将所有硬币从小到大排序，然后逐个选择作为第一个硬币x，令第二个硬币y=m-x，如果y比500大说明这种情况不可以，如果y比500小则在当前硬币之后的所有硬币中二分查找是否存在数值为y的硬币，如果存在则输出并退出循环，如果不存在则输出No solution。</p></blockquote><p>解决代码如下,其中，二分查找的方法是经常用的，这里使用的是递归的方法进行二分查找。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_NUM 100010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//递归实现二分查找</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bi_find</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> coins[],<span class="keyword">int</span> right,<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> mid;</span><br><span class="line"><span class="keyword">if</span> (left &gt; right) &#123; <span class="keyword">return</span> <span class="literal">false</span>; &#125;</span><br><span class="line">mid = (left + right) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (coins[mid] == x) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (coins[mid] &gt; x) &#123; <span class="keyword">return</span>(<span class="built_in">bi_find</span>(left, coins, mid - <span class="number">1</span>, x)); &#125;</span><br><span class="line"><span class="keyword">if</span> (coins[mid] &lt; x) &#123; <span class="keyword">return</span>(<span class="built_in">bi_find</span>(mid + <span class="number">1</span>, coins, right, x)); &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="comment">//n是需要输入的所有硬币的个数，m是需要组成的钱</span></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="comment">//硬币数组</span></span><br><span class="line"><span class="keyword">int</span> coins[MAX_NUM];</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;coins[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从小到大，对coins进行排序</span></span><br><span class="line"><span class="built_in">sort</span>(coins, coins + n);</span><br><span class="line"><span class="comment">//输出结果 v1,v2</span></span><br><span class="line"><span class="keyword">int</span> v1 = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> v2 = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">v1 = coins[i];</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">bi_find</span>(i+<span class="number">1</span>, coins,n<span class="number">-1</span>,m-v1)) &#123;</span><br><span class="line">v2 = m - v1;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (v2 != <span class="number">-1</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, v1, v2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (v2 == <span class="number">-1</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;No Solution&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="图形输出"><a href="#图形输出" class="headerlink" title="图形输出"></a>图形输出</h2><p>在有些题目中，题目会给定一些规则，需要考生根据规则来进行画图。所谓图形，其实是由若干字符组成的，因此只需要弄清楚规则就能编写代码。这种题目的做法–般有两种:</p><ol><li>通过规律直接输出</li><li>通过二维字符数组输出</li></ol><p>下面是PAT中的一个例子。</p><blockquote><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805285812551680"><strong>1036 跟奥巴马一起编程</strong></a> </p><p>美国总统奥巴马不仅呼吁所有人都学习编程，甚至以身作则编写代码，成为美国历史上首位编写计算机代码的总统。2014 年底，为庆祝“计算机科学教育周”正式启动，奥巴马编写了很简单的计算机代码：在屏幕上画一个正方形。现在你也跟他一起画吧！</p><h3 id="输入格式：-2"><a href="#输入格式：-2" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出正方形边长 <em>N</em>（3≤<em>N</em>≤20）和组成正方形边的某种字符 C，间隔一个空格。</p><h3 id="输出格式：-2"><a href="#输出格式：-2" class="headerlink" title="输出格式："></a>输出格式：</h3><p>输出由给定字符 C 画出的正方形。但是注意到行间距比列间距大，所以为了让结果看上去更像正方形，我们输出的行数实际上是列数的 50%（四舍五入取整）。</p><h3 id="输入样例：-2"><a href="#输入样例：-2" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 a</span><br></pre></td></tr></table></figure><h3 id="输出样例：-2"><a href="#输出样例：-2" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">aaaaaaaaaa</span><br><span class="line">a        a</span><br><span class="line">a        a</span><br><span class="line">a        a</span><br><span class="line">aaaaaaaaaa</span><br></pre></td></tr></table></figure></blockquote><p>就是一个简单的输出正方形的题，这里我感觉比较重要的是需要学会用c++，来进行四舍五入的判断。首先需要导入的是<code>math.h</code>包，之后使用<code>round(n / 2.0)</code>运算对值进行四舍五入，其中最重要一点是除数需要是<strong>2.0</strong>，即一个小数，这样n是整型的话才可以。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="comment">//输入正方形边长</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="comment">//输入字符c</span></span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %c&quot;</span>, &amp;n,&amp;c);</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//这里用于对行数进行四舍五入取整</span></span><br><span class="line"><span class="keyword">int</span> row = <span class="number">0</span>;</span><br><span class="line">row = <span class="built_in">round</span>(n / <span class="number">2.0</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; row; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">0</span> || i==row<span class="number">-1</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (j == <span class="number">0</span> || j== n<span class="number">-1</span>) &#123; <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, c); &#125;</span><br><span class="line"><span class="keyword">else</span> &#123; <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>); &#125;</span><br><span class="line"><span class="keyword">if</span> (j == n - <span class="number">1</span>) &#123; <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="日期问题"><a href="#日期问题" class="headerlink" title="日期问题"></a>日期问题</h2><p>日期问题主要还是需要对闰年进行判断。</p><blockquote><p><a href="http://codeup.hustoj.com/problem.php?cid=100000578&pid=0">日期差值</a></p><p>有两个日期，求两个日期之间的天数，如果两个日期是连续的我们规定他们之间的天数为两天。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>有多组数据，每组数据有两行，分别表示两个日期，形式为YYYYMMDD</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>每组数据输出一行，即日期差值</p><h3 id="输入样例：-3"><a href="#输入样例：-3" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">20130101</span><br><span class="line">20130105</span><br></pre></td></tr></table></figure><h3 id="输出样例：-3"><a href="#输出样例：-3" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure></blockquote><p>这种求日期之间相差天数的题目有一一个很直接的思路，即令日期不断加1天，直到第一个日期等于第二个日期为止，即可统计出答案。具体处理时，如果当加了一天之后天数d 等于当前月份m所拥有的天数加1，那么就令月份m加1、同时置天数d为1号(即把日期变于当前月份m所拥有的天数加1，那么就令月份m加1、同时置天数d为1号(即把日期变为下一个月的1号);如果此时月份m变为了13，那么就令年份y加1、同时置月份m为1月(即把日期变为下一年的1月)。<br>为了方便直接取出每个月的天数，不妨给定一个二维数组<code>int month[13][2]</code>, 用来存放每个月的天数，其中第二维为0时表示平年，为1时表示闰年。<br>注意:如果想要加快速度，只需要先把第-一个 日期的年份不断加1，直到与第二个日期的年份相差1为止(想一想为什么不能直接加到等于第二个日期的年份时才停止? )， 期间根据平年或是闰年来累加365天或者366天即可。之后再进行不断令天数加1的操作。</p><p>代码如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> month[<span class="number">13</span>][<span class="number">2</span>] = &#123; &#123;<span class="number">0</span>, <span class="number">0</span>&#125;,&#123;<span class="number">31</span>, <span class="number">31</span>&#125;,&#123;<span class="number">28</span>, <span class="number">29</span>&#125;,&#123;<span class="number">31</span>, <span class="number">31</span>&#125;,&#123;<span class="number">30</span>, <span class="number">30</span>&#125;,&#123;<span class="number">31</span>, <span class="number">31</span>&#125;,&#123;<span class="number">30</span>, <span class="number">30</span>&#125;,&#123;<span class="number">31</span>, <span class="number">31</span>&#125;,&#123;<span class="number">31</span>, <span class="number">31</span>&#125;,&#123;<span class="number">30</span>, <span class="number">30</span>&#125;,&#123;<span class="number">31</span>, <span class="number">31</span>&#125;,&#123;<span class="number">30</span>, <span class="number">30</span>&#125;,&#123;<span class="number">31</span>, <span class="number">31</span>&#125; &#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isLeap</span><span class="params">(<span class="keyword">int</span> year)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span>((year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>) || year % <span class="number">400</span> == <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//编号是1的存储更大的日期</span></span><br><span class="line"><span class="keyword">int</span> time1, time2;</span><br><span class="line"><span class="keyword">int</span> year1, year2, month1, month2, day1, day2;</span><br><span class="line"><span class="comment">//对输入进行取值</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;time1, &amp;time2);</span><br><span class="line"><span class="keyword">if</span> (time1 &lt; time2) &#123;</span><br><span class="line"><span class="keyword">int</span> time = time1;</span><br><span class="line">time1 = time2;</span><br><span class="line">time2 = time;</span><br><span class="line">&#125;</span><br><span class="line">year1 = time1 / <span class="number">10000</span>;</span><br><span class="line">year2 = time2 / <span class="number">10000</span>;</span><br><span class="line">month1 = time1 % <span class="number">10000</span> / <span class="number">100</span>;</span><br><span class="line">month2 = time2 % <span class="number">10000</span> / <span class="number">100</span>;</span><br><span class="line">day1 = time1 % <span class="number">100</span>;</span><br><span class="line">day2 = time2 % <span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> day = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> isleap = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (year2 != year1 || month2 != month1 || day2 != day1) &#123;</span><br><span class="line"><span class="keyword">if</span> (day2 == month[month2][<span class="built_in">isLeap</span>(year2)]) &#123;</span><br><span class="line">day2 = <span class="number">0</span>;</span><br><span class="line">month2++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (month2 == <span class="number">13</span>) &#123;</span><br><span class="line">year2++;</span><br><span class="line">month2 = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">day2++;</span><br><span class="line">day++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, day);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="算法笔记-第四章：算法初步"><a href="#算法笔记-第四章：算法初步" class="headerlink" title="算法笔记-第四章：算法初步"></a>算法笔记-第四章：算法初步</h1><p>第三章的内容作为入手所以基本每一个题目都上手敲了一遍，第四章的内容就只会捡着重点敲一下了。</p><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><p><strong>算法逻辑</strong>：总共需要进行$n(1\le i \le n)$趟操作,每趟操作选出待排序部分$[i,n]$中最小的元素，令其与$A[i]$交换。复杂度是$O(n^2)$.</p><h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3><p>关于插入排序的内容，看下面的几个图就可以了。</p><p><img src="/images/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/image-20210526192254889.png" alt="image-20210526192254889"></p><p><img src="/images/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/image-20210526192324752.png" alt="image-20210526192324752"></p><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><p>介绍一下书中没有提到的快速排序的问题。</p><p>快速排序算法是一种基于交换的高效的排序算法，它采用了<strong>分治法</strong>的思想：</p><ol><li>从数列中取出一个数作为基准数（枢轴，pivot）。 </li><li>将数组进行划分(partition)，将比基准数大的元素都移至枢轴右边，将小于等于基准数的元素都移至枢轴左边。</li><li>再对左右的子区间重复第二步的划分操作，直至每个子区间只有一个元素。</li></ol><p>代码如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span>  <span class="comment">//找基准数 划分</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = left + <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">int</span> j = right;</span><br><span class="line">    <span class="keyword">int</span> temp = arr[left];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(i &lt;= j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (arr[i] &lt; temp)</span><br><span class="line">        &#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (arr[j] &gt; temp )</span><br><span class="line">        &#123;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; j)</span><br><span class="line">            <span class="built_in">swap</span>(arr[i++], arr[j--]);</span><br><span class="line">        <span class="keyword">else</span> i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">swap</span>(arr[j], arr[left]);</span><br><span class="line">    <span class="keyword">return</span> j;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quick_sort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (left &gt; right)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="built_in">partition</span>(arr, left, right);</span><br><span class="line">    <span class="built_in">quick_sort</span>(arr, left, j - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">quick_sort</span>(arr, j + <span class="number">1</span>, right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="排序题与sort函数的应用"><a href="#排序题与sort函数的应用" class="headerlink" title="排序题与sort函数的应用"></a>排序题与sort函数的应用</h3><p>在笔试的过程中常常会涉及到对各种不同的结构体进行排序的情况，这个时候就需要自己完成sort函数的排序规则即<strong>自己完成cmp函数</strong>的定义。sort函数是C++中的一个库，可以很方便的进行调用。下面看一个PAT的例子。</p><blockquote><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805474338127872"><strong>1025 PAT Ranking</strong></a></p><p>Programming Ability Test (PAT) is organized by the College of Computer Science and Technology of Zhejiang University. Each test is supposed to run simultaneously in several places, and the ranklists will be merged immediately after the test. Now it is your job to write a program to correctly merge all the ranklists and generate the final rank.</p><h3 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification:"></a>Input Specification:</h3><p>Each input file contains one test case. For each case, the first line contains a positive number <em>N</em> (≤100), the number of test locations. Then <em>N</em> ranklists follow, each starts with a line containing a positive integer <em>K</em> (≤300), the number of testees, and then <em>K</em> lines containing the registration number (a 13-digit number) and the total score of each testee. All the numbers in a line are separated by a space.</p><h3 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification:"></a>Output Specification:</h3><p>For each test case, first print in one line the total number of testees. Then print the final ranklist in the following format:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">registration_number final_rank location_number local_rank</span><br></pre></td></tr></table></figure><p>The locations are numbered from 1 to <em>N</em>. The output must be sorted in nondecreasing order of the final ranks. The testees with the same score must have the same rank, and the output must be sorted in nondecreasing order of their registration numbers.</p><h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input:"></a>Sample Input:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">5</span><br><span class="line">1234567890001 95</span><br><span class="line">1234567890005 100</span><br><span class="line">1234567890003 95</span><br><span class="line">1234567890002 77</span><br><span class="line">1234567890004 85</span><br><span class="line">4</span><br><span class="line">1234567890013 65</span><br><span class="line">1234567890011 25</span><br><span class="line">1234567890014 100</span><br><span class="line">1234567890012 85</span><br></pre></td></tr></table></figure><h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">9</span><br><span class="line">1234567890005 1 1 1</span><br><span class="line">1234567890014 1 2 1</span><br><span class="line">1234567890001 3 1 2</span><br><span class="line">1234567890003 3 1 2</span><br><span class="line">1234567890004 5 1 4</span><br><span class="line">1234567890012 5 2 2</span><br><span class="line">1234567890002 7 1 5</span><br><span class="line">1234567890013 8 2 3</span><br><span class="line">1234567890011 9 2 4</span><br></pre></td></tr></table></figure></blockquote><p>该题目需要注意的点如下：</p><ol><li>自己创建结构类型，熟悉结构类型的操作</li><li>c++中的sort函数以及自定义比较大小的方法</li><li>由于用户id是13位的，所以使用<code>long long int</code>的类型</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_NUM 30010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">ll <span class="keyword">int</span> registration_number;</span><br><span class="line"><span class="keyword">int</span> final_rank;</span><br><span class="line"><span class="keyword">int</span> location_number;</span><br><span class="line"><span class="keyword">int</span> local_rank;</span><br><span class="line"><span class="keyword">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//自定义比较大小</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Student a, Student b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a.score != b.score) &#123; <span class="keyword">return</span> a.score &gt; b.score; &#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> a.registration_number &lt; b.registration_number;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Student stu[MAX_NUM];</span><br><span class="line"><span class="comment">//输入地址个数</span></span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;N);</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//记录学生总数</span></span><br><span class="line"><span class="keyword">int</span> s = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> s1 = s;</span><br><span class="line"><span class="keyword">int</span> K = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;K);</span><br><span class="line"><span class="comment">//读入学生信息</span></span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; K; j++) &#123;</span><br><span class="line">stu[s].location_number = i+<span class="number">1</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld %d&quot;</span>, &amp;stu[s].registration_number, &amp;stu[s].score);</span><br><span class="line">s++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> s2 = s;</span><br><span class="line"><span class="comment">//对这一个地区的进行排序</span></span><br><span class="line"><span class="built_in">sort</span>(stu + s1, stu + s2,cmp);</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; K; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (j!=<span class="number">0</span> &amp;&amp; stu[s1 + j].score == stu[s1 + j - <span class="number">1</span>].score) &#123; stu[s1 + j].local_rank = stu[s1 + j - <span class="number">1</span>].local_rank; &#125;</span><br><span class="line"><span class="keyword">else</span> &#123; stu[s1 + j].local_rank = j + <span class="number">1</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//对所有学生总排序，然后记录排名</span></span><br><span class="line"><span class="built_in">sort</span>(stu, stu + s, cmp);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, s);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; s; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; stu[i].score == stu[i<span class="number">-1</span>].score) &#123; stu[i].final_rank = stu[i - <span class="number">1</span>].final_rank; &#125;</span><br><span class="line"><span class="keyword">else</span> &#123; stu[i].final_rank = i + <span class="number">1</span>; &#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld %d %d %d\n&quot;</span>,stu[i].registration_number,stu[i].final_rank,stu[i].location_number,stu[i].local_rank);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用以上代码进行提交的时候，发现最后一个例子总是过不去，所以将用户id的类型改写成了字符串的类型，重点记得要修改字符串比较大小的方式。最后成功通过。</p><h2 id="散列——Hash"><a href="#散列——Hash" class="headerlink" title="散列——Hash"></a>散列——Hash</h2><h3 id="hash的定义与整数散列"><a href="#hash的定义与整数散列" class="headerlink" title="hash的定义与整数散列"></a>hash的定义与整数散列</h3><p><strong>思路</strong>：<u>创建hashTable用空间换取时间，那就是直接把输入的数作为数组的下标来对这个数的性质进行统计</u>。散列：“将元素通过一个函数转换为整数，使得该整数可以尽量唯一 地代表这个元素”。</p><p>常用的散列函数有：</p><ol><li>直接定址法。</li><li>平方取中法。</li><li>除留余数法。</li></ol><p>如何解决散列的地址冲突问题：</p><ul><li>线性探查法</li><li>平方探查法</li><li>链地址法</li></ul><h3 id="字符串hash初步"><a href="#字符串hash初步" class="headerlink" title="字符串hash初步"></a>字符串hash初步</h3><p>hash中的key不是整数，而是字符串的时候。</p><p><img src="/images/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/image-20210527201122751.png" alt="image-20210527201122751"></p><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><h3 id="分治"><a href="#分治" class="headerlink" title="分治"></a>分治</h3><p>分治法的三个步骤：</p><ol><li>分解：将原问题分解为若干和原问题拥有相同或相似结构的子问题。</li><li>解决：递归求解所有子问题。如果存在子问题的规模小到可以直接解决，就直接解决它。</li><li>合并：将子问题的解合并为原问题的解。</li></ol><p>需要指出的是，分治法分解出的子问题应当是相互独立、没有交叉的。如果存在两个子问题有相交部分，那么不应当使用分治法解决。</p><h3 id="递归-1"><a href="#递归-1" class="headerlink" title="递归"></a>递归</h3><p>递归逻辑中有两个重要的概念：</p><ol><li>递归边界</li><li>递归式</li></ol><p>递归的经典问题：</p><ol><li>全排列</li><li>八皇后</li></ol><h2 id="贪心"><a href="#贪心" class="headerlink" title="贪心"></a>贪心</h2><h3 id="简单贪心"><a href="#简单贪心" class="headerlink" title="简单贪心"></a>简单贪心</h3><p>贪心法是求解一类最优化问题的方法， 它总是考虑在当前状态下局部最优（或较优）的策略，来使全局的结果达到最优(或较优)。显然，如果采取较优而非最优的策略（最优策略）。</p><p>下面是贪心算法的例题。</p><blockquote><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805298269634560"><strong>1023 组个最小数</strong></a></p><p>给定数字 0-9 各若干个。你可以以任意顺序排列这些数字，但必须全部使用。目标是使得最后得到的数尽可能小（注意 0 不能做首位）。例如：给定两个 0，两个 1，三个 5，一个 8，我们得到的最小的数就是 10015558。</p><p>现给定数字，请编写程序输出能够组成的最小的数。</p><h3 id="输入格式：-3"><a href="#输入格式：-3" class="headerlink" title="输入格式："></a>输入格式：</h3><p>输入在一行中给出 10 个非负整数，顺序表示我们拥有数字 0、数字 1、……数字 9 的个数。整数间用一个空格分隔。10 个数字的总个数不超过 50，且至少拥有 1 个非 0 的数字。</p><h3 id="输出格式：-3"><a href="#输出格式：-3" class="headerlink" title="输出格式："></a>输出格式：</h3><p>在一行中输出能够组成的最小的数。</p><h3 id="输入样例：-4"><a href="#输入样例：-4" class="headerlink" title="输入样例："></a>输入样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 2 0 0 0 3 0 0 1 0</span><br></pre></td></tr></table></figure><h3 id="输出样例：-4"><a href="#输出样例：-4" class="headerlink" title="输出样例："></a>输出样例：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10015558</span><br></pre></td></tr></table></figure></blockquote><p>不是很难，所以直接贴代码了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_NUM 60</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> nums[<span class="number">10</span>] = &#123;&#125;;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> ans[MAX_NUM] = &#123;&#125;;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;nums[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (nums[i] != <span class="number">0</span>) &#123;</span><br><span class="line">ans[j] = i + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">j++;</span><br><span class="line">nums[i]--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="keyword">while</span>(nums[i] != <span class="number">0</span>) &#123;</span><br><span class="line">ans[j] = i + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">j++;</span><br><span class="line">nums[i]--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="区间贪心"><a href="#区间贪心" class="headerlink" title="区间贪心"></a>区间贪心</h3><p>书中的描述蛮有意思的。</p><p><img src="/images/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/image-20210527210523447.png" alt="image-20210527210523447"></p><h2 id="二分"><a href="#二分" class="headerlink" title="二分"></a>二分</h2><h3 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h3><p>关于二分查找的知识点在上文提到过了，所以不再赘述。</p><p><img src="/images/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/image-20210527211947169.png" alt="image-20210527211947169"></p><h3 id="二分法拓展"><a href="#二分法拓展" class="headerlink" title="二分法拓展"></a>二分法拓展</h3><blockquote><p>求多条边组成的凸边形的外接圆的最大半径</p><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定 N 个线段的长度，试将它们头尾相接（顺序任意）地组合成一个凸多边形，使得凸多边形的外接圆的半径最大，求该最大半径。其中 N 不超过 105 ，线段长度均不超过 100 ，要求算法中不涉及坐标的计算。</p><h3 id="考查内容"><a href="#考查内容" class="headerlink" title="考查内容"></a>考查内容</h3><p>二分算法的本质就是通过不断迭代使left 和 right 在固定条件下逐渐靠近真实值，符合一定误差，所以实际上把该题放在二分扩展里面，这个所谓的最大半径的“最大”是不在求解中的，最大应该算题干，先组成一个有外接圆的凸多边形，然后求其半径即可。不要误入歧途在“最大”上绞尽脑汁。</p></blockquote><h3 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h3><h1 id="算法笔记-第五章：数学问题"><a href="#算法笔记-第五章：数学问题" class="headerlink" title="算法笔记-第五章：数学问题"></a>算法笔记-第五章：数学问题</h1><h2 id="简单数学"><a href="#简单数学" class="headerlink" title="简单数学"></a>简单数学</h2><h1 id="算法笔记-第七章：提高篇-1-–数据结构专题（1）"><a href="#算法笔记-第七章：提高篇-1-–数据结构专题（1）" class="headerlink" title="算法笔记-第七章：提高篇(1)–数据结构专题（1）"></a>算法笔记-第七章：提高篇(1)–数据结构专题（1）</h1><h2 id="栈的应用"><a href="#栈的应用" class="headerlink" title="栈的应用"></a>栈的应用</h2>]]></content>
    
    
    
    <tags>
      
      <tag>算法 复习 算法笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo更换主题</title>
    <link href="/2021/05/13/hexo%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/"/>
    <url>/2021/05/13/hexo%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo设置插图"><a href="#Hexo设置插图" class="headerlink" title="Hexo设置插图"></a>Hexo设置插图</h1><p>hexo可以很好的结合Typora进行博客文章的插图处理，就只需要两步操作</p><h2 id="设置图片根目录"><a href="#设置图片根目录" class="headerlink" title="设置图片根目录"></a>设置图片根目录</h2><p>打开<code>格式(O)-图像-设置图片根目录</code>，选择<code>source</code>文件夹（就是<code>_posts</code>上一级），确定，这时候回到文件中，可以看到在文章头部出现了这么一行字：</p><p><img src="/images/hexo%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/image-20210513163932292.png" alt="设置图片根目录"></p><h2 id="Typora配置"><a href="#Typora配置" class="headerlink" title="Typora配置"></a>Typora配置</h2><p>在Typora中设置图像粘贴位置</p><p>打开<code>格式(O)-图像-全局图像设置</code>，在“插入图片时…”选择<strong>复制到指定路径</strong>，然后在下面写入<code>../images/$&#123;filename&#125;</code>（<code>$</code>中的参数是以文件名命名的文件夹），并勾选“优先使用相对路径”。</p><p><img src="/images/hexo%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/image-20210513164424278.png" alt="typora更改路径"></p><p>完成上面这两个步骤就可以在自己hexo的主页中看到自己上传的图片了。</p><h1 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a>设置主题</h1><p>首先去hexo的主题官网<a href="https://hexo.io/themes/">Themes | Hexo</a>选一个主题，这里就介绍最简单的NEXT主题叭。</p><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>进入hexo对应的目录，使用git运行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure><p>git结果如下图</p><p><img src="/images/hexo%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/image-20210513184904009.png" alt="下载主题"></p><h2 id="设置主题-1"><a href="#设置主题-1" class="headerlink" title="设置主题"></a>设置主题</h2><p>修改当前目录下的<code>_config.yml</code>文件，找到 theme 字段，并将其值更改为 next。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>然后使用git重新部署网站</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><p>但是出现了如下错误 <code>&#123;% extends ‘_layout.swig‘ %&#125; &#123;% import ‘_macro/post.swig‘ as post_template %&#125;</code></p><p><img src="/images/hexo%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/image-20210513192500960.png" alt="next出错"></p><p>之后在网上找到该问题的答案，用npm安装swig。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-swig --save</span><br></pre></td></tr></table></figure><p>之后就可以看到next的主题风格了。</p><p><img src="/images/hexo%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/image-20210513194508921.png" alt="next主页"></p><h2 id="修改网站中的配置文件"><a href="#修改网站中的配置文件" class="headerlink" title="修改网站中的配置文件"></a>修改网站中的配置文件</h2><p>在当前目录下进入对<code>_config.yml</code>文件内容进行修改。</p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo插图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大数据编程第一天</title>
    <link href="/2021/05/11/%E7%94%A8%E6%88%B7%E7%94%BB%E5%83%8F/"/>
    <url>/2021/05/11/%E7%94%A8%E6%88%B7%E7%94%BB%E5%83%8F/</url>
    
    <content type="html"><![CDATA[<p>因为本科专业是大数据的，但是三年下来好像对大数据没有特别深的了解，所以最近打算跟着B站上的教程学一手大数据的项目。是<a href="https://www.bilibili.com/video/BV1Mp4y1x7y7?t=332">黑马程序员_大数据实战之用户画像企业级项目,快速进入500强企业的捷径_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili</a>用到了spark的相关知识。</p><h1 id="什么是用户画像"><a href="#什么是用户画像" class="headerlink" title="什么是用户画像"></a>什么是用户画像</h1><p>用户画像通常应用于营销推广和个性化推荐。</p><ol><li>数据仓库<ul><li>离线数据仓库，例如点击流日志数据</li><li>实时数据仓库</li></ul></li><li>用户画像<ul><li>以用户为主题，将用户数据进行标签化，给用户打上标签，获取用户群体和画像</li></ul></li><li>推广营销和个性化推荐<ul><li>使用用户画像的标签数据</li></ul></li></ol><p><a href="">用户画像：将用户数据标签化，给用户打上标签。</a></p><blockquote><p>用户数据有哪些</p><ul><li>基本信息数据<ul><li>基于基本信息数据构建标签，称为<code>User Personal</code></li></ul></li><li>使用APP或网站产生数据<ul><li>流量日志数据、订单数据、购物车数据、收藏数据</li><li>构建标签，称为<code>User Profile</code></li></ul></li></ul></blockquote><p><strong>重点来了</strong>：经过我几天的观察以及搜索，发现没有办法获取这个教程相关的资料。所以又只能自己一步步学习了。😔，太难了。目前就是一边快速看视频一边努力找适合自己的项目。所以接下来记录的都是我自己的学习过程。</p><h1 id="搭建大数据环境"><a href="#搭建大数据环境" class="headerlink" title="搭建大数据环境"></a>搭建大数据环境</h1><p>第一次知道可以使用ClouderaManager或者Ambari直接对大数据平台进行搭建。本文使用CM安装CDH从而对大数据平台进行安装以及管理。</p><p>首先使用VMware搭建了三个Centos系统的主机，并配置了公网ip地址。其中废了好大的劲用来配置，主要参考了下面的文章<a href="https://blog.csdn.net/chsong888/article/details/79358959"> 一、Vmware虚拟机设置固定IP地址_半个西瓜-CSDN博客</a></p><p>之后根据<a href="https://blog.csdn.net/m0_38017084/article/details/82218559?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-2.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-2.control">cloudera环境搭建_扣脚小生-CSDN博客_cloudera</a>安装Cloudera环境。</p><h2 id="集群同步脚本"><a href="#集群同步脚本" class="headerlink" title="集群同步脚本"></a>集群同步脚本</h2><p>根据网上的其他资料，补充一下博客中没有的，如何设置集群同步脚本。不过在设置集群同步脚本之前，最好先进行<strong>SSH免密登录</strong>。</p><p>这是需要自己完成一个脚本的，从而之后方便调用。</p><p>具体代码即运行结果如下</p><h3 id="编写集群同步自行命令的脚本"><a href="#编写集群同步自行命令的脚本" class="headerlink" title="编写集群同步自行命令的脚本"></a>编写集群同步自行命令的脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">[root@node101 ~]# vi &#x2F;usr&#x2F;local&#x2F;bin&#x2F;xcall.sh</span><br><span class="line">[root@node101 ~]# </span><br><span class="line">[root@node101 ~]# chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;xcall.sh</span><br><span class="line">[root@node101 ~]# </span><br><span class="line">[root@node101 ~]# more &#96;which xcall.sh&#96;</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">#@author :yinzhengjie</span><br><span class="line">#blog:http:&#x2F;&#x2F;www.cnblogs.com&#x2F;yinzhengjie</span><br><span class="line">#EMAIL:y1053419035@qq.com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#判断用户是否传参</span><br><span class="line">if [ $# -lt 1 ];then</span><br><span class="line">        echo &quot;请输入参数&quot;</span><br><span class="line">        exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">#获取用户输入的命令</span><br><span class="line">cmd&#x3D;$@</span><br><span class="line"></span><br><span class="line">for (( i&#x3D;101;i&lt;&#x3D;103;i++ ))</span><br><span class="line">do</span><br><span class="line">        #使终端变绿色 </span><br><span class="line">        tput setaf 2</span><br><span class="line">        echo &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; node$&#123;i&#125;.yinzhengjie.org.cn : $cmd &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">        #使终端变回原来的颜色，即白灰色</span><br><span class="line">        tput setaf 7</span><br><span class="line">        #远程执行命令</span><br><span class="line">        ssh node$&#123;i&#125;.yinzhengjie.org.cn  $cmd</span><br><span class="line">        #判断命令是否执行成功</span><br><span class="line">        if [ $? &#x3D;&#x3D; 0 ];then</span><br><span class="line">                echo &quot;命令执行成功&quot;</span><br><span class="line">        fi</span><br><span class="line">done</span><br><span class="line">[root@node101 ~]# </span><br><span class="line">[root@node101 ~]# xcall.sh ls -d &#x2F;home&#x2F;yinzhengjie&#x2F;</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; node101.yinzhengjie.org.cn : ls -d &#x2F;home&#x2F;yinzhengjie&#x2F; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">&#x2F;home&#x2F;yinzhengjie&#x2F;</span><br><span class="line">命令执行成功</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; node102.yinzhengjie.org.cn : ls -d &#x2F;home&#x2F;yinzhengjie&#x2F; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">&#x2F;home&#x2F;yinzhengjie&#x2F;</span><br><span class="line">命令执行成功</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; node103.yinzhengjie.org.cn : ls -d &#x2F;home&#x2F;yinzhengjie&#x2F; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">&#x2F;home&#x2F;yinzhengjie&#x2F;</span><br><span class="line">命令执行成功</span><br><span class="line">[root@node101 ~]# </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="编写集群同步配置文件的脚本"><a href="#编写集群同步配置文件的脚本" class="headerlink" title="编写集群同步配置文件的脚本"></a>编写集群同步配置文件的脚本</h3><p>这个脚本与之前的脚本的区别就在于脚本中只对后面两个从节点进行了配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">[root@node101 ~]# vi &#x2F;usr&#x2F;local&#x2F;bin&#x2F;xrsync.sh</span><br><span class="line">[root@node101 ~]# </span><br><span class="line">[root@node101 ~]# </span><br><span class="line">[root@node101 ~]# chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;xrsync.sh</span><br><span class="line">[root@node101 ~]# </span><br><span class="line">[root@node101 ~]# </span><br><span class="line">[root@node101 ~]# more &#96;which xrsync.sh&#96;</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">#@author :yinzhengjie</span><br><span class="line">#blog:http:&#x2F;&#x2F;www.cnblogs.com&#x2F;yinzhengjie</span><br><span class="line">#EMAIL:y1053419035@qq.com</span><br><span class="line"></span><br><span class="line">#判断用户是否传参</span><br><span class="line">if [ $# -lt 1 ];then</span><br><span class="line">    echo &quot;请输入参数&quot;;</span><br><span class="line">    exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#获取文件路径</span><br><span class="line">file&#x3D;$@</span><br><span class="line"></span><br><span class="line">#获取子路径</span><br><span class="line">filename&#x3D;&#96;basename $file&#96;</span><br><span class="line"></span><br><span class="line">#获取父路径</span><br><span class="line">dirpath&#x3D;&#96;dirname $file&#96;</span><br><span class="line"></span><br><span class="line">#获取完整路径</span><br><span class="line">cd $dirpath</span><br><span class="line">fullpath&#x3D;&#96;pwd -P&#96;</span><br><span class="line"></span><br><span class="line">#同步文件到DataNode</span><br><span class="line">for (( i&#x3D;102;i&lt;&#x3D;103;i++ ))</span><br><span class="line">do</span><br><span class="line">    #使终端变绿色 </span><br><span class="line">    tput setaf 2</span><br><span class="line">    echo &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; node$&#123;i&#125;.yinzhengjie.org.cn : $file &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">    #使终端变回原来的颜色，即白灰色</span><br><span class="line">    tput setaf 7</span><br><span class="line">    #远程执行命令</span><br><span class="line">    rsync -lr $filename &#96;whoami&#96;@node$&#123;i&#125;.yinzhengjie.org.cn:$fullpath</span><br><span class="line">    #判断命令是否执行成功</span><br><span class="line">    if [ $? &#x3D;&#x3D; 0 ];then</span><br><span class="line">        echo &quot;命令执行成功&quot;</span><br><span class="line">    fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h2 id="配置java环境"><a href="#配置java环境" class="headerlink" title="配置java环境"></a>配置java环境</h2><p>三个机子都需要配置java环境。关于如何下载老版本的java链接如下<a href="https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html">Java Archive Downloads - Java SE 8 (oracle.com)</a></p><p>但是安装的过程中出现了报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java: error while loading shared libraries: libjli.so: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure><p>原因应该是在解压<code>jdk-8u181-linux-x64.tar.gz</code>的时候，由于jdk文件过大，直接拖入虚拟机的时候造成了文件的损坏，所以解决方案见<a href="https://blog.csdn.net/liangliang233/article/details/105968513/?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-0&spm=1001.2101.3001.4242">(linux解压出错 归档文件中异常的 EOF 文件不完整_liangliang233的博客-CSDN博客</a>之后就可以了。重新安装一下就可以了。</p><h2 id="安装CM"><a href="#安装CM" class="headerlink" title="安装CM"></a>安装CM</h2><p>由于最近CM的官网要求下载相关文件需要购买，所以特此找了一个有百度网盘的下载教程<a href="https://cloud.tencent.com/developer/article/1185607">Centos7离线安装Cloudera Manager 5.14.1 - 云+社区 - 腾讯云 (tencent.com)</a>但主要的流程还是跟着之前的来的，只是中间换了一些步骤。</p><p>主要记录一下rpm的安装方式。</p><p>按照<a href="https://blog.csdn.net/u010452388/article/details/102822956?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-0&spm=1001.2101.3001.4242"> CDH5.16.1采用rpm+http方式离线部署（图解详细流程）_阿顾的博客-CSDN博客</a>这篇博客进行的。其中数据库的配置部分其中综合了两篇文章的共同部分。</p><h2 id="分区扩容"><a href="#分区扩容" class="headerlink" title="分区扩容"></a>分区扩容</h2><p>linux的分区如何扩容可以参考这一篇<a href="https://zhuanlan.zhihu.com/p/83340525">博客</a>。在操作的过程中需要对部分的分区进行扩容。</p><p>最后成功搭建了Cloudera-Manager环境，但是由于虚拟机的内存不够，怎么运行都很卡。所以至此，切换了研究的思路。打算自己搭建大数据环境了。</p><h1 id="Spark电商实战项目"><a href="#Spark电商实战项目" class="headerlink" title="Spark电商实战项目"></a>Spark电商实战项目</h1><p>这一部分的内容是根据<a href="https://blog.csdn.net/u012318074/category_6744423.html">Spark大型电商项目实战_Erik_ly的博客-CSDN博客</a>进行的。</p><h2 id="常用的命令"><a href="#常用的命令" class="headerlink" title="常用的命令"></a>常用的命令</h2><p>在这之前先记录常用的命令</p><blockquote><ul><li>启动mysql</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service mysql start</span><br><span class="line">service mysql status   #验证</span><br></pre></td></tr></table></figure><ul><li>启动zookeeper</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zkServer.sh start    #每个节点都要执行</span><br></pre></td></tr></table></figure><ul><li>启动hdfs</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">start-dfs.sh   #在主机上运行</span><br><span class="line">jps   #在三台机子上使用jps查看</span><br></pre></td></tr></table></figure><ul><li>启动yarn集群</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">start-yarn.sh    #hadoop01启动start-yarn.sh</span><br><span class="line">yarn-daemon.sh start resourceManager   #hadoop02、3手动启动ResourceManager</span><br></pre></td></tr></table></figure><ul><li>更改hdfs中的文件的所属用户</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u hdfs hdfs dfs -chown root &#x2F;user&#x2F;root</span><br></pre></td></tr></table></figure><ul><li>获取hdfs的正确端口号</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs getconf -confKey fs.default.name</span><br></pre></td></tr></table></figure></blockquote><h2 id="在使用过程中常见的问题"><a href="#在使用过程中常见的问题" class="headerlink" title="在使用过程中常见的问题"></a>在使用过程中常见的问题</h2><p>这一部分介绍项目在进行和使用的过程中遇到的一些问题。</p><h3 id="启动hadoop集群的时候没有namenode"><a href="#启动hadoop集群的时候没有namenode" class="headerlink" title="启动hadoop集群的时候没有namenode"></a>启动hadoop集群的时候没有namenode</h3><p>在主机的终端使用<code>start-all.sh</code>之后，使用jps查看，发现结果如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@sun sun]# jps</span><br><span class="line">3270 QuorumPeerMain</span><br><span class="line">7159 SecondaryNameNode</span><br><span class="line">2295 Main</span><br><span class="line">7310 ResourceManager</span><br><span class="line">7582 Jps</span><br><span class="line">3215 AlertPublisher</span><br><span class="line">3311 DataNode</span><br></pre></td></tr></table></figure><p>主要根据这篇文章进行修改<a href="https://blog.csdn.net/weixin_44318830/article/details/104339471">完美解决Hadoop集群无法正常关闭的问题!_Alice菌的博客-CSDN博客</a>和<a href="https://blog.csdn.net/hlx20080808/article/details/56670886">hadoop 关闭datanode节点时发生异常：no datanode to stop_分享我的点点滴滴，在成长路上与你同行！-CSDN博客</a></p><h3 id="hadoop没有办法正常关闭"><a href="#hadoop没有办法正常关闭" class="headerlink" title="hadoop没有办法正常关闭"></a>hadoop没有办法正常关闭</h3><p>在进行<code>stop-all.sh</code>的时候，显示的是</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# stop-dfs.sh</span><br><span class="line">Stopping namenodes on [master]</span><br><span class="line">master: no namenode to stop</span><br><span class="line">slave2: no datanode to stop</span><br><span class="line">slave1: no datanode to stop</span><br><span class="line">…</span><br></pre></td></tr></table></figure><p>这个问题的出现是由于hadoop集群关闭的时候，Namenode或者DataNode的pid文件找不着。所以就需要强制关闭hadoop，即使用<code>kill -9 pid</code>.但是在使用这个命令关闭datanode的时候总是会有新的datanode进程被创建，所以需要使用命令<code>cd /proc/pid</code>和<code>cat status</code>对这个进行的父进程进行查看，kill掉父进程，但是发现一会又创建出来了datanode。</p><p>所以需要先使用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find -name dfs</span><br></pre></td></tr></table></figure><p>，找到所有的dfs文件，之后将除了eclipse后面的那个都删除，之后再删除<code>/tmp</code>目录中的一些文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@sun2 tmp]# rm -rf hsperfdata*</span><br><span class="line">[root@sun2 tmp]# rm -rf hadoop*</span><br><span class="line">[root@sun2 tmp]# rm -rf yarn*</span><br></pre></td></tr></table></figure><p>之后再使用<code>jps</code>进行查看，就发现都没有了。</p><p>之后需要修改pid文件的目录，在配置文件中$HADOOP_HOME/conf/hadoop-env.sh中添加如下，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export HADOOP_PID_DIR=$&#123;HADOOP_HOME&#125;/pids</span><br></pre></td></tr></table></figure><h3 id="hadoop配置文件"><a href="#hadoop配置文件" class="headerlink" title="hadoop配置文件"></a>hadoop配置文件</h3><p>修改master主机修改Hadoop如下配置文件，这些配置文件都位于/usr/local/hadoop/etc/hadoop目录下。<br>修改slaves：<br>这里把DataNode的主机名写入该文件，每行一个。这里让master节点主机仅作为NameNode使用。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sun2</span><br><span class="line">sun3</span><br></pre></td></tr></table></figure><p>修改core-site.xml，其中<code>hadoop.tmp.dir</code>不是一个临时文件，是存放所有hadoop中数据的文件，其目录地址为：<code>file:/usr/local/hadoop/tmp</code>。<code>fs.default.name</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/usr/local/hadoop/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">description</span>&gt;</span>Abase for other temporary directories.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://master:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改hdfs-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hadoop/data/namenode<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hadoop/data/datanode<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hadoop/data/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">value</span>&gt;</span>192.168.220.101:50070<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>dfs.name.dir</code>这个参数用于确定将HDFS文件系统的<strong>元信息保存</strong>在什么目录下。</p><p><code>dfs.data.dir</code>这个参数用于确定将<strong>HDFS文件系统的数据保存</strong>在什么目录下。</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>因为在之前配置过了虚拟机的IP地址，所以这里直接就进行hadoop等环境的配置了。具体细节见原博客，我只说明其中出问题的部分。</p><blockquote><p>在原博客中的对path环境变量进行设置的时候都缺少对原始path的引用，一定要注意。</p></blockquote><p>在linux中运行mysql的命令是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><h3 id="hive安装"><a href="#hive安装" class="headerlink" title="hive安装"></a>hive安装</h3><p>在hive的安装过程中，配置<code>hive-site.xml</code>之后启动hive，出现报错，所以将百度网盘中的<code>hive-site.xml</code>复制进虚拟机中 ，进行替换。</p><blockquote><h4 id="Linux中使用vim进行单词查找的操作"><a href="#Linux中使用vim进行单词查找的操作" class="headerlink" title="Linux中使用vim进行单词查找的操作"></a>Linux中使用vim进行单词查找的操作</h4><p>从开头搜索</p><p>在命令模式下，输入/你要查找的字符</p><p>按下回车，可以看到vim把光标移动到该字符处</p><p>再按n（小写）查看下一个匹配</p><p>按N(大写）查看上一个匹配（capslock切换大小写，也可以在小写状态下按shift+n）</p><p>从结尾处搜索</p><p>？要搜索的字符串或字符</p></blockquote><p>之后在使用hive创建表格的时候出现了报错</p><blockquote><p>FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask. MetaException(message:Got exception: java.io.IOException Failed on local exception: com.google.protobuf.InvalidProtocolBufferException: Protocol message end-group tag did not match expected tag.; Host Details : local host is: “sun/192.168.220.101”; destination host is: “sun”:9000; )</p></blockquote><p>这里需要先修改一下之前的<code>hive-site.xml</code>文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">  &lt;name&gt;javax.jdo.option.ConnectionURL&lt;&#x2F;name&gt;</span><br><span class="line">  &lt;value&gt;jdbc:mysql:&#x2F;&#x2F;192.168.220.101:3306&#x2F;hive_metadata?serverTimezone&#x3D;GMT&lt;&#x2F;value&gt;</span><br><span class="line">  &lt;description&gt;JDBC connect string for a JDBC metastore&lt;&#x2F;description&gt;</span><br><span class="line">&lt;&#x2F;property&gt;</span><br></pre></td></tr></table></figure><p>数据库连接的部分如上修改。之后在<code>hive</code>的<code>bin</code>目录下运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;schematool -dbType mysql -initSchema</span><br></pre></td></tr></table></figure><p>成功之后即可进行下一步。</p><p>但是在创建表格的时候继续报错。于是使用命令 <code>hive -hiveconf hive.root.logger=DEBUG,console\</code>对hive内的内容进行打印。报错如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR ql.Driver: FAILED: Execution Error, return code 1 from org.apache.hadoop.hive.ql.exec.DDLTask. MetaException(message:Got exception: org.apache.hadoop.security.AccessControlException Permission denied: user&#x3D;root, access&#x3D;WRITE, inode&#x3D;&quot;&#x2F;user&quot;:hdfs:supergroup:drwxr-xr-x</span><br></pre></td></tr></table></figure><p>这个样子应该是在hadoop中没有给root用户配置权限。定睛一看。发现在hdfs中的user目录下都没有root用户。执行以下命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo -u hdfs hadoop fs -mkdir &#x2F;user&#x2F;root     #在hdfs中创建root用户</span><br><span class="line">hadoop fs -chmod 777 &#x2F;user&#x2F;root              #给root用户配置权限</span><br></pre></td></tr></table></figure><p>之后就可以在hive中创建表格了。之后上传<code>users.txt</code>文件到<code>/usr/local</code>的过程中不知道为什么显示的users表中的内容都是null。但是经过其他的教程来看问题应该不大，所以先不管他。</p><h3 id="zookeeper集群安装"><a href="#zookeeper集群安装" class="headerlink" title="zookeeper集群安装"></a>zookeeper集群安装</h3><p>按照文章的步骤进行，没有出现问题。</p><h3 id="kafka安装"><a href="#kafka安装" class="headerlink" title="kafka安装"></a>kafka安装</h3><p>按照文章的步骤进行，没有出现问题</p><h3 id="flume安装"><a href="#flume安装" class="headerlink" title="flume安装"></a>flume安装</h3><p>在flume的安装过程中出现了问题，其中需要把9000的端口号改成8020</p><h3 id="Spark安装"><a href="#Spark安装" class="headerlink" title="Spark安装"></a>Spark安装</h3><p>按照文章的步骤可以进行安装，但是在进行spark作业提交的时候会出现报错，报错如下</p><blockquote><p>java.lang.OutOfMemoryError: Java heap space</p><p>spark处理数据的时候遇到内存不足的报错</p></blockquote><h3 id="MySQL及客户端安装"><a href="#MySQL及客户端安装" class="headerlink" title="MySQL及客户端安装"></a>MySQL及客户端安装</h3><p>这里都是在自己的windows环境中进行配置的，由于这一部分比较占用内存，所以先不进行操作</p><h3 id="环境搭建-Maven安装及配置idea"><a href="#环境搭建-Maven安装及配置idea" class="headerlink" title="环境搭建-Maven安装及配置idea"></a>环境搭建-Maven安装及配置idea</h3><p>现在大部分的开发都是使用idea了，所以这里的开发环境也选择idea了。参考的博客是<a href="https://blog.csdn.net/qq_32588349/article/details/51461182">使用IntelliJ IDEA 配置Maven（入门）_记事本-CSDN博客_idea配置maven</a></p><h4 id="下载maven级配置"><a href="#下载maven级配置" class="headerlink" title="下载maven级配置"></a>下载maven级配置</h4><p>现在的地址在<a href="https://archive.apache.org/dist/maven/maven-3/3.3.9/binaries/">Index of /dist/maven/maven-3/3.3.9/binaries (apache.org)</a>，</p>]]></content>
    
    
    
    <tags>
      
      <tag>python spark</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在echarts中利用百度地图api绘制国外地图</title>
    <link href="/2021/04/29/%E5%9C%A8echarts%E4%B8%AD%E5%88%A9%E7%94%A8%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE%E7%BB%98%E5%88%B6%E5%9B%BD%E5%A4%96%E5%9C%B0%E5%9B%BE/"/>
    <url>/2021/04/29/%E5%9C%A8echarts%E4%B8%AD%E5%88%A9%E7%94%A8%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE%E7%BB%98%E5%88%B6%E5%9B%BD%E5%A4%96%E5%9C%B0%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<p>由于我最近要利用High-D数据集做一个数据可视化的大屏，所以下面来看看如何利用echarts+百度地图api对国外地图进行简单的绘制。本文利用了jQuery，不会的同学可以先简单了解一下。</p><h2 id="申请百度地图的JavaScript-API"><a href="#申请百度地图的JavaScript-API" class="headerlink" title="申请百度地图的JavaScript API"></a>申请百度地图的JavaScript API</h2><p><a href="http://lbsyun.baidu.com/index.php?title=jspopular3.0">百度地图JavaScript API</a>是一套由JavaScript语言编写的应用程序接口，可帮助您在网站中构建功能丰富、交互性强的地图应用，支持PC端和移动端基于浏览器的地图应用开发，且支持HTML5特性的地图开发。本项目使用的是v3.0版本。</p><p>申请API的具体流程如下图</p><img src="/images/在echarts中利用百度地图绘制国外地图/image-20210429214642909.png" alt="image-20210429214642909" style="zoom:50%;" /><p>其中，需要注意的是在第三步获取服务密钥的时候，应用类型选择浏览器端，申请之后就可以在控制台看到了。</p><img src="/images/在echarts中利用百度地图绘制国外地图/image-20210429215213204.png" alt="image-20210429215213204" style="zoom:50%;" /><h2 id="Echarts相关资源下载"><a href="#Echarts相关资源下载" class="headerlink" title="Echarts相关资源下载"></a>Echarts相关资源下载</h2><p>之后是在echarts的<a href="https://github.com/apache/echarts/tree/master/dist">官方github</a>中下载相应的js文件，在html中引入的js文件从打包后的<code>dist</code>文件夹中拿：<code>dist/echarts.js</code>和<code>dist/extension/bmap.js</code>，之后再把jquery文件导入到对应的html文件中。</p><h2 id="Echarts官方实例的应用"><a href="#Echarts官方实例的应用" class="headerlink" title="Echarts官方实例的应用"></a>Echarts官方实例的应用</h2><p>其中，echarts官网中的<a href="https://echarts.apache.org/examples/zh/editor.html?c=effectScatter-bmap">全国主要城市空气质量图</a>是利用bmap实现的。html文件的代码如下。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">        #main &#123;</span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%;height:800px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./js/echarts.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./js/bmap.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://api.map.baidu.com/api?v=3.0&amp;ak=yourapk&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./js/mymap.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其中，<code>mymap.js</code>文件是自己的新建文件，也就是将上面链接中的完整代码复制过来的。去掉<code>import * as echarts from &#39;echarts&#39;;</code>这一行。之后就可以在本地运行，进行查看。如下图所示。</p><img src="/images/在echarts中利用百度地图绘制国外地图/image-20210430000527340.png" alt="image-20210430000527340" style="zoom:40%;" /><h2 id="带入到实际实例中"><a href="#带入到实际实例中" class="headerlink" title="带入到实际实例中"></a>带入到实际实例中</h2><p>本次项目使用的是德国的地图。</p><p>其实百度地图api还是很友善的，因为不管你的需求是国内还是国外它都画的挺详细的（至少在我需求的领域是这个样子）。所以当你想要定位到别的国家的时候，直接修改bmap的center属性就好了，不需要再加载其他国家的地图包之类的了。但是通常其他国家会比中国小，所以有的时候也需要修改地图的缩放程度。自己想要的的经纬度可以使用<a href="http://api.map.baidu.com/lbsapi/getpoint/index.html">百度地图的坐标拾取器 </a>获得。在自己代码中找到下面的地方进行修改。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">center: [<span class="number">9.967067</span>, <span class="number">53.578978</span>],</span><br><span class="line">zoom: <span class="number">7</span>,</span><br></pre></td></tr></table></figure><p>可以看到德国的轮廓被白实线勾勒出来。如下图所示</p><p><img src="/images/%E5%9C%A8echarts%E4%B8%AD%E5%88%A9%E7%94%A8%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE%E7%BB%98%E5%88%B6%E5%9B%BD%E5%A4%96%E5%9C%B0%E5%9B%BE/image-20210511163319564.png" alt="image-20210511163319564"></p><p>如何去除左下角的百度logo和上面居中的题目。左下角的logo需要添加css内容</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.BMap_cpyCtrl</span> &#123;</span><br><span class="line">            <span class="attribute">display</span>: none;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="selector-class">.anchorBL</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: none;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>标题就删除option中的title，即删掉如下代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: &#123;</span><br><span class="line">        text: &#39;全国主要城市空气质量 - 百度地图&#39;,</span><br><span class="line">        subtext: &#39;data from PM25.in&#39;,</span><br><span class="line">        sublink: &#39;http:&#x2F;&#x2F;www.pm25.in&#39;,</span><br><span class="line">        left: &#39;center&#39;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p>地图的样式并不是我们想要的，所以需要对地图的具体样式进行修改，可以使用百度提供的<a href="https://lbsyun.baidu.com/customv2/editor/37ac49dc514ca193f95359ab99c72aee">百度地图个性化编辑器 (baidu.com)</a>对地图进行个性化定制。根据自己的需求定制后点击编辑json，可以获得此地图样式对应的代码。之后把代码复制到<code>mymap.js</code>中的<code>styleJson</code>就可以看到内容发生了改变。下面是我的样式对应的代码和结果。并且为了显示具体的城市和街道名称，需要将zoom调至15。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br></pre></td><td class="code"><pre><span class="line">mapStyle: &#123;</span><br><span class="line">            styleJson: [&#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#fa0404ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;land&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#091220ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;water&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#113549ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;green&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#0e1b30ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;building&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;building&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffb3&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;building&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#dadadab3&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subwaystation&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#b15454B2&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;education&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#e4f1f1ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;medical&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#f0dedeff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;scenicspots&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#e2efe5ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;weight&quot;</span>: <span class="string">&quot;4&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#f7c54dff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#fed669ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#8f5a33ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.icon&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;weight&quot;</span>: <span class="string">&quot;2&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#d8d8d8ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffeebbff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#525355ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;weight&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#d8d8d8ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#979c9aff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;railway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;weight&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;railway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#123c52ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;railway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#12223dff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;weight&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#d8d8d8ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffff00&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#979c9aff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;continent&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;continent&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.icon&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;continent&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#333333ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;continent&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;city&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.icon&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;city&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;city&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#454d50ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;city&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;town&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.icon&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;town&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;town&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#454d50ff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;town&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;road&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#12223dff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;poilabel&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;districtlabel&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;road&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;road&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;road&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffff00&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;district&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;poilabel&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.icon&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;poilabel&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#2dc4bbff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;poilabel&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffff00&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;manmade&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#12223dff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;districtlabel&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;entertainment&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;shopping&quot;</span>,</span><br><span class="line">                <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#12223dff&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><img src="/images/%E5%9C%A8echarts%E4%B8%AD%E5%88%A9%E7%94%A8%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE%E7%BB%98%E5%88%B6%E5%9B%BD%E5%A4%96%E5%9C%B0%E5%9B%BE/image-20210511170026972.png" alt="image-20210511170026972"></p><h2 id="自定义绘制层"><a href="#自定义绘制层" class="headerlink" title="自定义绘制层"></a>自定义绘制层</h2><p>在地图中做出类似百度地图那种路线中有绿有黄有红的感觉。代表路段不同的拥堵程度，就需要使用百度地图api中的<a href="https://lbsyun.baidu.com/index.php?title=jspopular3.0/guide/drawlayer">JavaScript API - 自定义绘制层 | 百度地图API SDK (baidu.com)</a>介绍挺详细的，但是还是会有一些问题。所以在这里还是进行简单的介绍一下。</p><p>首先为了确定公路，需要获得公路的坐标。本项目打算画六段路，所以获取了七个坐标。再mymap.js中创建变量。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> allpoints = &#123;</span><br><span class="line">    <span class="string">&#x27;汉堡&#x27;</span>:[</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.959032</span>, <span class="number">53.574087</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.961734</span>, <span class="number">53.577172</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.962316</span>, <span class="number">53.578091</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.964544</span>, <span class="number">53.580444</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.966556</span>, <span class="number">53.582198</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.968137</span>, <span class="number">53.583753</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.970868</span>, <span class="number">53.584396</span>),</span><br><span class="line">    ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中<code>BMap.Point</code>是一个地理坐标点 ，具体的操作可以看百度api对应的文档，<a href="https://lbsyun.baidu.com/cms/jsapi/reference/jsapi_reference.html#a1b0">百度地图JSAPI 2.0类参考 (baidu.com)</a>下面是通过一段线将这七个点连起来。</p><p>由于本项目是在echarts中使用的百度地图api，所以需要通过echarts调用。具体代码如下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> state_name=<span class="string">&#x27;汉堡&#x27;</span></span><br><span class="line"><span class="comment">//获得bmap</span></span><br><span class="line"><span class="keyword">var</span> bmap = myChart.getModel().getComponent(<span class="string">&#x27;bmap&#x27;</span>).getBMap();</span><br><span class="line"><span class="comment">//    首先清空覆盖物</span></span><br><span class="line"><span class="keyword">var</span> allOverlay = bmap.getOverlays();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; allOverlay.length -<span class="number">1</span>; i++)&#123;</span><br><span class="line">    bmap.removeOverlay(allOverlay[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//添加折线,并进行位置的修改</span></span><br><span class="line"><span class="comment">//    绿色的折线</span></span><br><span class="line"><span class="keyword">var</span> curve = <span class="keyword">new</span> BMap.Polyline(allPoints[state_name], &#123;<span class="attr">strokeColor</span>:<span class="string">&quot;#1aff00&quot;</span>,<span class="attr">strokeWeight</span>:<span class="number">8</span>, <span class="attr">strokeOpacity</span>:<span class="number">1</span>&#125;);</span><br><span class="line">bmap.addOverlay(curve);</span><br><span class="line"><span class="keyword">var</span> curve_red = <span class="keyword">new</span> BMap.Polyline([allPoints[state_name][<span class="number">3</span>], allPoints[state_name][<span class="number">4</span>]], &#123;<span class="attr">strokeColor</span>:<span class="string">&quot;#ff0000&quot;</span>,<span class="attr">strokeWeight</span>:<span class="number">8</span>, <span class="attr">strokeOpacity</span>:<span class="number">1</span>&#125;);</span><br><span class="line">bmap.addOverlay(curve_red);</span><br><span class="line"><span class="comment">//黄色的折线</span></span><br><span class="line"><span class="keyword">var</span> curve_yellow = <span class="keyword">new</span> BMap.Polyline([ allPoints[state_name][<span class="number">1</span>],allPoints[state_name][<span class="number">2</span>]], &#123;<span class="attr">strokeColor</span>:<span class="string">&quot;#ffb700&quot;</span>,<span class="attr">strokeWeight</span>:<span class="number">8</span>, <span class="attr">strokeOpacity</span>:<span class="number">1</span>&#125;);</span><br><span class="line">bmap.addOverlay(curve_yellow);</span><br><span class="line"><span class="comment">// 绘制中心点</span></span><br><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> BMap.Marker(centers[state_name]);</span><br><span class="line">bmap.addOverlay(p);</span><br></pre></td></tr></table></figure><p>由于主要是对图层进行添加，所以还应<strong>删除bmap中的series的内容</strong>。最后的结果如下图所示。</p><p><img src="/images/%E5%9C%A8echarts%E4%B8%AD%E5%88%A9%E7%94%A8%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE%E7%BB%98%E5%88%B6%E5%9B%BD%E5%A4%96%E5%9C%B0%E5%9B%BE/image-20210511202950352.png" alt="image-20210511202950352"></p><p><code>mymap.js</code>的源码如下。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> chartDom = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;main&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> myChart = echarts.init(chartDom);</span><br><span class="line"><span class="keyword">var</span> option;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> allPoints = &#123;</span><br><span class="line">    <span class="string">&#x27;汉堡&#x27;</span>:[</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.959032</span>, <span class="number">53.574087</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.961734</span>, <span class="number">53.577172</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.962316</span>, <span class="number">53.578091</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.964544</span>, <span class="number">53.580444</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.966556</span>, <span class="number">53.582198</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.968137</span>, <span class="number">53.583753</span>),</span><br><span class="line">        <span class="keyword">new</span> BMap.Point(<span class="number">9.970868</span>, <span class="number">53.584396</span>),</span><br><span class="line">    ],</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">option = &#123;</span><br><span class="line">    tooltip : &#123;</span><br><span class="line">        trigger: <span class="string">&#x27;item&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    bmap: &#123;</span><br><span class="line">        center: [<span class="number">9.967067</span>, <span class="number">53.578978</span>],</span><br><span class="line">        zoom: <span class="number">15</span>,</span><br><span class="line">        roam: <span class="literal">true</span>,</span><br><span class="line">        mapStyle: &#123;</span><br><span class="line">            styleJson: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;land&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#091220ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;water&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#113549ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;green&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#0e1b30ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;building&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;building&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffb3&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;building&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#dadadab3&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subwaystation&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#b15454B2&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;education&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#e4f1f1ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;medical&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#f0dedeff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;scenicspots&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#e2efe5ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;weight&quot;</span>: <span class="number">4</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#f7c54dff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#fed669ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#8f5a33ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;highway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.icon&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;weight&quot;</span>: <span class="number">2</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#d8d8d8ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffeebbff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#525355ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;arterial&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;weight&quot;</span>: <span class="number">1</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#d8d8d8ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#979c9aff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;railway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;weight&quot;</span>: <span class="number">1</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;railway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#123c52ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;railway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#12223dff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;weight&quot;</span>: <span class="number">1</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#d8d8d8ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffff00&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#979c9aff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;subway&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;continent&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;continent&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.icon&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;continent&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#333333ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;continent&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;city&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.icon&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;city&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;city&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#454d50ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;city&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;town&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.icon&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;town&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;town&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#454d50ff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;town&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;road&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#12223dff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;poilabel&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;districtlabel&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;road&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;on&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;road&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;road&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffff00&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;district&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;poilabel&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.icon&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;visibility&quot;</span>: <span class="string">&quot;off&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;poilabel&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.fill&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#2dc4bbff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;poilabel&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffff00&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;manmade&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#12223dff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;districtlabel&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;labels.text.stroke&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;entertainment&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ffffffff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, &#123;</span><br><span class="line">                    <span class="string">&quot;featureType&quot;</span>: <span class="string">&quot;shopping&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;elementType&quot;</span>: <span class="string">&quot;geometry&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;stylers&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#12223dff&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    series :[],</span><br><span class="line">&#125;;</span><br><span class="line">option &amp;&amp; myChart.setOption(option);</span><br><span class="line"><span class="keyword">let</span> state_name=<span class="string">&#x27;汉堡&#x27;</span></span><br><span class="line"><span class="comment">//获得bmap</span></span><br><span class="line"><span class="keyword">var</span> bmap = myChart.getModel().getComponent(<span class="string">&#x27;bmap&#x27;</span>).getBMap();</span><br><span class="line"><span class="comment">//    首先清空覆盖物</span></span><br><span class="line"><span class="keyword">var</span> allOverlay = bmap.getOverlays();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; allOverlay.length -<span class="number">1</span>; i++)&#123;</span><br><span class="line">    bmap.removeOverlay(allOverlay[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//添加折线,并进行位置的修改</span></span><br><span class="line"><span class="comment">//    绿色的折线</span></span><br><span class="line"><span class="keyword">var</span> curve = <span class="keyword">new</span> BMap.Polyline(allPoints[state_name], &#123;<span class="attr">strokeColor</span>:<span class="string">&quot;#1aff00&quot;</span>,<span class="attr">strokeWeight</span>:<span class="number">8</span>, <span class="attr">strokeOpacity</span>:<span class="number">1</span>&#125;);</span><br><span class="line">bmap.addOverlay(curve);</span><br><span class="line"><span class="keyword">var</span> curve_red = <span class="keyword">new</span> BMap.Polyline([allPoints[state_name][<span class="number">3</span>], allPoints[state_name][<span class="number">4</span>]], &#123;<span class="attr">strokeColor</span>:<span class="string">&quot;#ff0000&quot;</span>,<span class="attr">strokeWeight</span>:<span class="number">8</span>, <span class="attr">strokeOpacity</span>:<span class="number">1</span>&#125;);</span><br><span class="line">bmap.addOverlay(curve_red);</span><br><span class="line"><span class="comment">//黄色的折线</span></span><br><span class="line"><span class="keyword">var</span> curve_yellow = <span class="keyword">new</span> BMap.Polyline([ allPoints[state_name][<span class="number">1</span>],allPoints[state_name][<span class="number">2</span>]], &#123;<span class="attr">strokeColor</span>:<span class="string">&quot;#ffb700&quot;</span>,<span class="attr">strokeWeight</span>:<span class="number">8</span>, <span class="attr">strokeOpacity</span>:<span class="number">1</span>&#125;);</span><br><span class="line">bmap.addOverlay(curve_yellow);</span><br><span class="line"><span class="comment">// 绘制中心点</span></span><br><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> BMap.Marker(centers[state_name]);</span><br><span class="line">bmap.addOverlay(p);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>前端,echarts,百度地图，添加图层</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>post title with whitespace</title>
    <link href="/2021/04/29/post-title-with-whitespace/"/>
    <url>/2021/04/29/post-title-with-whitespace/</url>
    
    <content type="html"><![CDATA[<p>nihaoansdasj</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/04/28/hello-world/"/>
    <url>/2021/04/28/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
